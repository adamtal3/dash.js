{"version":3,"sources":["../../../externals/cea608-parser.js"],"names":["exports","specialCea608CharsCodes","getCharForByte","byte","charCode","hasOwnProperty","String","fromCharCode","NR_ROWS","NR_COLS","rowsLowCh1","rowsHighCh1","rowsLowCh2","rowsHighCh2","backgroundColors","logger","verboseFilter","time","verboseLevel","setTime","newTime","log","severity","msg","minLevel","console","numArrayToHexArray","numArray","hexArray","j","length","push","toString","PenState","foreground","underline","italics","background","flash","prototype","reset","setStyles","styles","attribs","i","style","isDefault","equals","other","copy","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","Row","chars","pos","currPenState","equal","empty","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","char","clearFromPos","startPos","clear","clearToEndOfRow","getTextString","join","setPenStyles","currChar","CaptionScreen","rows","currRow","nrRollUpRows","row","setPen","setPAC","pacData","JSON","stringify","newRow","indent","prevPos","Math","max","color","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRowIndex","topRow","splice","asOneRow","displayText","text","rowNr","rowText","trim","getTextAndFormat","Cea608Channel","channelNumber","outputFilter","chNr","mode","verbose","displayedMemory","nonDisplayedMemory","lastOutputScreen","currRollUpRow","writeScreen","cueStartTime","modes","lastCueEndTime","getHandler","setHandler","newHandler","setMode","newMode","insertChars","screen","outputDataUpdate","cc_RCL","cc_BS","cc_AOF","cc_AON","cc_DER","cc_RU","cc_FON","cc_RDC","cc_TR","cc_RTD","cc_EDM","cc_CR","cc_ENM","cc_EOC","tmp","cc_TO","nrCols","cc_MIDROW","secondByte","colorIndex","floor","colors","t","updateData","newCue","cueSplitAtTime","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","startTime","lastTime","dataCounters","index","addData","byteList","cmdFound","a","b","charsFound","padding","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","channel","cmd","cond1","cond2","case1","case2","interpretPAC","pacIndex","channelNr","charCodes","charCode1","charCode2","oneCode","hexCodes","findCea608Nalus","raw","size","nalSize","cursor","nalType","cea608NaluRanges","isCEA608SEI","payloadType","payloadSize","countryCode","getUint8","providerCode","getUint16","userIdentifier","getUint32","userDataTypeCode","extractCea608DataFromRange","cea608Range","fieldData","ccCount","ccValid","ccType","ccData1","ccData2","cea608parser"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BC,WAASA,OAAT,EAAkB;;AAEf;;AAEA;;;;AAIA,QAAIC,0BAA0B;AAC1B,cAAO,IADmB,EACb;AACb,cAAO,IAFmB,EAEb;AACb,cAAO,IAHmB,EAGb;AACb,cAAO,IAJmB,EAIb;AACb,cAAO,IALmB,EAKb;AACb,cAAO,IANmB,EAMb;AACb,cAAO,IAPmB,EAOb;AACb,cAAO,IARmB,EAQb;AACb,cAAO,IATmB,EASb;AACb,cAAO,MAVmB,EAUX;AACf;AACA;AACA;AACA,cAAO,IAdmB,EAcb;AACb,cAAO,IAfmB,EAeb;AACb,cAAO,IAhBmB,EAgBb;AACb,cAAO,IAjBmB,EAiBb;AACb,cAAO,MAlBmB,EAkBX;AACf,cAAO,IAnBmB,EAmBb;AACb,cAAO,IApBmB,EAoBb;AACb,cAAO,MArBmB,EAqBX;AACf,cAAO,IAtBmB,EAsBb;AACb,cAAO,IAvBmB,EAuBb;AACb,cAAO,IAxBmB,EAwBb;AACb,cAAO,IAzBmB,EAyBb;AACb,cAAO,IA1BmB,EA0Bb;AACb,cAAO,IA3BmB,EA2Bb;AACb,cAAO,IA5BmB,EA4Bb;AACb,cAAO,IA7BmB,EA6Bb;AACb;AACA;AACA,cAAO,IAhCmB,EAgCb;AACb,cAAO,IAjCmB,EAiCb;AACb,cAAO,IAlCmB,EAkCb;AACb,cAAO,IAnCmB,EAmCb;AACb,cAAO,IApCmB,EAoCb;AACb,cAAO,IArCmB,EAqCb;AACb,cAAO,MAtCmB,EAsCX;AACf,cAAO,IAvCmB,EAuCb;AACb,cAAO,IAxCmB,EAwCb;AACb,cAAO,MAzCmB,EAyCX;AACf,cAAO,MA1CmB,EA0CX;AACf,cAAO,IA3CmB,EA2Cb;AACb,cAAO,MA5CmB,EA4CX;AACf,cAAO,MA7CmB,EA6CX;AACf,cAAO,MA9CmB,EA8CX;AACf,cAAO,MA/CmB,EA+CX;AACf,cAAO,IAhDmB,EAgDb;AACb,cAAO,IAjDmB,EAiDb;AACb,cAAO,IAlDmB,EAkDb;AACb,cAAO,IAnDmB,EAmDb;AACb,cAAO,IApDmB,EAoDb;AACb,cAAO,IArDmB,EAqDb;AACb,cAAO,IAtDmB,EAsDb;AACb,cAAO,IAvDmB,EAuDb;AACb,cAAO,IAxDmB,EAwDb;AACb,cAAO,IAzDmB,EAyDb;AACb,cAAO,IA1DmB,EA0Db;AACb,cAAO,IA3DmB,EA2Db;AACb,cAAO,IA5DmB,EA4Db;AACb,cAAO,IA7DmB,EA6Db;AACb,cAAO,IA9DmB,EA8Db;AACb,cAAO,IA/DmB,EA+Db;AACb;AACA;AACA,cAAO,IAlEmB,EAkEb;AACb,cAAO,IAnEmB,EAmEb;AACb,cAAO,IApEmB,EAoEb;AACb,cAAO,IArEmB,EAqEb;AACb,cAAO,IAtEmB,EAsEb;AACb,cAAO,IAvEmB,EAuEb;AACb,cAAO,IAxEmB,EAwEb;AACb,cAAO,IAzEmB,EAyEb;AACb,cAAO,IA1EmB,EA0Eb;AACb,cAAO,IA3EmB,EA2Eb;AACb,cAAO,IA5EmB,EA4Eb;AACb,cAAO,IA7EmB,EA6Eb;AACb,cAAO,IA9EmB,EA8Eb;AACb,cAAO,IA/EmB,EA+Eb;AACb,cAAO,IAhFmB,EAgFb;AACb,cAAO,MAjFmB,EAiFX;AACf,cAAO,IAlFmB,EAkFb;AACb,cAAO,IAnFmB,EAmFb;AACb,cAAO,IApFmB,EAoFb;AACb,cAAO,IArFmB,EAqFb;AACb,cAAO,IAtFmB,EAsFb;AACb,cAAO,IAvFmB,EAuFb;AACb,cAAO,IAxFmB,EAwFb;AACb,cAAO,MAzFmB,EAyFX;AACf,cAAO,IA1FmB,EA0Fb;AACb,cAAO,IA3FmB,EA2Fb;AACb,cAAO,IA5FmB,EA4Fb;AACb,cAAO,IA7FmB,EA6Fb;AACb,cAAO,MA9FmB,EA8FX;AACf,cAAO,MA/FmB,EA+FX;AACf,cAAO,MAhGmB,EAgGX;AACf,cAAO,MAjGmB,CAiGZ;AAjGY,KAA9B;;AAoGA;;;AAGA,QAAIC,iBAAiB,UAASC,IAAT,EAAe;AAChC,YAAIC,WAAWD,IAAf;AACA,YAAIF,wBAAwBI,cAAxB,CAAuCF,IAAvC,CAAJ,EAAkD;AAC9CC,uBAAWH,wBAAwBE,IAAxB,CAAX;AACH;AACD,eAAOG,OAAOC,YAAP,CAAoBH,QAApB,CAAP;AACH,KAND;;AAQA,QAAII,UAAU,EAAd;AAAA,QACIC,UAAU,EADd;AAEA;AACA,QAAIC,aAAa,EAAC,MAAO,CAAR,EAAW,MAAO,CAAlB,EAAqB,MAAO,CAA5B,EAA+B,MAAO,CAAtC,EAAyC,MAAO,CAAhD,EAAmD,MAAO,EAA1D,EAA8D,MAAO,EAArE,EAAyE,MAAO,EAAhF,EAAjB;AACA,QAAIC,cAAc,EAAC,MAAO,CAAR,EAAW,MAAO,CAAlB,EAAqB,MAAO,CAA5B,EAA+B,MAAO,CAAtC,EAAyC,MAAO,EAAhD,EAAoD,MAAO,EAA3D,EAA+D,MAAO,EAAtE,EAAlB;AACA,QAAIC,aAAa,EAAC,MAAO,CAAR,EAAW,MAAO,CAAlB,EAAqB,MAAO,CAA5B,EAA+B,MAAO,CAAtC,EAAyC,MAAO,CAAhD,EAAmD,MAAO,EAA1D,EAA8D,MAAO,EAArE,EAAyE,MAAO,EAAhF,EAAjB;AACA,QAAIC,cAAc,EAAC,MAAO,CAAR,EAAW,MAAO,CAAlB,EAAqB,MAAO,CAA5B,EAA+B,MAAO,CAAtC,EAAyC,MAAO,EAAhD,EAAoD,MAAO,EAA3D,EAA+D,MAAO,EAAtE,EAAlB;;AAEA,QAAIC,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,QAA1C,EAAoD,SAApD,EAA+D,OAA/D,EAAwE,aAAxE,CAAvB;;AAEA;;;AAGA,QAAIC,SAAS;AACTC,uBAAgB,EAAC,QAAS,CAAV,EAAa,SAAU,CAAvB,EAA0B,QAAS,CAAnC,EAAsC,WAAY,CAAlD,EAAqD,QAAS,CAA9D,EAAiE,SAAU,CAA3E,EADP;AAETC,cAAO,IAFE;AAGTC,sBAAe,CAHN,EAGS;AAClBC,iBAAU,UAASC,OAAT,EAAkB;AACxB,iBAAKH,IAAL,GAAYG,OAAZ;AACH,SANQ;AAOTC,aAAM,UAASC,QAAT,EAAmBC,GAAnB,EAAwB;AAC1B,gBAAIC,WAAW,KAAKR,aAAL,CAAmBM,QAAnB,CAAf;AACA,gBAAI,KAAKJ,YAAL,IAAqBM,QAAzB,EAAmC;AAC/BC,wBAAQJ,GAAR,CAAY,KAAKJ,IAAL,GAAY,IAAZ,GAAmBK,QAAnB,GAA8B,IAA9B,GAAqCC,GAAjD;AACH;AACJ;AAZQ,KAAb;;AAeA,QAAIG,qBAAqB,UAASC,QAAT,EAAmB;AACxC,YAAIC,WAAW,EAAf;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAASG,MAA7B,EAAqCD,GAArC,EAA0C;AACtCD,qBAASG,IAAT,CAAcJ,SAASE,CAAT,EAAYG,QAAZ,CAAqB,EAArB,CAAd;AACH;AACD,eAAOJ,QAAP;AACH,KAND;;AAQA;;;;AAIA,QAAIK,WAAW,UAASC,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,UAAzC,EAAqDC,KAArD,EAA4D;AACvE,aAAKJ,UAAL,GAAkBA,cAAc,OAAhC;AACA,aAAKC,SAAL,GAAiBA,aAAa,KAA9B;AACA,aAAKC,OAAL,GAAeA,WAAW,KAA1B;AACA,aAAKC,UAAL,GAAkBA,cAAc,OAAhC;AACA,aAAKC,KAAL,GAAaA,SAAS,KAAtB;AACH,KAND;;AAQAL,aAASM,SAAT,GAAqB;;AAEjBC,eAAQ,YAAW;AACf,iBAAKN,UAAL,GAAkB,OAAlB;AACA,iBAAKC,SAAL,GAAiB,KAAjB;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA,iBAAKC,UAAL,GAAkB,OAAlB;AACA,iBAAKC,KAAL,GAAa,KAAb;AACH,SARgB;;AAUjBG,mBAAY,UAASC,MAAT,EAAiB;AACzB,gBAAIC,UAAU,CAAC,YAAD,EAAe,WAAf,EAA4B,SAA5B,EAAuC,YAAvC,EAAqD,OAArD,CAAd;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAID,QAAQb,MAA7B,EAAqCc,GAArC,EAA0C;AACtC,oBAAIC,QAAQF,QAAQC,CAAR,CAAZ;AACA,oBAAIF,OAAOrC,cAAP,CAAsBwC,KAAtB,CAAJ,EAAkC;AAC9B,yBAAKA,KAAL,IAAcH,OAAOG,KAAP,CAAd;AACH;AACJ;AACJ,SAlBgB;;AAoBjBC,mBAAY,YAAW;AACnB,mBAAQ,KAAKZ,UAAL,KAAoB,OAApB,IAA+B,CAAC,KAAKC,SAArC,IAAkD,CAAC,KAAKC,OAAxD,IACA,KAAKC,UAAL,KAAoB,OADpB,IAC+B,CAAC,KAAKC,KAD7C;AAEH,SAvBgB;;AAyBjBS,gBAAS,UAASC,KAAT,EAAgB;AACrB,mBAAU,KAAKd,UAAL,KAAoBc,MAAMd,UAA3B,IACC,KAAKC,SAAL,KAAmBa,MAAMb,SAD1B,IAEC,KAAKC,OAAL,KAAiBY,MAAMZ,OAFxB,IAGC,KAAKC,UAAL,KAAoBW,MAAMX,UAH3B,IAIC,KAAKC,KAAL,KAAeU,MAAMV,KAJ/B;AAKH,SA/BgB;;AAiCjBW,cAAO,UAASC,WAAT,EAAsB;AACzB,iBAAKhB,UAAL,GAAkBgB,YAAYhB,UAA9B;AACA,iBAAKC,SAAL,GAAiBe,YAAYf,SAA7B;AACA,iBAAKC,OAAL,GAAec,YAAYd,OAA3B;AACA,iBAAKC,UAAL,GAAkBa,YAAYb,UAA9B;AACA,iBAAKC,KAAL,GAAaY,YAAYZ,KAAzB;AACH,SAvCgB;;AAyCjBN,kBAAU,YAAW;AACjB,mBAAQ,WAAW,KAAKE,UAAhB,GAA6B,cAA7B,GAA8C,KAAKC,SAAnD,GAA+D,YAA/D,GAA8E,KAAKC,OAAnF,GACJ,eADI,GACc,KAAKC,UADnB,GACgC,UADhC,GAC6C,KAAKC,KAD1D;AAEH;AA5CgB,KAArB;;AA+CA;;;;AAIA,QAAIa,oBAAoB,UAASC,KAAT,EAAgBlB,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4DC,KAA5D,EAAmE;AACvF,aAAKc,KAAL,GAAaA,SAAS,GAAtB,CADuF,CAC5D;AAC3B,aAAKC,QAAL,GAAgB,IAAIpB,QAAJ,CAAaC,UAAb,EAAyBC,SAAzB,EAAmCC,OAAnC,EAA4CC,UAA5C,EAAwDC,KAAxD,CAAhB;AACH,KAHD;;AAKAa,sBAAkBZ,SAAlB,GAA8B;;AAE1BC,eAAO,YAAW;AACd,iBAAKY,KAAL,GAAa,GAAb;AACA,iBAAKC,QAAL,CAAcb,KAAd;AACH,SALyB;;AAO1Bc,iBAAS,UAASF,KAAT,EAAgBF,WAAhB,EAA6B;AAClC,iBAAKE,KAAL,GAAaA,KAAb;AACA,iBAAKC,QAAL,CAAcJ,IAAd,CAAmBC,WAAnB;AACH,SAVyB;;AAY1BK,qBAAa,UAASL,WAAT,EAAsB;AAC/B,iBAAKG,QAAL,CAAcJ,IAAd,CAAmBC,WAAnB;AACH,SAdyB;;AAgB1BH,gBAAQ,UAASC,KAAT,EAAgB;AACpB,mBAAO,KAAKI,KAAL,KAAeJ,MAAMI,KAArB,IAA8B,KAAKC,QAAL,CAAcN,MAAd,CAAqBC,MAAMK,QAA3B,CAArC;AACH,SAlByB;;AAoB1BJ,cAAM,UAASO,OAAT,EAAkB;AACpB,iBAAKJ,KAAL,GAAaI,QAAQJ,KAArB;AACA,iBAAKC,QAAL,CAAcJ,IAAd,CAAmBO,QAAQH,QAA3B;AACH,SAvByB;;AAyB1BI,iBAAU,YAAW;AACjB,mBAAO,KAAKL,KAAL,KAAe,GAAf,IAAsB,KAAKC,QAAL,CAAcP,SAAd,EAA7B;AACH;AA3ByB,KAA9B;;AA8BA;;;;AAIA,QAAIY,MAAM,YAAW;AACjB,aAAKC,KAAL,GAAa,EAAb;AACA,aAAK,IAAIf,IAAI,CAAb,EAAiBA,IAAInC,OAArB,EAA+BmC,GAA/B,EAAoC;AAChC,iBAAKe,KAAL,CAAW5B,IAAX,CAAgB,IAAIoB,iBAAJ,EAAhB;AACH;AACD,aAAKS,GAAL,GAAW,CAAX;AACA,aAAKC,YAAL,GAAoB,IAAI5B,QAAJ,EAApB;AACH,KAPD;;AASAyB,QAAInB,SAAJ,GAAgB;;AAEZQ,gBAAQ,UAASC,KAAT,EAAgB;AACpB,gBAAIc,QAAQ,IAAZ;AACA,iBAAK,IAAIlB,IAAI,CAAb,EAAiBA,IAAInC,OAArB,EAA8BmC,GAA9B,EAAoC;AAChC,oBAAI,CAAC,KAAKe,KAAL,CAAWf,CAAX,EAAcG,MAAd,CAAqBC,MAAMW,KAAN,CAAYf,CAAZ,CAArB,CAAL,EAA2C;AACvCkB,4BAAQ,KAAR;AACA;AACH;AACJ;AACD,mBAAOA,KAAP;AACH,SAXW;;AAaZb,cAAM,UAASD,KAAT,EAAgB;AAClB,iBAAK,IAAIJ,IAAI,CAAb,EAAiBA,IAAInC,OAArB,EAA8BmC,GAA9B,EAAoC;AAChC,qBAAKe,KAAL,CAAWf,CAAX,EAAcK,IAAd,CAAmBD,MAAMW,KAAN,CAAYf,CAAZ,CAAnB;AACH;AACJ,SAjBW;;AAmBZa,iBAAU,YAAW;AACjB,gBAAIM,QAAQ,IAAZ;AACA,iBAAK,IAAInB,IAAI,CAAb,EAAiBA,IAAInC,OAArB,EAA8BmC,GAA9B,EAAoC;AAChC,oBAAI,CAAC,KAAKe,KAAL,CAAWf,CAAX,EAAca,OAAd,EAAL,EAA8B;AAC1BM,4BAAQ,KAAR;AACA;AACH;AACJ;AACD,mBAAOA,KAAP;AACH,SA5BW;;AA8BZ;;;AAGAC,mBAAY,UAASC,MAAT,EAAiB;AACzB,gBAAI,KAAKL,GAAL,KAAaK,MAAjB,EAAyB;AACrB,qBAAKL,GAAL,GAAWK,MAAX;AACH;AACD,gBAAI,KAAKL,GAAL,GAAW,CAAf,EAAkB;AACd7C,uBAAOM,GAAP,CAAW,OAAX,EAAoB,8BAA8B,KAAKuC,GAAvD;AACA,qBAAKA,GAAL,GAAW,CAAX;AACH,aAHD,MAGO,IAAI,KAAKA,GAAL,GAAWnD,OAAf,EAAwB;AAC3BM,uBAAOM,GAAP,CAAW,OAAX,EAAoB,+BAA+B,KAAKuC,GAAxD;AACA,qBAAKA,GAAL,GAAWnD,OAAX;AACH;AACJ,SA5CW;;AA8CZ;;;AAGAyD,oBAAa,UAASC,MAAT,EAAiB;AAC1B,gBAAIC,SAAS,KAAKR,GAAL,GAAWO,MAAxB;AACA,gBAAIA,SAAS,CAAb,EAAgB;AACZ,qBAAK,IAAIvB,IAAI,KAAKgB,GAAL,GAAS,CAAtB,EAAyBhB,IAAIwB,SAAO,CAApC,EAAwCxB,GAAxC,EAA6C;AACzC,yBAAKe,KAAL,CAAWf,CAAX,EAAcW,WAAd,CAA0B,KAAKM,YAA/B;AACH;AACJ;AACD,iBAAKG,SAAL,CAAeI,MAAf;AACH,SAzDW;;AA2DZ;;;AAGAC,mBAAY,YAAY;AACpB,iBAAKH,UAAL,CAAgB,CAAC,CAAjB;AACA,iBAAKP,KAAL,CAAW,KAAKC,GAAhB,EAAqBN,OAArB,CAA6B,GAA7B,EAAkC,KAAKO,YAAvC;AACH,SAjEW;;AAmEZS,oBAAY,UAASnE,IAAT,EAAe;AACvB,gBAAIA,QAAQ,IAAZ,EAAkB;AAAE;AAChB,qBAAKkE,SAAL;AACH;AACD,gBAAIE,OAAOrE,eAAeC,IAAf,CAAX;AACA,gBAAI,KAAKyD,GAAL,IAAYnD,OAAhB,EAAyB;AACrBM,uBAAOM,GAAP,CAAW,OAAX,EAAoB,mBAAmBlB,KAAK6B,QAAL,CAAc,EAAd,CAAnB,GACR,IADQ,GACDuC,IADC,GACM,gBADN,GACyB,KAAKX,GAD9B,GACoC,gBADxD;AAEA;AACH;AACD,iBAAKD,KAAL,CAAW,KAAKC,GAAhB,EAAqBN,OAArB,CAA6BiB,IAA7B,EAAmC,KAAKV,YAAxC;AACA,iBAAKK,UAAL,CAAgB,CAAhB;AACH,SA/EW;;AAiFZM,sBAAe,UAASC,QAAT,EAAmB;AAC9B,gBAAI7B,CAAJ;AACA,iBAAKA,IAAI6B,QAAT,EAAoB7B,IAAInC,OAAxB,EAAkCmC,GAAlC,EAAuC;AACnC,qBAAKe,KAAL,CAAWf,CAAX,EAAcJ,KAAd;AACH;AACJ,SAtFW;;AAwFZkC,eAAQ,YAAW;AACf,iBAAKF,YAAL,CAAkB,CAAlB;AACA,iBAAKZ,GAAL,GAAW,CAAX;AACA,iBAAKC,YAAL,CAAkBrB,KAAlB;AACH,SA5FW;;AA8FZmC,yBAAkB,YAAW;AACzB,iBAAKH,YAAL,CAAkB,KAAKZ,GAAvB;AACH,SAhGW;;AAkGZgB,uBAAe,YAAW;AACtB,gBAAIjB,QAAQ,EAAZ;AACA,gBAAII,QAAQ,IAAZ;AACA,iBAAK,IAAInB,IAAI,CAAb,EAAiBA,IAAInC,OAArB,EAA+BmC,GAA/B,EAAoC;AAChC,oBAAI2B,OAAO,KAAKZ,KAAL,CAAWf,CAAX,EAAcQ,KAAzB;AACA,oBAAImB,SAAS,GAAb,EAAkB;AACdR,4BAAQ,KAAR;AACH;AACDJ,sBAAM5B,IAAN,CAAWwC,IAAX;AACH;AACD,gBAAIR,KAAJ,EAAW;AACP,uBAAO,EAAP;AACH,aAFD,MAEO;AACH,uBAAOJ,MAAMkB,IAAN,CAAW,EAAX,CAAP;AACH;AACJ,SAjHW;;AAmHZC,sBAAc,UAASpC,MAAT,EAAiB;AAC3B,iBAAKmB,YAAL,CAAkBpB,SAAlB,CAA4BC,MAA5B;AACA,gBAAIqC,WAAW,KAAKpB,KAAL,CAAW,KAAKC,GAAhB,CAAf;AACAmB,qBAASxB,WAAT,CAAqB,KAAKM,YAA1B;AACH;AAvHW,KAAhB;;AA0HA;;;;AAIA,QAAImB,gBAAgB,YAAW;;AAE3B,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAK,IAAIrC,IAAI,CAAb,EAAiBA,IAAKpC,OAAtB,EAA+BoC,GAA/B,EAAoC;AAChC,iBAAKqC,IAAL,CAAUlD,IAAV,CAAe,IAAI2B,GAAJ,EAAf,EADgC,CACL;AAC9B;AACD,aAAKwB,OAAL,GAAe1E,UAAU,CAAzB;AACA,aAAK2E,YAAL,GAAoB,IAApB;AACA,aAAK3C,KAAL;AACH,KATD;;AAWAwC,kBAAczC,SAAd,GAA0B;;AAEtBC,eAAQ,YAAW;AACf,iBAAK,IAAII,IAAI,CAAb,EAAiBA,IAAIpC,OAArB,EAA+BoC,GAA/B,EAAoC;AAChC,qBAAKqC,IAAL,CAAUrC,CAAV,EAAa8B,KAAb;AACH;AACD,iBAAKQ,OAAL,GAAe1E,UAAU,CAAzB;AACH,SAPqB;;AAStBuC,gBAAS,UAASC,KAAT,EAAgB;AACrB,gBAAIc,QAAQ,IAAZ;AACA,iBAAK,IAAIlB,IAAI,CAAb,EAAiBA,IAAIpC,OAArB,EAA+BoC,GAA/B,EAAoC;AAChC,oBAAI,CAAC,KAAKqC,IAAL,CAAUrC,CAAV,EAAaG,MAAb,CAAoBC,MAAMiC,IAAN,CAAWrC,CAAX,CAApB,CAAL,EAAyC;AACrCkB,4BAAQ,KAAR;AACA;AACH;AACJ;AACD,mBAAOA,KAAP;AACH,SAlBqB;;AAoBtBb,cAAO,UAASD,KAAT,EAAgB;AACnB,iBAAK,IAAIJ,IAAI,CAAb,EAAiBA,IAAIpC,OAArB,EAA+BoC,GAA/B,EAAoC;AAChC,qBAAKqC,IAAL,CAAUrC,CAAV,EAAaK,IAAb,CAAkBD,MAAMiC,IAAN,CAAWrC,CAAX,CAAlB;AACH;AACJ,SAxBqB;;AA0BtBa,iBAAU,YAAW;AACjB,gBAAIM,QAAQ,IAAZ;AACA,iBAAK,IAAInB,IAAI,CAAb,EAAiBA,IAAIpC,OAArB,EAA+BoC,GAA/B,EAAoC;AAChC,oBAAI,CAAC,KAAKqC,IAAL,CAAUrC,CAAV,EAAaa,OAAb,EAAL,EAA6B;AACzBM,4BAAQ,KAAR;AACA;AACH;AACJ;AACD,mBAAOA,KAAP;AACH,SAnCqB;;AAqCtBM,mBAAY,YAAW;AACnB,gBAAIe,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAIf,SAAJ;AACH,SAxCqB;;AA0CtBM,yBAAkB,YAAW;AACzB,gBAAIS,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAIT,eAAJ;AACH,SA7CqB;;AA+CtB;;;AAGAL,oBAAa,UAASC,IAAT,EAAe;AACxB,gBAAIa,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAId,UAAJ,CAAeC,IAAf;AACH,SArDqB;;AAuDtBc,gBAAS,UAAS3C,MAAT,EAAiB;AACtB,gBAAI0C,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAIN,YAAJ,CAAiBpC,MAAjB;AACH,SA1DqB;;AA4DtBwB,oBAAa,UAASC,MAAT,EAAiB;AAC1B,gBAAIiB,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAIlB,UAAJ,CAAeC,MAAf;AACH,SA/DqB;;AAiEtBH,mBAAY,UAASC,MAAT,EAAiB;AACzBlD,mBAAOM,GAAP,CAAW,MAAX,EAAmB,gBAAgB4C,MAAnC;AACA,gBAAImB,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACAE,gBAAIpB,SAAJ,CAAcC,MAAd;AACH,SArEqB;;AAuEtBqB,gBAAS,UAASC,OAAT,EAAkB;AACvBxE,mBAAOM,GAAP,CAAW,MAAX,EAAmB,eAAemE,KAAKC,SAAL,CAAeF,OAAf,CAAlC;AACA,gBAAIG,SAASH,QAAQH,GAAR,GAAc,CAA3B;AACA,gBAAI,KAAKD,YAAL,IAAsBO,SAAS,KAAKP,YAAL,GAAoB,CAAvD,EAA0D;AAClDO,yBAAS,KAAKP,YAAL,GAAkB,CAA3B;AACP;AACD,iBAAKD,OAAL,GAAeQ,MAAf;AACA,gBAAIN,MAAM,KAAKH,IAAL,CAAU,KAAKC,OAAf,CAAV;AACA,gBAAIK,QAAQI,MAAR,KAAmB,IAAvB,EAA6B;AACzB,oBAAIA,SAASJ,QAAQI,MAArB;AACA,oBAAIC,UAAUC,KAAKC,GAAL,CAASH,SAAO,CAAhB,EAAmB,CAAnB,CAAd;AACAP,oBAAIpB,SAAJ,CAAcuB,QAAQI,MAAtB;AACAJ,wBAAQQ,KAAR,GAAgBX,IAAIzB,KAAJ,CAAUiC,OAAV,EAAmBvC,QAAnB,CAA4BnB,UAA5C;AACH;AACD,gBAAIQ,SAAS,EAACR,YAAaqD,QAAQQ,KAAtB,EAA6B5D,WAAYoD,QAAQpD,SAAjD,EAA4DC,SAAUmD,QAAQnD,OAA9E,EAAuFC,YAAa,OAApG,EAA6GC,OAAQ,KAArH,EAAb;AACA,iBAAK+C,MAAL,CAAY3C,MAAZ;AACH,SAvFqB;;AAyFtB;;;AAGAsD,oBAAa,UAASC,OAAT,EAAkB;;AAE3BlF,mBAAOM,GAAP,CAAW,MAAX,EAAmB,eAAemE,KAAKC,SAAL,CAAeQ,OAAf,CAAlC;AACA,iBAAK5B,SAAL;AACA,iBAAKgB,MAAL,CAAYY,OAAZ;AACA,iBAAK3B,UAAL,CAAgB,IAAhB,EAL2B,CAKJ;AAC1B,SAlGqB;;AAoGtB4B,uBAAgB,UAASC,MAAT,EAAiB;AAC7B,iBAAKhB,YAAL,GAAoBgB,MAApB;AACH,SAtGqB;;AAwGtBC,gBAAS,YAAW;AAChB,gBAAI,KAAKjB,YAAL,KAAsB,IAA1B,EAAgC;AAC5BpE,uBAAOM,GAAP,CAAW,OAAX,EAAoB,sCAApB;AACA,uBAF4B,CAEpB;AACX;AACDN,mBAAOM,GAAP,CAAW,MAAX,EAAmB,KAAKgF,cAAL,EAAnB;AACA,gBAAIC,cAAc,KAAKpB,OAAL,GAAe,CAAf,GAAmB,KAAKC,YAA1C;AACA,gBAAIoB,SAAS,KAAKtB,IAAL,CAAUuB,MAAV,CAAiBF,WAAjB,EAA8B,CAA9B,EAAiC,CAAjC,CAAb;AACAC,mBAAO7B,KAAP;AACA,iBAAKO,IAAL,CAAUuB,MAAV,CAAiB,KAAKtB,OAAtB,EAA+B,CAA/B,EAAkCqB,MAAlC;AACAxF,mBAAOM,GAAP,CAAW,MAAX,EAAmB,YAAnB;AACA;AACH,SApHqB;;AAsHvB;;;AAGCgF,wBAAiB,UAASI,QAAT,EAAmB;AAChCA,uBAAWA,YAAY,KAAvB;AACA,gBAAIC,cAAc,EAAlB;AACA,gBAAIC,OAAO,EAAX;AACA,gBAAIC,QAAQ,CAAC,CAAb;AACA,iBAAK,IAAIhE,IAAI,CAAb,EAAiBA,IAAIpC,OAArB,EAA+BoC,GAA/B,EAAoC;AAChC,oBAAIiE,UAAU,KAAK5B,IAAL,CAAUrC,CAAV,EAAagC,aAAb,EAAd;AACA,oBAAIiC,OAAJ,EAAa;AACTD,4BAAQhE,IAAE,CAAV;AACA,wBAAI6D,QAAJ,EAAc;AACVC,oCAAY3E,IAAZ,CAAiB,SAAS6E,KAAT,GAAiB,KAAjB,GAAyBC,OAAzB,GAAmC,GAApD;AACH,qBAFD,MAEO;AACHH,oCAAY3E,IAAZ,CAAiB8E,QAAQC,IAAR,EAAjB;AACH;AACJ;AACJ;AACD,gBAAIJ,YAAY5E,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,oBAAI2E,QAAJ,EAAc;AACVE,2BAAO,MAAMD,YAAY7B,IAAZ,CAAiB,KAAjB,CAAN,GAAgC,GAAvC;AACH,iBAFD,MAEO;AACH8B,2BAAOD,YAAY7B,IAAZ,CAAiB,IAAjB,CAAP;AACH;AACJ;AACD,mBAAO8B,IAAP;AACH,SAjJqB;;AAmJtBI,0BAAmB,YAAW;AAC1B,mBAAO,KAAK9B,IAAZ;AACH;AArJqB,KAA1B;;AAwJA;;;;;;AAMA,QAAI+B,gBAAgB,UAASC,aAAT,EAAwBC,YAAxB,EAAsC;;AAEtD,aAAKC,IAAL,GAAYF,aAAZ;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKE,IAAL,GAAY,IAAZ;AACA,aAAKC,OAAL,GAAe,CAAf;AACA,aAAKC,eAAL,GAAuB,IAAItC,aAAJ,EAAvB;AACA,aAAKuC,kBAAL,GAA0B,IAAIvC,aAAJ,EAA1B;AACA,aAAKwC,gBAAL,GAAwB,IAAIxC,aAAJ,EAAxB;AACA,aAAKyC,aAAL,GAAqB,KAAKH,eAAL,CAAqBrC,IAArB,CAA0BzE,UAAQ,CAAlC,CAArB;AACA,aAAKkH,WAAL,GAAmB,KAAKJ,eAAxB;AACA,aAAKF,IAAL,GAAY,IAAZ;AACA,aAAKO,YAAL,GAAoB,IAApB,CAZsD,CAY5B;AAC7B,KAbD;;AAeAX,kBAAczE,SAAd,GAA0B;;AAEtBqF,eAAQ,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC,EAAiD,WAAjD,CAFc;;AAItBpF,eAAQ,YAAW;AACf,iBAAK4E,IAAL,GAAY,IAAZ;AACA,iBAAKE,eAAL,CAAqB9E,KAArB;AACA,iBAAK+E,kBAAL,CAAwB/E,KAAxB;AACA,iBAAKgF,gBAAL,CAAsBhF,KAAtB;AACA,iBAAKiF,aAAL,GAAqB,KAAKH,eAAL,CAAqBrC,IAArB,CAA0BzE,UAAQ,CAAlC,CAArB;AACA,iBAAKkH,WAAL,GAAmB,KAAKJ,eAAxB;AACA,iBAAKF,IAAL,GAAY,IAAZ;AACA,iBAAKO,YAAL,GAAoB,IAApB;AACA,iBAAKE,cAAL,GAAsB,IAAtB;AACH,SAdqB;;AAgBtBC,oBAAa,YAAW;AACpB,mBAAO,KAAKZ,YAAZ;AACH,SAlBqB;;AAoBtBa,oBAAa,UAASC,UAAT,EAAqB;AAC9B,iBAAKd,YAAL,GAAoBc,UAApB;AACH,SAtBqB;;AAwBtB1C,gBAAS,UAASC,OAAT,EAAkB;AACvB,iBAAKmC,WAAL,CAAiBpC,MAAjB,CAAwBC,OAAxB;AACH,SA1BqB;;AA4BtBS,oBAAa,UAASC,OAAT,EAAkB;AAC3B,iBAAKyB,WAAL,CAAiB1B,UAAjB,CAA4BC,OAA5B;AACH,SA9BqB;;AAgCtBgC,iBAAU,UAASC,OAAT,EAAkB;AACxB,gBAAIA,YAAY,KAAKd,IAArB,EAA2B;AACvB;AACH;AACD,iBAAKA,IAAL,GAAYc,OAAZ;AACAnH,mBAAOM,GAAP,CAAW,MAAX,EAAmB,UAAU6G,OAA7B;AACA,gBAAI,KAAKd,IAAL,IAAa,aAAjB,EAAgC;AAC5B,qBAAKM,WAAL,GAAmB,KAAKH,kBAAxB;AACH,aAFD,MAEO;AACH,qBAAKG,WAAL,GAAmB,KAAKJ,eAAxB;AACA,qBAAKI,WAAL,CAAiBlF,KAAjB;AACH;AACD,gBAAI,KAAK4E,IAAL,KAAc,cAAlB,EAAkC;AAC9B,qBAAKE,eAAL,CAAqBnC,YAArB,GAAoC,IAApC;AACA,qBAAKoC,kBAAL,CAAwBpC,YAAxB,GAAuC,IAAvC;AACH;AACD,iBAAKiC,IAAL,GAAYc,OAAZ;AACH,SAjDqB;;AAmDtBC,qBAAc,UAASxE,KAAT,EAAgB;AAC1B,iBAAK,IAAIf,IAAI,CAAb,EAAiBA,IAAIe,MAAM7B,MAA3B,EAAoCc,GAApC,EAAyC;AACrC,qBAAK8E,WAAL,CAAiBpD,UAAjB,CAA4BX,MAAMf,CAAN,CAA5B;AACH;AACD,gBAAIwF,SAAS,KAAKV,WAAL,KAAqB,KAAKJ,eAA1B,GAA4C,MAA5C,GAAqD,UAAlE;AACAvG,mBAAOM,GAAP,CAAW,MAAX,EAAmB+G,SAAS,IAAT,GAAgB,KAAKV,WAAL,CAAiBrB,cAAjB,CAAgC,IAAhC,CAAnC;AACA,gBAAI,KAAKe,IAAL,KAAc,eAAd,IAAiC,KAAKA,IAAL,KAAc,cAAnD,EAAmE;AAC/DrG,uBAAOM,GAAP,CAAW,MAAX,EAAmB,gBAAgB,KAAKiG,eAAL,CAAqBjB,cAArB,CAAoC,IAApC,CAAnC;AACA,qBAAKgC,gBAAL;AACH;AACJ,SA7DqB;;AA+DtBC,gBAAQ,YAAW;AAAE;AACjBvH,mBAAOM,GAAP,CAAW,MAAX,EAAmB,8BAAnB;AACA,iBAAK4G,OAAL,CAAa,aAAb;AACH,SAlEqB;AAmEtBM,eAAO,YAAW;AAAE;AAChBxH,mBAAOM,GAAP,CAAW,MAAX,EAAmB,gBAAnB;AACA,gBAAI,KAAK+F,IAAL,KAAc,WAAlB,EAA+B;AAC3B;AACH;AACD,iBAAKM,WAAL,CAAiBrD,SAAjB;AACA,gBAAI,KAAKqD,WAAL,KAAqB,KAAKJ,eAA9B,EAA+C;AAC3C,qBAAKe,gBAAL;AACH;AACJ,SA5EqB;AA6EtBG,gBAAS,YAAW;AAAE;AAClB;AACH,SA/EqB;AAgFtBC,gBAAQ,YAAW;AAAE;AACjB;AACH,SAlFqB;AAmFtBC,gBAAQ,YAAW;AAAE;AACjB3H,mBAAOM,GAAP,CAAW,MAAX,EAAmB,2BAAnB;AACA,iBAAKqG,WAAL,CAAiB/C,eAAjB;AACA,iBAAK0D,gBAAL;AACH,SAvFqB;AAwFtBM,eAAO,UAASxC,MAAT,EAAiB;AAAE;AACtBpF,mBAAOM,GAAP,CAAW,MAAX,EAAmB,QAAQ8E,MAAR,GAAgB,aAAnC;AACA,iBAAKuB,WAAL,GAAmB,KAAKJ,eAAxB;AACA,iBAAKW,OAAL,CAAa,cAAb;AACA,iBAAKP,WAAL,CAAiBxB,aAAjB,CAA+BC,MAA/B;AACH,SA7FqB;AA8FtByC,gBAAQ,YAAW;AAAE;AACjB7H,mBAAOM,GAAP,CAAW,MAAX,EAAmB,gBAAnB;AACA,iBAAKqG,WAAL,CAAiBrC,MAAjB,CAAwB,EAAC/C,OAAQ,IAAT,EAAxB;AACH,SAjGqB;AAkGtBuG,gBAAQ,YAAW;AAAE;AACjB9H,mBAAOM,GAAP,CAAW,MAAX,EAAmB,gCAAnB;AACA,iBAAK4G,OAAL,CAAa,eAAb;AACH,SArGqB;AAsGtBa,eAAO,YAAW;AAAE;AAChB/H,mBAAOM,GAAP,CAAW,MAAX,EAAmB,IAAnB;AACA,iBAAK4G,OAAL,CAAa,WAAb;AACH,SAzGqB;AA0GtBc,gBAAQ,YAAW;AAAE;AACjBhI,mBAAOM,GAAP,CAAW,MAAX,EAAmB,KAAnB;AACA,iBAAK4G,OAAL,CAAa,WAAb;AACH,SA7GqB;AA8GtBe,gBAAQ,YAAW;AAAE;AACjBjI,mBAAOM,GAAP,CAAW,MAAX,EAAmB,8BAAnB;AACA,iBAAKiG,eAAL,CAAqB9E,KAArB;AACA,iBAAK6F,gBAAL;AACH,SAlHqB;AAmHtBY,eAAO,YAAW;AAAE;AAChBlI,mBAAOM,GAAP,CAAW,sBAAX;AACA,iBAAKqG,WAAL,CAAiBtB,MAAjB;AACA,iBAAKiC,gBAAL;AACH,SAvHqB;AAwHtBa,gBAAQ,YAAW;AAAE;AACjBnI,mBAAOM,GAAP,CAAW,MAAX,EAAmB,kCAAnB;AACA,iBAAKkG,kBAAL,CAAwB/E,KAAxB;AACH,SA3HqB;AA4HtB2G,gBAAQ,YAAW;AAAE;AACjBpI,mBAAOM,GAAP,CAAW,MAAX,EAAmB,sBAAnB;AACA,gBAAI,KAAK+F,IAAL,KAAc,aAAlB,EAAiC;AAC7B,oBAAIgC,MAAM,KAAK9B,eAAf;AACA,qBAAKA,eAAL,GAAuB,KAAKC,kBAA5B;AACA,qBAAKA,kBAAL,GAA0B6B,GAA1B;AACA,qBAAK1B,WAAL,GAAmB,KAAKH,kBAAxB;AACAxG,uBAAOM,GAAP,CAAW,MAAX,EAAmB,WAAW,KAAKiG,eAAL,CAAqBjB,cAArB,EAA9B;AACH;AACD,iBAAKgC,gBAAL;AACH,SAtIqB;AAuItBgB,eAAO,UAASC,MAAT,EAAiB;AAAE;AACtBvI,mBAAOM,GAAP,CAAW,MAAX,EAAmB,QAAQiI,MAAR,GAAiB,gBAApC;AACA,iBAAK5B,WAAL,CAAiBxD,UAAjB,CAA4BoF,MAA5B;AACH,SA1IqB;AA2ItBC,mBAAW,UAASC,UAAT,EAAqB;AAAE;AAC9B,gBAAI9G,SAAS,EAACJ,OAAQ,KAAT,EAAb;AACAI,mBAAOP,SAAP,GAAmBqH,aAAa,CAAb,KAAmB,CAAtC;AACA9G,mBAAON,OAAP,GAAiBoH,cAAc,IAA/B;AACA,gBAAI,CAAC9G,OAAON,OAAZ,EAAqB;AACjB,oBAAIqH,aAAa5D,KAAK6D,KAAL,CAAWF,aAAW,CAAtB,IAA2B,IAA5C;AACA,oBAAIG,SAAS,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,QAA1C,EAAoD,SAApD,CAAb;AACAjH,uBAAOR,UAAP,GAAoByH,OAAOF,UAAP,CAApB;AACH,aAJD,MAIO;AACH/G,uBAAOR,UAAP,GAAoB,OAApB;AACH;AACDnB,mBAAOM,GAAP,CAAW,MAAX,EAAmB,aAAamE,KAAKC,SAAL,CAAe/C,MAAf,CAAhC;AACA,iBAAKgF,WAAL,CAAiBrC,MAAjB,CAAwB3C,MAAxB;AACH,SAxJqB;;AA0JtB2F,0BAAkB,YAAW;AACzB,gBAAIuB,IAAI7I,OAAOE,IAAf;AACA,gBAAI2I,MAAM,IAAV,EAAgB;AACZ;AACH;AACD,gBAAI,KAAK1C,YAAT,EAAuB;AACnB,oBAAI,KAAKA,YAAL,CAAkB2C,UAAtB,EAAkC;AAC9B,yBAAK3C,YAAL,CAAkB2C,UAAlB,CAA6BD,CAA7B,EAAgC,KAAKtC,eAArC;AACH;AACD,oBAAI,KAAKK,YAAL,KAAsB,IAAtB,IAA8B,CAAC,KAAKL,eAAL,CAAqB7D,OAArB,EAAnC,EAAmE;AAAE;AACjE,yBAAKkE,YAAL,GAAoBiC,CAApB;AACH,iBAFD,MAEO;AACH,wBAAI,CAAC,KAAKtC,eAAL,CAAqBvE,MAArB,CAA4B,KAAKyE,gBAAjC,CAAL,EAAyD;AACrD,4BAAI,KAAKN,YAAL,CAAkB4C,MAAtB,EAA8B;AAC1B,iCAAK5C,YAAL,CAAkB4C,MAAlB,CAAyB,KAAKnC,YAA9B,EAA4CiC,CAA5C,EAA+C,KAAKpC,gBAApD;AACH;AACD,6BAAKG,YAAL,GAAoB,KAAKL,eAAL,CAAqB7D,OAArB,KAAiC,IAAjC,GAAwCmG,CAA5D;AACH;AACJ;AACD,qBAAKpC,gBAAL,CAAsBvE,IAAtB,CAA2B,KAAKqE,eAAhC;AACH;AACJ,SA/KqB;;AAiLtByC,wBAAiB,UAASH,CAAT,EAAY;AACzB,gBAAI,KAAK1C,YAAT,EAAuB;AACnB,oBAAI,CAAC,KAAKI,eAAL,CAAqB7D,OAArB,EAAL,EAAqC;AACjC,wBAAI,KAAKyD,YAAL,CAAkB4C,MAAtB,EAA8B;AAC1B,6BAAK5C,YAAL,CAAkB4C,MAAlB,CAAyB,KAAKnC,YAA9B,EAA4CiC,CAA5C,EAA+C,KAAKtC,eAApD;AACH;AACD,yBAAKK,YAAL,GAAoBiC,CAApB;AACH;AACJ;AACJ;AA1LqB,KAA1B;;AA6LA;;;;;;;AAOA,QAAII,eAAe,UAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAC3C,aAAKF,KAAL,GAAaA,SAAS,CAAtB;AACA,aAAKG,OAAL,GAAe,CAACF,IAAD,EAAOC,IAAP,CAAf;AACA,aAAKE,QAAL,GAAgB,CAAC,IAAIrD,aAAJ,CAAkB,CAAlB,EAAqBkD,IAArB,CAAD,EAA6B,IAAIlD,aAAJ,CAAkB,CAAlB,EAAqBmD,IAArB,CAA7B,CAAhB;AACA,aAAKG,QAAL,GAAgB,CAAC,CAAjB,CAJ2C,CAIvB;AACpB,aAAKC,QAAL,GAAgB,IAAhB,CAL2C,CAKrB;AACtB,aAAKC,QAAL,GAAgB,IAAhB,CAN2C,CAMrB;AACtB,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,YAAL,GAAoB,EAAC,WAAY,CAAb,EAAgB,QAAS,CAAzB,EAA4B,OAAQ,CAApC,EAAuC,SAAU,CAAjD,EAApB;AACH,KAXD;;AAaAZ,iBAAazH,SAAb,GAAyB;;AAErBuF,oBAAa,UAAS+C,KAAT,EAAgB;AACzB,mBAAO,KAAKR,QAAL,CAAcQ,KAAd,EAAqB/C,UAArB,EAAP;AACH,SAJoB;;AAMrBC,oBAAa,UAAS8C,KAAT,EAAgB7C,UAAhB,EAA4B;AACrC,iBAAKqC,QAAL,CAAcQ,KAAd,EAAqB9C,UAArB,CAAgCC,UAAhC;AACH,SARoB;;AAUrB;;;AAGA8C,iBAAU,UAASlB,CAAT,EAAYmB,QAAZ,EAAsB;AAC5B,gBAAIC,QAAJ;AAAA,gBAAcC,CAAd;AAAA,gBAAiBC,CAAjB;AAAA,gBACAC,aAAa,KADb;;AAGA,iBAAKR,QAAL,GAAgBf,CAAhB;AACA7I,mBAAOI,OAAP,CAAeyI,CAAf;;AAEA,iBAAK,IAAIhH,IAAI,CAAb,EAAiBA,IAAImI,SAASjJ,MAA9B,EAAuCc,KAAG,CAA1C,EAA6C;AACzCqI,oBAAIF,SAASnI,CAAT,IAAc,IAAlB;AACAsI,oBAAIH,SAASnI,IAAE,CAAX,IAAgB,IAApB;;AAEA,oBAAIqI,KAAK,IAAL,IAAaA,KAAK,IAAlB,IAA0BA,MAAM,KAAKV,QAArC,IAAiDW,MAAM,KAAKV,QAAhE,EAA0E;AACtE,yBAAKD,QAAL,GAAgB,IAAhB;AACA,yBAAKC,QAAL,GAAgB,IAAhB;AACAzJ,2BAAOM,GAAP,CAAW,OAAX,EAAoB,uBAAuBK,mBAAmB,CAACuJ,CAAD,EAAIC,CAAJ,CAAnB,CAAvB,GAAoD,cAAxE;AACA,6BAJsE,CAI5D;AACb;;AAED,oBAAID,MAAM,CAAN,IAAWC,MAAM,CAArB,EAAwB;AACpB,yBAAKN,YAAL,CAAkBQ,OAAlB,IAA6B,CAA7B;AACA;AACH,iBAHD,MAGO;AACHrK,2BAAOM,GAAP,CAAW,MAAX,EAAmB,MAAMK,mBAAmB,CAACqJ,SAASnI,CAAT,CAAD,EAAcmI,SAASnI,IAAE,CAAX,CAAd,CAAnB,CAAN,GAAwD,QAAxD,GAAmElB,mBAAmB,CAACuJ,CAAD,EAAIC,CAAJ,CAAnB,CAAnE,GAAgG,GAAnH;AACH;AACDF,2BAAW,KAAKK,QAAL,CAAcJ,CAAd,EAAiBC,CAAjB,CAAX;AACA,oBAAI,CAACF,QAAL,EAAe;AACXA,+BAAW,KAAKM,WAAL,CAAiBL,CAAjB,EAAoBC,CAApB,CAAX;AACH;AACD,oBAAI,CAACF,QAAL,EAAe;AACXA,+BAAW,KAAKO,QAAL,CAAcN,CAAd,EAAiBC,CAAjB,CAAX;AACH;AACD,oBAAI,CAACF,QAAL,EAAe;AACXA,+BAAW,KAAKQ,yBAAL,CAA+BP,CAA/B,EAAkCC,CAAlC,CAAX;AACH;AACD,oBAAI,CAACF,QAAL,EAAe;AACXG,iCAAa,KAAKM,UAAL,CAAgBR,CAAhB,EAAmBC,CAAnB,CAAb;AACA,wBAAIC,UAAJ,EAAgB;AACZ,4BAAI,KAAKb,QAAL,IAAiB,KAAKA,QAAL,IAAgB,CAArC,EAAwC;AACpC,gCAAIoB,UAAU,KAAKrB,QAAL,CAAc,KAAKC,QAAL,GAAc,CAA5B,CAAd;AACAoB,oCAAQvD,WAAR,CAAoBgD,UAApB;AACH,yBAHD,MAGO;AACHpK,mCAAOM,GAAP,CAAW,SAAX,EAAsB,kCAAtB;AACH;AACJ;AACJ;AACD,oBAAI2J,QAAJ,EAAc;AACV,yBAAKJ,YAAL,CAAkBe,GAAlB,IAAyB,CAAzB;AACH,iBAFD,MAEO,IAAIR,UAAJ,EAAgB;AACnB,yBAAKP,YAAL,CAAkBrG,IAAlB,IAA0B,CAA1B;AACH,iBAFM,MAEA;AACH,yBAAKqG,YAAL,CAAkB5H,KAAlB,IAA2B,CAA3B;AACAjC,2BAAOM,GAAP,CAAW,SAAX,EAAsB,iCAAiCK,mBAAmB,CAACuJ,CAAD,EAAIC,CAAJ,CAAnB,CAAjC,GACV,SADU,GACExJ,mBAAmB,CAACqJ,SAASnI,CAAT,CAAD,EAAcmI,SAASnI,IAAE,CAAX,CAAd,CAAnB,CADxB;AAEH;AACJ;AACJ,SApEoB;;AAsErB;;;;AAIAyI,kBAAU,UAASJ,CAAT,EAAYC,CAAZ,EAAe;AACrB,gBAAI/D,OAAO,IAAX;;AAEA,gBAAIyE,QAAQ,CAACX,MAAM,IAAN,IAAcA,MAAM,IAApB,IAA4BA,MAAM,IAAlC,IAA0CA,MAAM,IAAjD,KAA2D,QAAQC,CAAR,IAAaA,KAAK,IAAzF;AACA,gBAAIW,QAAQ,CAACZ,MAAM,IAAN,IAAcA,MAAM,IAArB,KAA+B,QAAQC,CAAR,IAAaA,KAAK,IAA7D;AACA,gBAAI,EAAEU,SAASC,KAAX,CAAJ,EAAuB;AACnB,uBAAO,KAAP;AACH;;AAED,gBAAIZ,MAAM,IAAN,IAAcA,MAAM,IAApB,IAA4BA,MAAM,IAAtC,EAA4C;AACxC9D,uBAAO,CAAP;AACH,aAFD,MAEO;AACHA,uBAAO,CAAP,CADG,CACO;AACb;;AAED,gBAAIuE,UAAU,KAAKrB,QAAL,CAAclD,OAAO,CAArB,CAAd;;AAEA,gBAAI8D,MAAM,IAAN,IAAcA,MAAM,IAApB,IAA4BA,MAAM,IAAlC,IAA0CA,MAAM,IAApD,EAA0D;AACtD,oBAAIC,MAAM,IAAV,EAAgB;AACZQ,4BAAQpD,MAAR;AACH,iBAFD,MAEO,IAAI4C,MAAM,IAAV,EAAgB;AACnBQ,4BAAQnD,KAAR;AACH,iBAFM,MAEA,IAAI2C,MAAM,IAAV,EAAgB;AACnBQ,4BAAQlD,MAAR;AACH,iBAFM,MAEA,IAAI0C,MAAM,IAAV,EAAgB;AACnBQ,4BAAQjD,MAAR;AACH,iBAFM,MAEA,IAAIyC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQhD,MAAR;AACH,iBAFM,MAEA,IAAIwC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ/C,KAAR,CAAc,CAAd;AACH,iBAFM,MAEA,IAAIuC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ/C,KAAR,CAAc,CAAd;AACH,iBAFM,MAEA,IAAIuC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ/C,KAAR,CAAc,CAAd;AACH,iBAFM,MAEA,IAAIuC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ9C,MAAR;AACH,iBAFM,MAEA,IAAIsC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ7C,MAAR;AACH,iBAFM,MAEA,IAAIqC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ5C,KAAR;AACH,iBAFM,MAEA,IAAIoC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ3C,MAAR;AACH,iBAFM,MAEA,IAAImC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQ1C,MAAR;AACH,iBAFM,MAEA,IAAIkC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQzC,KAAR;AACH,iBAFM,MAEA,IAAIiC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQxC,MAAR;AACH,iBAFM,MAEA,IAAIgC,MAAM,IAAV,EAAgB;AACnBQ,4BAAQvC,MAAR;AACH;AACJ,aAlCD,MAkCO;AAAE;AACLuC,wBAAQrC,KAAR,CAAc6B,IAAI,IAAlB;AACH;AACD,iBAAKX,QAAL,GAAgBU,CAAhB;AACA,iBAAKT,QAAL,GAAgBU,CAAhB;AACA,iBAAKZ,QAAL,GAAgBnD,IAAhB;AACA,mBAAO,IAAP;AACH,SApIoB;;AAsIrB;;;;AAIAmE,qBAAc,UAASL,CAAT,EAAYC,CAAZ,EAAe;AACzB,gBAAI/D,OAAO,IAAX;;AAEA,gBAAK,CAAE8D,MAAM,IAAP,IAAiBA,MAAM,IAAxB,KAAkC,QAAQC,CAA1C,IAA+CA,KAAK,IAAzD,EAA+D;AAC3D,oBAAID,MAAM,IAAV,EAAgB;AACZ9D,2BAAO,CAAP;AACH,iBAFD,MAEQ;AACJA,2BAAO,CAAP;AACH;AACD,oBAAIA,SAAS,KAAKmD,QAAlB,EAA4B;AACxBvJ,2BAAOM,GAAP,CAAW,OAAX,EAAoB,oCAApB;AACA,2BAAO,KAAP;AACH;AACD,oBAAIqK,UAAU,KAAKrB,QAAL,CAAclD,OAAK,CAAnB,CAAd;AACA;AACAuE,wBAAQvD,WAAR,CAAoB,CAAC,IAAD,CAApB;AACAuD,wBAAQnC,SAAR,CAAkB2B,CAAlB;AACAnK,uBAAOM,GAAP,CAAW,OAAX,EAAoB,aAAaK,mBAAmB,CAACuJ,CAAD,EAAIC,CAAJ,CAAnB,CAAb,GAA0C,GAA9D;AACA,qBAAKX,QAAL,GAAgBU,CAAhB;AACA,qBAAKT,QAAL,GAAgBU,CAAhB;AACA,uBAAO,IAAP;AACH;AACD,mBAAO,KAAP;AACH,SAjKoB;AAkKrB;;;;AAIAK,kBAAW,UAASN,CAAT,EAAYC,CAAZ,EAAe;;AAEvB,gBAAI/D,OAAO,IAAX;AACA,gBAAI/B,MAAM,IAAV;;AAEC,gBAAI0G,QAAQ,CAAE,QAAQb,CAAR,IAAcA,KAAK,IAApB,IAA8B,QAAQA,CAAR,IAAaA,KAAK,IAAjD,KAA4D,QAAQC,CAAR,IAAaA,KAAK,IAA1F;AACA,gBAAIa,QAAQ,CAACd,MAAM,IAAN,IAAcA,MAAM,IAArB,KAA+B,QAAQC,CAAR,IAAaA,KAAK,IAA7D;AACA,gBAAI,EAAGY,SAASC,KAAZ,CAAJ,EAAwB;AACpB,uBAAO,KAAP;AACH;;AAED5E,mBAAQ8D,KAAK,IAAN,GAAc,CAAd,GAAkB,CAAzB;;AAEA,gBAAI,QAAQC,CAAR,IAAaA,KAAK,IAAtB,EAA4B;AACxB9F,sBAAO+B,SAAS,CAAV,GAAezG,WAAWuK,CAAX,CAAf,GAA+BrK,WAAWqK,CAAX,CAArC;AACH,aAFD,MAEO;AAAE;AACL7F,sBAAO+B,SAAS,CAAV,GAAexG,YAAYsK,CAAZ,CAAf,GAAgCpK,YAAYoK,CAAZ,CAAtC;AACH;AACD,gBAAI1F,UAAU,KAAKyG,YAAL,CAAkB5G,GAAlB,EAAuB8F,CAAvB,CAAd;AACA,gBAAIQ,UAAU,KAAKrB,QAAL,CAAclD,OAAK,CAAnB,CAAd;AACAuE,oBAAQpG,MAAR,CAAeC,OAAf;AACA,iBAAKgF,QAAL,GAAgBU,CAAhB;AACA,iBAAKT,QAAL,GAAgBU,CAAhB;AACA,iBAAKZ,QAAL,GAAgBnD,IAAhB;AACA,mBAAO,IAAP;AACH,SA/LoB;;AAiMrB;;;;AAIA6E,sBAAe,UAAU5G,GAAV,EAAejF,IAAf,EAAqB;AAChC,gBAAI8L,WAAW9L,IAAf;AACA,gBAAIoF,UAAU,EAACQ,OAAQ,IAAT,EAAe3D,SAAU,KAAzB,EAAgCuD,QAAS,IAAzC,EAA+CxD,WAAY,KAA3D,EAAkEiD,KAAMA,GAAxE,EAAd;;AAEA,gBAAIjF,OAAO,IAAX,EAAiB;AACb8L,2BAAW9L,OAAO,IAAlB;AACH,aAFD,MAEO;AACH8L,2BAAW9L,OAAO,IAAlB;AACH;AACDoF,oBAAQpD,SAAR,GAAoB,CAAC8J,WAAW,CAAZ,MAAmB,CAAvC;AACA,gBAAIA,YAAY,GAAhB,EAAqB;AACjB1G,wBAAQQ,KAAR,GAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,QAA1C,EAAoD,SAApD,EAA+D,OAA/D,EAAwEF,KAAK6D,KAAL,CAAWuC,WAAS,CAApB,CAAxE,CAAhB;AACH,aAFD,MAEO,IAAIA,YAAY,GAAhB,EAAqB;AACxB1G,wBAAQnD,OAAR,GAAkB,IAAlB;AACAmD,wBAAQQ,KAAR,GAAgB,OAAhB;AACH,aAHM,MAGA;AACHR,wBAAQI,MAAR,GAAkBE,KAAK6D,KAAL,CAAW,CAACuC,WAAS,IAAV,IAAgB,CAA3B,CAAD,GAAgC,CAAjD;AACH;AACD,mBAAO1G,OAAP,CAlBgC,CAkBhB;AACnB,SAxNoB;;AA0NrB;;;;AAIAkG,oBAAa,UAASR,CAAT,EAAYC,CAAZ,EAAe;;AAEzB,gBAAKgB,YAAY,IAAjB;AAAA,gBACKC,YAAY,IADjB;AAAA,gBAEKC,YAAY,IAFjB;AAAA,gBAGKC,YAAY,IAHjB;;AAKC,gBAAIpB,KAAK,IAAT,EAAe;AACXiB,4BAAY,CAAZ;AACAE,4BAAYnB,IAAI,CAAhB;AACH,aAHD,MAGO;AACHiB,4BAAY,CAAZ;AACAE,4BAAYnB,CAAZ;AACH;AACD,gBAAI,QAAQmB,SAAR,IAAqBA,aAAa,IAAtC,EAA4C;AACxC;AACA,oBAAIE,UAAUpB,CAAd;AACA,oBAAIkB,cAAc,IAAlB,EAAwB;AACpBE,8BAAUpB,IAAI,IAAd;AACH,iBAFD,MAEO,IAAIkB,cAAc,IAAlB,EAAwB;AAC3BE,8BAAUpB,IAAI,IAAd;AACH,iBAFM,MAEA;AACHoB,8BAAUpB,IAAI,IAAd;AACH;AACDnK,uBAAOM,GAAP,CAAW,MAAX,EAAmB,mBAAmBnB,eAAeoM,OAAf,CAAnB,GAA6C,eAA7C,GAA+DJ,SAAlF;AACAC,4BAAY,CAACG,OAAD,CAAZ;AACA,qBAAK/B,QAAL,GAAgBU,CAAhB;AACA,qBAAKT,QAAL,GAAgBU,CAAhB;AACH,aAdD,MAcO,IAAI,QAAQD,CAAR,IAAaA,KAAK,IAAtB,EAA4B;AAC/BkB,4BAAajB,MAAM,CAAP,GAAY,CAACD,CAAD,CAAZ,GAAkB,CAACA,CAAD,EAAIC,CAAJ,CAA9B;AACA,qBAAKX,QAAL,GAAgB,IAAhB;AACA,qBAAKC,QAAL,GAAgB,IAAhB;AACH;AACD,gBAAI2B,SAAJ,EAAe;AACX,oBAAII,WAAW7K,mBAAmByK,SAAnB,CAAf;AACApL,uBAAOM,GAAP,CAAW,OAAX,EAAoB,mBAAmBkL,SAAS1H,IAAT,CAAc,GAAd,CAAvC;AACH;AACD,mBAAOsH,SAAP;AACH,SApQoB;;AAsQrB;;;;AAIAX,mCAA4B,UAASP,CAAT,EAAYC,CAAZ,EAAe;AACxC,gBAAKjF,OAAL,EACK4E,KADL,EAEK1D,IAFL,EAGKuE,OAHL;;AAKC,gBAAII,QAAQ,CAACb,MAAM,IAAN,IAAcA,MAAM,IAArB,KAA+B,QAAQC,CAAR,IAAaA,KAAK,IAA7D;AACA,gBAAIa,QAAQ,CAACd,MAAM,IAAN,IAAcA,MAAM,IAArB,KAA+B,QAAOC,CAAP,IAAYA,KAAK,IAA5D;AACA,gBAAI,EAAEY,SAASC,KAAX,CAAJ,EAAuB;AACnB,uBAAO,KAAP;AACH;AACD9F,sBAAU,EAAV;AACA,gBAAIgF,MAAO,IAAP,IAAeA,MAAM,IAAzB,EAA+B;AAC3BJ,wBAAQhF,KAAK6D,KAAL,CAAW,CAACwB,IAAE,IAAH,IAAS,CAApB,CAAR;AACAjF,wBAAQ5D,UAAR,GAAqBvB,iBAAiB+J,KAAjB,CAArB;AACA,oBAAIK,IAAI,CAAJ,KAAU,CAAd,EAAiB;AACbjF,4BAAQ5D,UAAR,GAAqB4D,QAAQ5D,UAAR,GAAqB,OAA1C;AACH;AACJ,aAND,MAMO,IAAI6I,MAAM,IAAV,EAAgB;AACnBjF,wBAAQ5D,UAAR,GAAqB,aAArB;AACH,aAFM,MAEA;AACH4D,wBAAQ/D,UAAR,GAAqB,OAArB;AACA,oBAAIgJ,MAAM,IAAV,EAAgB;AACZjF,4BAAQ9D,SAAR,GAAoB,IAApB;AACH;AACJ;AACDgF,mBAAQ8D,IAAI,IAAL,GAAa,CAAb,GAAiB,CAAxB;AACAS,sBAAU,KAAKrB,QAAL,CAAclD,OAAK,CAAnB,CAAV;AACAuE,oBAAQ1F,UAAR,CAAmBC,OAAnB;AACA,iBAAKsE,QAAL,GAAgBU,CAAhB;AACA,iBAAKT,QAAL,GAAgBU,CAAhB;AACA,mBAAO,IAAP;AACH,SA1SoB;;AA4SrB;;;AAGA1I,eAAQ,YAAW;AACf,iBAAK,IAAII,IAAE,CAAX,EAAeA,IAAI,KAAKyH,QAAL,CAAcvI,MAAjC,EAA0Cc,GAA1C,EAA+C;AAC3C,oBAAI,KAAKyH,QAAL,CAAczH,CAAd,CAAJ,EAAsB;AAClB,yBAAKyH,QAAL,CAAczH,CAAd,EAAiBJ,KAAjB;AACH;AACJ;AACD,iBAAK+H,QAAL,GAAgB,IAAhB;AACA,iBAAKC,QAAL,GAAgB,IAAhB;AACH,SAvToB;;AAyTrB;;;AAGAT,wBAAiB,UAASH,CAAT,EAAY;AACzB,iBAAK,IAAIhH,IAAE,CAAX,EAAeA,IAAI,KAAKyH,QAAL,CAAcvI,MAAjC,EAA0Cc,GAA1C,EAA+C;AAC3C,oBAAI,KAAKyH,QAAL,CAAczH,CAAd,CAAJ,EAAsB;AAClB,yBAAKyH,QAAL,CAAczH,CAAd,EAAiBmH,cAAjB,CAAgCH,CAAhC;AACH;AACJ;AACJ;AAlUoB,KAAzB;;AAqUA;;;;;;;AAOA,QAAI4C,kBAAkB,UAASC,GAAT,EAAchI,QAAd,EAAwBiI,IAAxB,EAA8B;AAChD,YAAIC,UAAU,CAAd;AAAA,YACIC,SAASnI,QADb;AAAA,YAEIoI,UAAU,CAFd;AAAA,YAGIC,mBAAmB,EAHvB;;AAII;AACAC,sBAAc,UAAUC,WAAV,EAAuBC,WAAvB,EAAoCR,GAApC,EAAyC7I,GAAzC,EAA8C;AACxD,gBAAIoJ,gBAAgB,CAAhB,IAAqBC,cAAc,CAAvC,EAA0C;AACtC,uBAAO,IAAP;AACH;AACD,gBAAIC,cAAcT,IAAIU,QAAJ,CAAavJ,GAAb,CAAlB;AACA,gBAAIwJ,eAAeX,IAAIY,SAAJ,CAAczJ,MAAM,CAApB,CAAnB;AACA,gBAAI0J,iBAAiBb,IAAIc,SAAJ,CAAc3J,MAAM,CAApB,CAArB;AACA,gBAAI4J,mBAAmBf,IAAIU,QAAJ,CAAavJ,MAAM,CAAnB,CAAvB;AACA,mBAAOsJ,eAAe,IAAf,IAAuBE,gBAAgB,IAAvC,IAA+CE,kBAAkB,UAAjE,IAA+EE,oBAAoB,GAA1G;AACH,SAdL;AAeA,eAAOZ,SAASnI,WAAWiI,IAA3B,EAAiC;AAC7BC,sBAAUF,IAAIc,SAAJ,CAAcX,MAAd,CAAV;AACAC,sBAAUJ,IAAIU,QAAJ,CAAaP,SAAS,CAAtB,IAA2B,IAArC;AACA;AACA,gBAAIC,YAAY,CAAhB,EAAmB;AACf;AACA;AACA,oBAAIjJ,MAAMgJ,SAAS,CAAnB;AACA,oBAAII,cAAc,CAAC,CAAnB;AACA,uBAAOpJ,MAAMgJ,SAAS,CAAT,GAAaD,OAAb,GAAuB,CAApC,EAAuC;AAAE;AACrCK,kCAAc,CAAd;AACA,wBAAI9B,IAAI,IAAR;AACA,2BAAOA,MAAM,IAAb,EAAmB;AACfA,4BAAIuB,IAAIU,QAAJ,CAAavJ,GAAb,CAAJ;AACAoJ,uCAAe9B,CAAf;AACAtH;AACH;AACD,wBAAIqJ,cAAc,CAAlB;AACA/B,wBAAI,IAAJ;AACA,2BAAOA,MAAM,IAAb,EAAmB;AACfA,4BAAIuB,IAAIU,QAAJ,CAAavJ,GAAb,CAAJ;AACAqJ,uCAAe/B,CAAf;AACAtH;AACH;AACD,wBAAImJ,YAAYC,WAAZ,EAAyBC,WAAzB,EAAsCR,GAAtC,EAA2C7I,GAA3C,CAAJ,EAAqD;AACjD;AACAkJ,yCAAiB/K,IAAjB,CAAsB,CAAC6B,GAAD,EAAMqJ,WAAN,CAAtB;AACH;AACDrJ,2BAAOqJ,WAAP;AACH;AACJ;AACDL,sBAAUD,UAAU,CAApB;AACH;AACD,eAAOG,gBAAP;AACH,KAlDD;;AAoDA,QAAIW,6BAA6B,UAAShB,GAAT,EAAciB,WAAd,EAA2B;AACxD,YAAI9J,MAAM8J,YAAY,CAAZ,CAAV;AACA,YAAIC,YAAY,CAAC,EAAD,EAAK,EAAL,CAAhB;;AAEA/J,eAAO,CAAP,CAJwD,CAI9C;AACV,YAAIgK,UAAUnB,IAAIU,QAAJ,CAAavJ,GAAb,IAAoB,IAAlC;AACAA,eAAO,CAAP,CANwD,CAM9C;;AAEV,aAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAIgL,OAApB,EAA6BhL,GAA7B,EAAkC;AAC9B,gBAAIzC,OAAOsM,IAAIU,QAAJ,CAAavJ,GAAb,CAAX;AACA,gBAAIiK,UAAU1N,OAAO,GAArB;AACA,gBAAI2N,SAAS3N,OAAO,GAApB;AACAyD;AACA,gBAAImK,UAAUtB,IAAIU,QAAJ,CAAavJ,GAAb,CAAd,CAL8B,CAKG;AACjCA;AACA,gBAAIoK,UAAUvB,IAAIU,QAAJ,CAAavJ,GAAb,CAAd,CAP8B,CAOG;AACjCA;AACA,gBAAIiK,WAAY,CAACE,UAAU,IAAX,KAAoBC,UAAU,IAA9B,MAAwC,CAAxD,EAA4D;AAAE;AAC1D,oBAAIF,WAAW,CAAf,EAAkB;AACdH,8BAAU,CAAV,EAAa5L,IAAb,CAAkBgM,OAAlB;AACAJ,8BAAU,CAAV,EAAa5L,IAAb,CAAkBiM,OAAlB;AACH,iBAHD,MAGO,IAAIF,WAAW,CAAf,EAAkB;AACrBH,8BAAU,CAAV,EAAa5L,IAAb,CAAkBgM,OAAlB;AACAJ,8BAAU,CAAV,EAAa5L,IAAb,CAAkBiM,OAAlB;AACH;AACJ;AACJ;AACD,eAAOL,SAAP;AACH,KA5BD;;AA8BA3N,YAAQe,MAAR,GAAiBA,MAAjB;AACAf,YAAQiC,QAAR,GAAmBA,QAAnB;AACAjC,YAAQgF,aAAR,GAAwBA,aAAxB;AACAhF,YAAQgK,YAAR,GAAuBA,YAAvB;AACAhK,YAAQwM,eAAR,GAA0BA,eAA1B;AACAxM,YAAQyN,0BAAR,GAAqCA,0BAArC;AAEH,CAtrCA,EAsrCC,OAAOzN,OAAP,KAAmB,WAAnB,GAAiC,KAAKiO,YAAL,GAAoB,EAArD,GAA0DjO,OAtrC3D,CAAD","file":"cea608-parser.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n(function(exports) {\n\n    \"use strict\";\n\n    /**\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n     */\n\n    var specialCea608CharsCodes = {\n        0x2a : 0xe1, // lowercase a, acute accent\n        0x5c : 0xe9, // lowercase e, acute accent\n        0x5e : 0xed, // lowercase i, acute accent\n        0x5f : 0xf3, // lowercase o, acute accent\n        0x60 : 0xfa, // lowercase u, acute accent\n        0x7b : 0xe7, // lowercase c with cedilla\n        0x7c : 0xf7, // division symbol\n        0x7d : 0xd1, // uppercase N tilde\n        0x7e : 0xf1, // lowercase n tilde\n        0x7f : 0x2588, // Full block\n        // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n        // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n        0x80 : 0xae, // Registered symbol (R)\n        0x81 : 0xb0, // degree sign\n        0x82 : 0xbd, // 1/2 symbol\n        0x83 : 0xbf, // Inverted (open) question mark\n        0x84 : 0x2122, // Trademark symbol (TM)\n        0x85 : 0xa2, // Cents symbol\n        0x86 : 0xa3, // Pounds sterling\n        0x87 : 0x266a, // Music 8'th note\n        0x88 : 0xe0, // lowercase a, grave accent\n        0x89 : 0x20, // transparent space (regular)\n        0x8a : 0xe8, // lowercase e, grave accent\n        0x8b : 0xe2, // lowercase a, circumflex accent\n        0x8c : 0xea, // lowercase e, circumflex accent\n        0x8d : 0xee, // lowercase i, circumflex accent\n        0x8e : 0xf4, // lowercase o, circumflex accent\n        0x8f : 0xfb, // lowercase u, circumflex accent\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n        0x90 : 0xc1, // capital letter A with acute\n        0x91 : 0xc9, // capital letter E with acute\n        0x92 : 0xd3, // capital letter O with acute\n        0x93 : 0xda, // capital letter U with acute\n        0x94 : 0xdc, // capital letter U with diaresis\n        0x95 : 0xfc, // lowercase letter U with diaeresis\n        0x96 : 0x2018, // opening single quote\n        0x97 : 0xa1, // inverted exclamation mark\n        0x98 : 0x2a, // asterisk\n        0x99 : 0x2019, // closing single quote\n        0x9a : 0x2501, // box drawings heavy horizontal\n        0x9b : 0xa9, // copyright sign\n        0x9c : 0x2120, // Service mark\n        0x9d : 0x2022, // (round) bullet\n        0x9e : 0x201c, // Left double quotation mark\n        0x9f : 0x201d, // Right double quotation mark\n        0xa0 : 0xc0, // uppercase A, grave accent\n        0xa1 : 0xc2, // uppercase A, circumflex\n        0xa2 : 0xc7, // uppercase C with cedilla\n        0xa3 : 0xc8, // uppercase E, grave accent\n        0xa4 : 0xca, // uppercase E, circumflex\n        0xa5 : 0xcb, // capital letter E with diaresis\n        0xa6 : 0xeb, // lowercase letter e with diaresis\n        0xa7 : 0xce, // uppercase I, circumflex\n        0xa8 : 0xcf, // uppercase I, with diaresis\n        0xa9 : 0xef, // lowercase i, with diaresis\n        0xaa : 0xd4, // uppercase O, circumflex\n        0xab : 0xd9, // uppercase U, grave accent\n        0xac : 0xf9, // lowercase u, grave accent\n        0xad : 0xdb, // uppercase U, circumflex\n        0xae : 0xab, // left-pointing double angle quotation mark\n        0xaf : 0xbb, // right-pointing double angle quotation mark\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n        0xb0 : 0xc3, // Uppercase A, tilde\n        0xb1 : 0xe3, // Lowercase a, tilde\n        0xb2 : 0xcd, // Uppercase I, acute accent\n        0xb3 : 0xcc, // Uppercase I, grave accent\n        0xb4 : 0xec, // Lowercase i, grave accent\n        0xb5 : 0xd2, // Uppercase O, grave accent\n        0xb6 : 0xf2, // Lowercase o, grave accent\n        0xb7 : 0xd5, // Uppercase O, tilde\n        0xb8 : 0xf5, // Lowercase o, tilde\n        0xb9 : 0x7b, // Open curly brace\n        0xba : 0x7d, // Closing curly brace\n        0xbb : 0x5c, // Backslash\n        0xbc : 0x5e, // Caret\n        0xbd : 0x5f, // Underscore\n        0xbe : 0x7c, // Pipe (vertical line)\n        0xbf : 0x223c, // Tilde operator\n        0xc0 : 0xc4, // Uppercase A, umlaut\n        0xc1 : 0xe4, // Lowercase A, umlaut\n        0xc2 : 0xd6, // Uppercase O, umlaut\n        0xc3 : 0xf6, // Lowercase o, umlaut\n        0xc4 : 0xdf, // Esszett (sharp S)\n        0xc5 : 0xa5, // Yen symbol\n        0xc6 : 0xa4, // Generic currency sign\n        0xc7 : 0x2503, // Box drawings heavy vertical\n        0xc8 : 0xc5, // Uppercase A, ring\n        0xc9 : 0xe5, // Lowercase A, ring\n        0xca : 0xd8, // Uppercase O, stroke\n        0xcb : 0xf8, // Lowercase o, strok\n        0xcc : 0x250f, // Box drawings heavy down and right\n        0xcd : 0x2513, // Box drawings heavy down and left\n        0xce : 0x2517, // Box drawings heavy up and right\n        0xcf : 0x251b // Box drawings heavy up and left\n    };\n\n    /**\n     * Get Unicode Character from CEA-608 byte code\n     */\n    var getCharForByte = function(byte) {\n        var charCode = byte;\n        if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n            charCode = specialCea608CharsCodes[byte];\n        }\n        return String.fromCharCode(charCode);\n    };\n\n    var NR_ROWS = 15,\n        NR_COLS = 32;\n    // Tables to look up row from PAC data\n    var rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\n    var rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\n    var rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\n    var rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\n\n    var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n    /**\n     * Simple logger class to be able to write with time-stamps and filter on level.\n     */\n    var logger = {\n        verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\n        time : null,\n        verboseLevel : 0, // Only write errors\n        setTime : function(newTime) {\n            this.time = newTime;\n        },\n        log : function(severity, msg) {\n            var minLevel = this.verboseFilter[severity];\n            if (this.verboseLevel >= minLevel) {\n                console.log(this.time + \" [\" + severity + \"] \" + msg);\n            }\n        }\n    };\n\n    var numArrayToHexArray = function(numArray) {\n        var hexArray = [];\n        for (var j = 0; j < numArray.length; j++) {\n            hexArray.push(numArray[j].toString(16));\n        }\n        return hexArray;\n    };\n\n    /**\n     * State of CEA-608 pen or character\n     * @constructor\n     */\n    var PenState = function(foreground, underline, italics, background, flash) {\n        this.foreground = foreground || \"white\";\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || \"black\";\n        this.flash = flash || false;\n    };\n\n    PenState.prototype = {\n        \n        reset : function() {\n            this.foreground = \"white\";\n            this.underline = false;\n            this.italics = false;\n            this.background = \"black\";\n            this.flash = false;\n        },\n        \n        setStyles : function(styles) {\n            var attribs = [\"foreground\", \"underline\", \"italics\", \"background\", \"flash\"];\n            for (var i = 0 ; i < attribs.length; i++) {\n                var style = attribs[i];\n                if (styles.hasOwnProperty(style)) {\n                    this[style] = styles[style];\n                }\n            }\n        },\n        \n        isDefault : function() {\n            return (this.foreground === \"white\" && !this.underline && !this.italics && \n                    this.background === \"black\" && !this.flash);\n        },\n\n        equals : function(other) {\n            return ( (this.foreground === other.foreground) && \n                     (this.underline === other.underline) &&\n                     (this.italics === other.italics) &&\n                     (this.background === other.background) &&\n                     (this.flash === other.flash) );\n        },\n\n        copy : function(newPenState) {\n            this.foreground = newPenState.foreground;\n            this.underline = newPenState.underline;\n            this.italics = newPenState.italics;\n            this.background = newPenState.background;\n            this.flash = newPenState.flash;\n        },\n        \n        toString: function() {\n            return (\"color=\" + this.foreground + \", underline=\" + this.underline + \", italics=\" + this.italics +\n                \", background=\" + this.background + \", flash=\" + this.flash);\n        }\n    };\n\n    /**\n     * Unicode character with styling and background.\n     * @constructor\n     */\n    var StyledUnicodeChar = function(uchar, foreground, underline, italics, background, flash) {\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline,italics, background, flash);\n    };\n\n    StyledUnicodeChar.prototype = {\n        \n        reset: function() {\n            this.uchar = ' ';\n            this.penState.reset();\n        },\n        \n        setChar: function(uchar, newPenState) {\n            this.uchar = uchar;\n            this.penState.copy(newPenState);\n        },\n        \n        setPenState: function(newPenState) {\n            this.penState.copy(newPenState);\n        },\n        \n        equals: function(other) {\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\n        },\n        \n        copy: function(newChar) {\n            this.uchar = newChar.uchar;\n            this.penState.copy(newChar.penState);\n        },\n        \n        isEmpty : function() {\n            return this.uchar === ' ' && this.penState.isDefault();\n        }\n    };\n\n    /**\n     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n     * @constructor\n     */\n    var Row = function() {\n        this.chars = [];\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    };\n\n    Row.prototype = {\n        \n        equals: function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].equals(other.chars[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n        \n        copy: function(other) {\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                this.chars[i].copy(other.chars[i]);\n            }\n        },\n        \n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        /**\n         *  Set the cursor to a valid column.\n         */\n        setCursor : function(absPos) {\n            if (this.pos !== absPos) {\n                this.pos = absPos;\n            }\n            if (this.pos < 0) {\n                logger.log(\"ERROR\", \"Negative cursor position \" + this.pos);\n                this.pos = 0;\n            } else if (this.pos > NR_COLS) {\n                logger.log(\"ERROR\", \"Too large cursor position \" + this.pos);\n                this.pos = NR_COLS;\n            }\n        },\n\n        /** \n         * Move the cursor relative to current position.\n         */\n        moveCursor : function(relPos) {\n            var newPos = this.pos + relPos;\n            if (relPos > 1) {\n                for (var i = this.pos+1; i < newPos+1 ; i++) {\n                    this.chars[i].setPenState(this.currPenState);\n                }\n            }\n            this.setCursor(newPos);\n        },\n\n        /**\n         * Backspace, move one step back and clear character.\n         */\n        backSpace : function () {\n            this.moveCursor(-1);\n            this.chars[this.pos].setChar(' ', this.currPenState);\n        },\n\n        insertChar: function(byte) {\n            if (byte >= 0x90) { //Extended char\n                this.backSpace();\n            }\n            var char = getCharForByte(byte);\n            if (this.pos >= NR_COLS) {\n                logger.log(\"ERROR\", \"Cannot insert \" + byte.toString(16) +  \n                            \" (\" + char + \") at position \" + this.pos + \". Skipping it!\");\n                return;\n            }\n            this.chars[this.pos].setChar(char, this.currPenState);\n            this.moveCursor(1);\n        },\n\n        clearFromPos : function(startPos) {\n            var i;\n            for (i = startPos ; i < NR_COLS ; i++) {\n                this.chars[i].reset();\n            }\n        },\n\n        clear : function() {\n            this.clearFromPos(0);\n            this.pos = 0;\n            this.currPenState.reset();\n        },\n\n        clearToEndOfRow : function() {\n            this.clearFromPos(this.pos);\n        },\n\n        getTextString: function() {\n            var chars = [];\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS ; i++) {\n                var char = this.chars[i].uchar;\n                if (char !== \" \") {\n                    empty = false;\n                }\n                chars.push(char);\n            }\n            if (empty) {\n                return \"\";\n            } else {\n                return chars.join(\"\");\n            }\n        },\n\n        setPenStyles: function(styles) {\n            this.currPenState.setStyles(styles);\n            var currChar = this.chars[this.pos];\n            currChar.setPenState(this.currPenState);\n        }\n    };\n\n    /**\n     * Keep a CEA-608 screen of 32x15 styled characters\n     * @constructor\n    */\n    var CaptionScreen = function() {\n\n        this.rows = [];\n        for (var i = 0 ; i <  NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    };\n\n    CaptionScreen.prototype = {\n\n        reset : function() {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].clear();\n            }\n            this.currRow = NR_ROWS - 1;\n        },\n\n        equals : function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].equals(other.rows[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n\n        copy : function(other) {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].copy(other.rows[i]);\n            }\n        },\n\n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        backSpace : function() {\n            var row = this.rows[this.currRow]; \n            row.backSpace();\n        },\n\n        clearToEndOfRow : function() {\n            var row = this.rows[this.currRow];\n            row.clearToEndOfRow();\n        },\n\n        /**\n         * Insert a character (without styling) in the current row.\n         */\n        insertChar : function(char) {\n            var row = this.rows[this.currRow];\n            row.insertChar(char);\n        },\n\n        setPen : function(styles) {\n            var row = this.rows[this.currRow];\n            row.setPenStyles(styles);\n        },\n\n        moveCursor : function(relPos) {\n            var row = this.rows[this.currRow];\n            row.moveCursor(relPos); \n        },\n\n        setCursor : function(absPos) {\n            logger.log(\"INFO\", \"setCursor: \" + absPos);\n            var row = this.rows[this.currRow];\n            row.setCursor(absPos);\n        },\n\n        setPAC : function(pacData) {\n            logger.log(\"INFO\", \"pacData = \" + JSON.stringify(pacData));\n            var newRow = pacData.row - 1;\n            if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\n                    newRow = this.nrRollUpRows-1;\n            }\n            this.currRow = newRow;\n            var row = this.rows[this.currRow];\n            if (pacData.indent !== null) {\n                var indent = pacData.indent;\n                var prevPos = Math.max(indent-1, 0);\n                row.setCursor(pacData.indent);\n                pacData.color = row.chars[prevPos].penState.foreground;\n            }\n            var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\n            this.setPen(styles);\n        },\n\n        /**\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n         */\n        setBkgData : function(bkgData) {\n\n            logger.log(\"INFO\", \"bkgData = \" + JSON.stringify(bkgData));\n            this.backSpace();\n            this.setPen(bkgData);\n            this.insertChar(0x20); //Space\n        },\n\n        setRollUpRows : function(nrRows) {\n            this.nrRollUpRows = nrRows;\n        },\n\n        rollUp : function() {\n            if (this.nrRollUpRows === null) {\n                logger.log(\"DEBUG\", \"roll_up but nrRollUpRows not set yet\");\n                return; //Not properly setup\n            }\n            logger.log(\"TEXT\", this.getDisplayText());\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\n            topRow.clear();\n            this.rows.splice(this.currRow, 0, topRow);\n            logger.log(\"INFO\", \"Rolling up\");\n            //logger.log(\"TEXT\", this.get_display_text())\n        },\n\n       /**\n        * Get all non-empty rows with as unicode text. \n        */        \n        getDisplayText : function(asOneRow) {\n            asOneRow = asOneRow || false;\n            var displayText = [];\n            var text = \"\";\n            var rowNr = -1;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                var rowText = this.rows[i].getTextString();\n                if (rowText) {\n                    rowNr = i+1;\n                    if (asOneRow) {\n                        displayText.push(\"Row \" + rowNr + ': \"' + rowText + '\"');\n                    } else {\n                        displayText.push(rowText.trim());\n                    }\n                }\n            }\n            if (displayText.length > 0) {\n                if (asOneRow) {\n                    text = \"[\" + displayText.join(\" | \") + \"]\";\n                } else {\n                    text = displayText.join(\"\\n\");\n                }\n            }\n            return text;\n        },\n\n        getTextAndFormat : function() {\n            return this.rows;\n        }\n    };\n\n    /**\n     * Handle a CEA-608 channel and send decoded data to outputFilter\n     * @constructor\n     * @param {Number} channelNumber (1 or 2)\n     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)\n    */\n    var Cea608Channel = function(channelNumber, outputFilter) {\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    };\n\n    Cea608Channel.prototype = {\n        \n        modes : [\"MODE_ROLL-UP\", \"MODE_POP-ON\", \"MODE_PAINT-ON\", \"MODE_TEXT\"],\n        \n        reset : function() {\n            this.mode = null;\n            this.displayedMemory.reset();\n            this.nonDisplayedMemory.reset();\n            this.lastOutputScreen.reset();\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n            this.writeScreen = this.displayedMemory;\n            this.mode = null;\n            this.cueStartTime = null;\n            this.lastCueEndTime = null;\n        },\n\n        getHandler : function() {\n            return this.outputFilter;\n        },\n\n        setHandler : function(newHandler) {\n            this.outputFilter = newHandler;\n        },\n\n        setPAC : function(pacData) {\n            this.writeScreen.setPAC(pacData);\n        },\n\n        setBkgData : function(bkgData) {\n            this.writeScreen.setBkgData(bkgData);\n        },\n\n        setMode : function(newMode) {\n            if (newMode === this.mode) {\n                return;\n            }\n            this.mode = newMode;\n            logger.log(\"INFO\", \"MODE=\" + newMode);\n            if (this.mode == \"MODE_POP-ON\") {\n                this.writeScreen = this.nonDisplayedMemory;\n            } else {\n                this.writeScreen = this.displayedMemory;\n                this.writeScreen.reset();\n            }\n            if (this.mode !== \"MODE_ROLL-UP\") {\n                this.displayedMemory.nrRollUpRows = null;\n                this.nonDisplayedMemory.nrRollUpRows = null;\n            }\n            this.mode = newMode;\n        },\n\n        insertChars : function(chars) {\n            for (var i = 0 ; i < chars.length ; i++) {\n                this.writeScreen.insertChar(chars[i]);\n            }\n            var screen = this.writeScreen === this.displayedMemory ? \"DISP\" : \"NON_DISP\";\n            logger.log(\"INFO\", screen + \": \" + this.writeScreen.getDisplayText(true));\n            if (this.mode === \"MODE_PAINT-ON\" || this.mode === \"MODE_ROLL-UP\") {\n                logger.log(\"TEXT\", \"DISPLAYED: \" + this.displayedMemory.getDisplayText(true));\n                this.outputDataUpdate();\n            }\n        },\n\n        cc_RCL: function() { // Resume Caption Loading (switch mode to Pop On)\n            logger.log(\"INFO\", \"RCL - Resume Caption Loading\");\n            this.setMode(\"MODE_POP-ON\");\n        },\n        cc_BS: function() { // BackSpace\n            logger.log(\"INFO\", \"BS - BackSpace\");\n            if (this.mode === \"MODE_TEXT\") {\n                return;\n            }\n            this.writeScreen.backSpace();\n            if (this.writeScreen === this.displayedMemory) {\n                this.outputDataUpdate();\n            }\n        },\n        cc_AOF : function() { // Reserved (formerly Alarm Off)\n            return;\n        },\n        cc_AON: function() { // Reserved (formerly Alarm On)\n            return;\n        },\n        cc_DER: function() { // Delete to End of Row\n            logger.log(\"INFO\", \"DER- Delete to End of Row\");\n            this.writeScreen.clearToEndOfRow();\n            this.outputDataUpdate();\n        },\n        cc_RU: function(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\n            logger.log(\"INFO\", \"RU(\" + nrRows +\") - Roll Up\");\n            this.writeScreen = this.displayedMemory;\n            this.setMode(\"MODE_ROLL-UP\");\n            this.writeScreen.setRollUpRows(nrRows);\n        },\n        cc_FON: function() { //Flash On\n            logger.log(\"INFO\", \"FON - Flash On\");\n            this.writeScreen.setPen({flash : true});\n        },\n        cc_RDC: function() { // Resume Direct Captioning (switch mode to PaintOn)\n            logger.log(\"INFO\", \"RDC - Resume Direct Captioning\");\n            this.setMode(\"MODE_PAINT-ON\");\n        },\n        cc_TR: function() { // Text Restart in text mode (not supported, however)\n            logger.log(\"INFO\", \"TR\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_RTD: function() { // Resume Text Display in Text mode (not supported, however)\n            logger.log(\"INFO\", \"RTD\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_EDM: function() { // Erase Displayed Memory\n            logger.log(\"INFO\", \"EDM - Erase Displayed Memory\");\n            this.displayedMemory.reset();\n            this.outputDataUpdate();\n        },\n        cc_CR: function() { // Carriage Return\n            logger.log(\"CR - Carriage Return\");\n            this.writeScreen.rollUp();\n            this.outputDataUpdate();\n        },\n        cc_ENM: function() { //Erase Non-Displayed Memory\n            logger.log(\"INFO\", \"ENM - Erase Non-displayed Memory\");\n            this.nonDisplayedMemory.reset();\n        },\n        cc_EOC: function() { //End of Caption (Flip Memories)\n            logger.log(\"INFO\", \"EOC - End Of Caption\");\n            if (this.mode === \"MODE_POP-ON\") {\n                var tmp = this.displayedMemory;\n                this.displayedMemory = this.nonDisplayedMemory;\n                this.nonDisplayedMemory = tmp;\n                this.writeScreen = this.nonDisplayedMemory;\n                logger.log(\"TEXT\", \"DISP: \" + this.displayedMemory.getDisplayText());\n            }\n            this.outputDataUpdate();\n        },\n        cc_TO: function(nrCols) { // Tab Offset 1,2, or 3 columns\n            logger.log(\"INFO\", \"TO(\" + nrCols + \") - Tab Offset\");\n            this.writeScreen.moveCursor(nrCols);\n        },\n        cc_MIDROW: function(secondByte) { // Parse MIDROW command\n            var styles = {flash : false};\n            styles.underline = secondByte % 2 === 1;\n            styles.italics = secondByte >= 0x2e;\n            if (!styles.italics) {\n                var colorIndex = Math.floor(secondByte/2) - 0x10;\n                var colors = [\"white\", \"green\", \"blue\", \"cyan\", \"red\", \"yellow\", \"magenta\"];\n                styles.foreground = colors[colorIndex];\n            } else {\n                styles.foreground = \"white\";\n            }\n            logger.log(\"INFO\", \"MIDROW: \" + JSON.stringify(styles));\n            this.writeScreen.setPen(styles);\n        },\n\n        outputDataUpdate: function() {\n            var t = logger.time;\n            if (t === null) {\n                return;\n            }\n            if (this.outputFilter) {\n                if (this.outputFilter.updateData) {\n                    this.outputFilter.updateData(t, this.displayedMemory);\n                }\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\n                    this.cueStartTime = t;\n                } else {\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) { \n                        if (this.outputFilter.newCue) {\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                        }\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                    }\n                }\n                this.lastOutputScreen.copy(this.displayedMemory);\n            }\n        },\n\n        cueSplitAtTime : function(t) {\n            if (this.outputFilter) {\n                if (!this.displayedMemory.isEmpty()) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                    }\n                    this.cueStartTime = t;\n                }\n            }\n        }\n    };\n\n    /**\n     * Parse CEA-608 data and send decoded data to out1 and out2.\n     * @constructor\n     * @param {Number} field  CEA-608 field (1 or 2)\n     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)\n     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)\n     */\n    var Cea608Parser = function(field, out1, out2) {\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\n    };\n\n    Cea608Parser.prototype = {\n        \n        getHandler : function(index) {\n            return this.channels[index].getHandler();\n        },\n        \n        setHandler : function(index, newHandler) {\n            this.channels[index].setHandler(newHandler);\n        },\n\n        /**\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n         */\n        addData : function(t, byteList) {\n            var cmdFound, a, b, \n            charsFound = false;\n            \n            this.lastTime = t;\n            logger.setTime(t);\n\n            for (var i = 0 ; i < byteList.length ; i+=2) {\n                a = byteList[i] & 0x7f;\n                b = byteList[i+1] & 0x7f;\n\n                if (a >= 0x10 && a <= 0x1f && a === this.lastCmdA && b === this.lastCmdB) {\n                    this.lastCmdA = null;\n                    this.lastCmdB = null;\n                    logger.log(\"DEBUG\", \"Repeated command (\" + numArrayToHexArray([a, b]) + \") is dropped\");\n                    continue; // Repeated commands are dropped (once)\n                }\n\n                if (a === 0 && b === 0) {\n                    this.dataCounters.padding += 2;\n                    continue;\n                } else {\n                    logger.log(\"DATA\", \"[\" + numArrayToHexArray([byteList[i], byteList[i+1]]) +\"] -> (\" + numArrayToHexArray([a, b]) + \")\");\n                }\n                cmdFound = this.parseCmd(a, b);\n                if (!cmdFound) {\n                    cmdFound = this.parseMidrow(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parsePAC(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parseBackgroundAttributes(a, b);\n                }\n                if (!cmdFound) {\n                    charsFound = this.parseChars(a, b);\n                    if (charsFound) {\n                        if (this.currChNr && this.currChNr >=0) {\n                            var channel = this.channels[this.currChNr-1];\n                            channel.insertChars(charsFound);\n                        } else {\n                            logger.log(\"WARNING\", \"No channel found yet. TEXT-MODE?\");\n                        }\n                    }\n                }\n                if (cmdFound) {\n                    this.dataCounters.cmd += 2;\n                } else if (charsFound) {\n                    this.dataCounters.char += 2;\n                } else {\n                    this.dataCounters.other += 2;\n                    logger.log(\"WARNING\", \"Couldn't parse cleaned data \" + numArrayToHexArray([a, b]) +\n                                \" orig: \" + numArrayToHexArray([byteList[i], byteList[i+1]]));\n                }\n            }\n        },\n\n        /**\n         * Parse Command.\n         * @returns {Boolean} Tells if a command was found\n         */\n        parseCmd: function(a, b) {\n            var chNr = null;\n\n            var cond1 = (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) && (0x20 <= b && b <= 0x2F);\n            var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\n            if (!(cond1 || cond2)) {\n                return false;\n            }\n                 \n            if (a === 0x14 || a === 0x15 || a === 0x17) {\n                chNr = 1;\n            } else {\n                chNr = 2; // (a === 0x1C || a === 0x1D || a=== 0x1f)\n            }\n\n            var channel = this.channels[chNr - 1];\n\n            if (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) {\n                if (b === 0x20) {\n                    channel.cc_RCL();\n                } else if (b === 0x21) {\n                    channel.cc_BS();\n                } else if (b === 0x22) {\n                    channel.cc_AOF();\n                } else if (b === 0x23) {\n                    channel.cc_AON();\n                } else if (b === 0x24) {\n                    channel.cc_DER();\n                } else if (b === 0x25) {\n                    channel.cc_RU(2);\n                } else if (b === 0x26) {\n                    channel.cc_RU(3);\n                } else if (b === 0x27) {\n                    channel.cc_RU(4);\n                } else if (b === 0x28) {\n                    channel.cc_FON();\n                } else if (b === 0x29) {\n                    channel.cc_RDC();\n                } else if (b === 0x2A) {\n                    channel.cc_TR();\n                } else if (b === 0x2B) {\n                    channel.cc_RTD();\n                } else if (b === 0x2C) {\n                    channel.cc_EDM();\n                } else if (b === 0x2D) {\n                    channel.cc_CR();\n                } else if (b === 0x2E) {\n                    channel.cc_ENM();\n                } else if (b === 0x2F) {\n                    channel.cc_EOC();\n                }\n            } else { //a == 0x17 || a == 0x1F\n                channel.cc_TO(b - 0x20);\n            }\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Parse midrow styling command\n         * @returns {Boolean}\n         */\n        parseMidrow : function(a, b) {\n            var chNr = null;\n                \n            if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\n                if (a === 0x11) {\n                    chNr = 1;\n                } else  {\n                    chNr = 2;\n                }\n                if (chNr !== this.currChNr) {\n                    logger.log(\"ERROR\", \"Mismatch channel in midrow parsing\");\n                    return false;\n                }\n                var channel = this.channels[chNr-1];\n                // cea608 spec says midrow codes should inject a space\n                channel.insertChars([0x20]);\n                channel.cc_MIDROW(b);\n                logger.log(\"DEBUG\", \"MIDROW (\" + numArrayToHexArray([a, b]) + \")\");\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Parse Preable Access Codes (Table 53).\n         * @returns {Boolean} Tells if PAC found\n         */\n        parsePAC : function(a, b) {\n\n           var chNr = null;\n           var row = null;\n            \n            var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\n            var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\n            if (! (case1 || case2)) {\n                return false;\n            }\n\n            chNr = (a <= 0x17) ? 1 : 2;\n\n            if (0x40 <= b && b <= 0x5F) {\n                row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\n            } else { // 0x60 <= b <= 0x7F\n                row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\n            }\n            var pacData = this.interpretPAC(row, b);\n            var channel = this.channels[chNr-1];\n            channel.setPAC(pacData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Interpret the second byte of the pac, and return the information.\n         * @returns {Object} pacData with style parameters.\n         */\n        interpretPAC : function (row, byte) {\n            var pacIndex = byte;\n            var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\n            \n            if (byte > 0x5F) {\n                pacIndex = byte - 0x60;\n            } else {\n                pacIndex = byte - 0x40;\n            }\n            pacData.underline = (pacIndex & 1) === 1;\n            if (pacIndex <= 0xd) {\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\n            } else if (pacIndex <= 0xf) {\n                pacData.italics = true;\n                pacData.color = 'white';\n            } else {\n                pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\n            }\n            return pacData; // Note that row has zero offset. The spec uses 1.\n        },\n\n        /**\n         * Parse characters.\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n         */\n        parseChars : function(a, b) {\n\n           var  channelNr = null,\n                charCodes = null,\n                charCode1 = null,\n                charCode2 = null;\n\n            if (a >= 0x19) {\n                channelNr = 2;\n                charCode1 = a - 8;\n            } else {\n                channelNr = 1;\n                charCode1 = a;\n            }\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n                // Special character\n                var oneCode = b;\n                if (charCode1 === 0x11) {\n                    oneCode = b + 0x50;\n                } else if (charCode1 === 0x12) {\n                    oneCode = b + 0x70;\n                } else {\n                    oneCode = b + 0x90;\n                }\n                logger.log(\"INFO\", \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr);\n                charCodes = [oneCode];\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n            } else if (0x20 <= a && a <= 0x7f) {\n                charCodes = (b === 0) ? [a] : [a, b];\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n            }\n            if (charCodes) {\n                var hexCodes = numArrayToHexArray(charCodes);\n                logger.log(\"DEBUG\", \"Char codes =  \" + hexCodes.join(\",\"));\n            }\n            return charCodes;\n        },\n        \n        /**\n        * Parse extended background attributes as well as new foreground color black.\n        * @returns{Boolean} Tells if background attributes are found\n        */\n        parseBackgroundAttributes : function(a, b) {\n           var  bkgData,\n                index,\n                chNr,\n                channel;\n\n            var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\n            var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\n            if (!(case1 || case2)) {\n                return false;\n            }\n            bkgData = {};\n            if (a  === 0x10 || a === 0x18) {\n                index = Math.floor((b-0x20)/2);\n                bkgData.background = backgroundColors[index];\n                if (b % 2 === 1) {\n                    bkgData.background = bkgData.background + \"_semi\";\n                }\n            } else if (b === 0x2d) {\n                bkgData.background = \"transparent\";\n            } else {\n                bkgData.foreground = \"black\";\n                if (b === 0x2f) {\n                    bkgData.underline = true;\n                }\n            }\n            chNr = (a < 0x18) ? 1 : 2;\n            channel = this.channels[chNr-1];\n            channel.setBkgData(bkgData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            return true;\n        },\n\n        /**\n         * Reset state of parser and its channels.\n         */\n        reset : function() {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].reset();\n                }\n            }\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        },\n\n        /**\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n         */\n        cueSplitAtTime : function(t) {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].cueSplitAtTime(t);\n                }\n            }\n        },\n    };\n\n    /**\n     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.\n     * @param {raw} dataView of binary data\n     * @param {startPos} start position in raw\n     * @param {size} total size of data in raw to consider\n     * @returns \n     */\n    var findCea608Nalus = function(raw, startPos, size) {\n        var nalSize = 0,\n            cursor = startPos,\n            nalType = 0,\n            cea608NaluRanges = [],\n            // Check SEI data according to ANSI-SCTE 128\n            isCEA608SEI = function (payloadType, payloadSize, raw, pos) {\n                if (payloadType !== 4 || payloadSize < 8) {\n                    return null;\n                }\n                var countryCode = raw.getUint8(pos);\n                var providerCode = raw.getUint16(pos + 1);\n                var userIdentifier = raw.getUint32(pos + 3);\n                var userDataTypeCode = raw.getUint8(pos + 7);\n                return countryCode == 0xB5 && providerCode == 0x31 && userIdentifier == 0x47413934 && userDataTypeCode == 0x3;\n            };\n        while (cursor < startPos + size) {\n            nalSize = raw.getUint32(cursor);\n            nalType = raw.getUint8(cursor + 4) & 0x1F;\n            //console.log(time + \"  NAL \" + nalType);\n            if (nalType === 6) {\n                // SEI NAL Unit. The NAL header is the first byte\n                //console.log(\"SEI NALU of size \" + nalSize + \" at time \" + time);\n                var pos = cursor + 5;\n                var payloadType = -1;\n                while (pos < cursor + 4 + nalSize - 1) { // The last byte should be rbsp_trailing_bits\n                    payloadType = 0;\n                    var b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadType += b;\n                        pos++;\n                    }\n                    var payloadSize = 0;\n                    b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadSize += b;\n                        pos++;\n                    }\n                    if (isCEA608SEI(payloadType, payloadSize, raw, pos)) {\n                        //console.log(\"CEA608 SEI \" + time + \" \" + payloadSize);\n                        cea608NaluRanges.push([pos, payloadSize]);\n                    }\n                    pos += payloadSize;\n                }\n            }\n            cursor += nalSize + 4;\n        }\n        return cea608NaluRanges;\n    };\n    \n    var extractCea608DataFromRange = function(raw, cea608Range) {\n        var pos = cea608Range[0];\n        var fieldData = [[], []];\n\n        pos += 8; // Skip the identifier up to userDataTypeCode\n        var ccCount = raw.getUint8(pos) & 0x1f;\n        pos += 2; // Advance 1 and skip reserved byte\n          \n        for (var i = 0; i < ccCount; i++) {\n            var byte = raw.getUint8(pos);\n            var ccValid = byte & 0x4;\n            var ccType = byte & 0x3;\n            pos++;\n            var ccData1 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            var ccData2 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            if (ccValid && ((ccData1 & 0x7f) + (ccData2 & 0x7f) !== 0)) { //Check validity and non-empty data\n                if (ccType === 0) {\n                    fieldData[0].push(ccData1);\n                    fieldData[0].push(ccData2);\n                } else if (ccType === 1) {\n                    fieldData[1].push(ccData1);\n                    fieldData[1].push(ccData2);\n                }\n            }\n        }\n        return fieldData;\n    };\n\n    exports.logger = logger;\n    exports.PenState = PenState;\n    exports.CaptionScreen = CaptionScreen;  \n    exports.Cea608Parser = Cea608Parser;\n    exports.findCea608Nalus = findCea608Nalus;\n    exports.extractCea608DataFromRange = extractCea608DataFromRange;\n\n}(typeof exports === 'undefined' ? this.cea608parser = {} : exports));\n"]}