{"version":3,"sources":["../../../../../src/streaming/vo/IsoBox.js"],"names":["IsoBox","constructor","boxData","offset","_offset","type","size","boxes","i","length","push","isComplete","timescale","earliest_presentation_time","first_offset","references","reference","reference_type","referenced_size","subsegment_duration","id","value","scheme_id_uri","presentation_time_delta","version","presentation_time","event_duration","message_data","sequence_number","entry_count","entries","base_data_offset","sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","flags","baseMediaDecodeTime","sample_count","first_sample_flags","data_offset","samples","ln","sample","sample_size","sample_duration","sample_composition_time_offset","getChildBox","getChildBoxes"],"mappings":"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","file":"IsoBox.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor(boxData) {\n        this.offset = boxData._offset;\n        this.type = boxData.type;\n        this.size = boxData.size;\n        this.boxes = [];\n        if (boxData.boxes) {\n            for (let i = 0; i < boxData.boxes.length; i++) {\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\n            }\n        }\n        this.isComplete = true;\n\n        switch (boxData.type) {\n            case 'sidx':\n                this.timescale = boxData.timescale;\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\n                this.first_offset = boxData.first_offset;\n                this.references = boxData.references;\n                if (boxData.references) {\n                    this.references = [];\n                    for (let i = 0; i < boxData.references.length; i++) {\n                        let reference = {\n                            reference_type: boxData.references[i].reference_type,\n                            referenced_size: boxData.references[i].referenced_size,\n                            subsegment_duration: boxData.references[i].subsegment_duration\n                        };\n                        this.references.push(reference);\n                    }\n                }\n                break;\n            case 'emsg':\n                this.id = boxData.id;\n                this.value = boxData.value;\n                this.timescale = boxData.timescale;\n                this.scheme_id_uri = boxData.scheme_id_uri;\n                this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\n                this.event_duration = boxData.event_duration;\n                this.message_data = boxData.message_data;\n                break;\n            case 'mdhd':\n                this.timescale = boxData.timescale;\n                break;\n            case 'mfhd':\n                this.sequence_number = boxData.sequence_number;\n                break;\n            case 'subs':\n                this.entry_count = boxData.entry_count;\n                this.entries = boxData.entries;\n                break;\n            case 'tfhd':\n                this.base_data_offset = boxData.base_data_offset;\n                this.sample_description_index = boxData.sample_description_index;\n                this.default_sample_duration = boxData.default_sample_duration;\n                this.default_sample_size = boxData.default_sample_size;\n                this.default_sample_flags = boxData.default_sample_flags;\n                this.flags = boxData.flags;\n                break;\n            case 'tfdt':\n                this.version = boxData.version;\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n                this.flags = boxData.flags;\n                break;\n            case 'trun':\n                this.sample_count = boxData.sample_count;\n                this.first_sample_flags = boxData.first_sample_flags;\n                this.data_offset = boxData.data_offset;\n                this.flags = boxData.flags;\n                this.samples = boxData.samples;\n                if (boxData.samples) {\n                    this.samples = [];\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\n                        let sample = {\n                            sample_size: boxData.samples[i].sample_size,\n                            sample_duration: boxData.samples[i].sample_duration,\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\n                        };\n                        this.samples.push(sample);\n                    }\n                }\n                break;\n        }\n\n    }\n\n    getChildBox(type) {\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                return this.boxes[i];\n            }\n        }\n    }\n\n    getChildBoxes(type) {\n        let boxes = [];\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                boxes.push(this.boxes[i]);\n            }\n        }\n        return boxes;\n    }\n\n}\n\nexport default IsoBox;\n"]}