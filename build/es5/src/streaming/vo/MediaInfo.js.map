{"version":3,"sources":["../../../../../src/streaming/vo/MediaInfo.js"],"names":["MediaInfo","constructor","id","index","type","streamInfo","representationCount","lang","viewpoint","accessibility","audioChannelConfiguration","roles","codec","mimeType","contentProtection","isText","KID","bitrateList","isMediaInfoEqual","mediaInfo","sameId","sameViewpoint","sameLang","sameRoles","toString","sameAccessibility","sameAudioChannelConfiguration"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;AAIA,MAAMA,SAAN,CAAgB;AACZC,kBAAc;AACV,aAAKC,EAAL,GAAU,IAAV;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,UAAL,GAAkB,IAAlB;AACA,aAAKC,mBAAL,GAA2B,CAA3B;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,aAAL,GAAqB,IAArB;AACA,aAAKC,yBAAL,GAAiC,IAAjC;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,iBAAL,GAAyB,IAAzB;AACA,aAAKC,MAAL,GAAc,KAAd;AACA,aAAKC,GAAL,GAAW,IAAX;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACH;;AAEDC,qBAAiBC,SAAjB,EAA4B;AACxB,YAAI,CAACA,SAAL,EAAgB;AACZ,mBAAO,KAAP;AACH;;AAED,cAAMC,SAAS,KAAKlB,EAAL,KAAYiB,UAAUjB,EAArC;AACA,cAAMmB,gBAAgB,KAAKb,SAAL,KAAmBW,UAAUX,SAAnD;AACA,cAAMc,WAAW,KAAKf,IAAL,KAAcY,UAAUZ,IAAzC;AACA,cAAMgB,YAAY,KAAKZ,KAAL,CAAWa,QAAX,OAA0BL,UAAUR,KAAV,CAAgBa,QAAhB,EAA5C;AACA,cAAMC,oBAAoB,KAAKhB,aAAL,CAAmBe,QAAnB,OAAkCL,UAAUV,aAAV,CAAwBe,QAAxB,EAA5D;AACA,cAAME,gCAAgC,KAAKhB,yBAAL,CAA+Bc,QAA/B,OAA8CL,UAAUT,yBAAV,CAAoCc,QAApC,EAApF;;AAEA,eAAQJ,UAAUC,aAAV,IAA2BC,QAA3B,IAAuCC,SAAvC,IAAoDE,iBAApD,IAAyEC,6BAAjF;AACH;AAjCW;;AAoChB,eAAe1B,SAAf","file":"MediaInfo.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.type = null;\n        this.streamInfo = null;\n        this.representationCount = 0;\n        this.lang = null;\n        this.viewpoint = null;\n        this.accessibility = null;\n        this.audioChannelConfiguration = null;\n        this.roles = null;\n        this.codec = null;\n        this.mimeType = null;\n        this.contentProtection = null;\n        this.isText = false;\n        this.KID = null;\n        this.bitrateList = null;\n    }\n\n    isMediaInfoEqual(mediaInfo) {\n        if (!mediaInfo) {\n            return false;\n        }\n\n        const sameId = this.id === mediaInfo.id;\n        const sameViewpoint = this.viewpoint === mediaInfo.viewpoint;\n        const sameLang = this.lang === mediaInfo.lang;\n        const sameRoles = this.roles.toString() === mediaInfo.roles.toString();\n        const sameAccessibility = this.accessibility.toString() === mediaInfo.accessibility.toString();\n        const sameAudioChannelConfiguration = this.audioChannelConfiguration.toString() === mediaInfo.audioChannelConfiguration.toString();\n\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\n    }\n}\n\nexport default MediaInfo;"]}