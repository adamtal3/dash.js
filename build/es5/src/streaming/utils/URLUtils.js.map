{"version":3,"sources":["../../../../../src/streaming/utils/URLUtils.js"],"names":["FactoryMaker","URLUtils","resolveFunction","schemeRegex","httpUrlRegex","httpsUrlRegex","originRegex","nativeURLResolver","url","baseUrl","window","URL","toString","e","dumbURLResolver","baseUrlParseFunc","parseBaseUrl","isRelative","isPathAbsolute","parseOrigin","isSchemeRelative","parseScheme","base","joinChar","charAt","length","join","setup","u","slashIndex","indexOf","lastSlashIndex","lastIndexOf","substring","matches","match","test","isHTTPURL","isHTTPS","resolve","instance","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"URLUtils.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module URLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const httpsUrlRegex = /^https:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            // this will throw if baseurl is undefined, invalid etc\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        let baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        if (isSchemeRelative(url)) {\n            baseUrlParseFunc = parseScheme;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n              base.charAt(base.length - 1) !== '/' &&\n              url.charAt(0) !== '/' ?\n              '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        const matches = url.match(schemeRegex);\n\n        if (matches) {\n            return matches[0];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return url.indexOf('//') === 0;\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return httpsUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nexport default FactoryMaker.getSingletonFactory(URLUtils);\n"]}