{"version":3,"sources":["../../../../../src/streaming/utils/IsoFile.js"],"names":["IsoBox","FactoryMaker","IsoFile","instance","parsedIsoFile","getBox","type","boxes","length","fetch","convertToDashIsoBox","getBoxes","fetchAll","boxData","box","i","ln","push","setData","value","getLastBox","hasOwnProperty","isComplete","_incomplete","__dashjs_factory_name","getClassFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,OAAT,GAAmB;;AAEf,QAAIC,QAAJ,EACIC,aADJ;;AAGA;;;;;AAKA,aAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,YAAI,CAACA,IAAD,IAAS,CAACF,aAAV,IAA2B,CAACA,cAAcG,KAA1C,IAAoDH,cAAcG,KAAd,CAAoBC,MAApB,KAA+B,CAAnF,IAAyF,OAAOJ,cAAcK,KAArB,KAA+B,UAA5H,EAAwI,OAAO,IAAP;;AAExI,eAAOC,oBAAoBN,cAAcK,KAAd,CAAoBH,IAApB,CAApB,CAAP;AACH;;AAED;;;;;AAKA,aAASK,QAAT,CAAkBL,IAAlB,EAAwB;AACpB,YAAIC,QAAQ,EAAZ;;AAEA,YAAI,CAACD,IAAD,IAAS,CAACF,aAAV,IAA2B,OAAOA,cAAcQ,QAArB,KAAkC,UAAjE,EAA6E;AACzE,mBAAOL,KAAP;AACH;;AAED,YAAIM,UAAUT,cAAcQ,QAAd,CAAuBN,IAAvB,CAAd;AACA,YAAIQ,GAAJ;;AAEA,aAAK,IAAIC,IAAI,CAAR,EAAWC,KAAKH,QAAQL,MAA7B,EAAqCO,IAAIC,EAAzC,EAA6CD,GAA7C,EAAkD;AAC9CD,kBAAMJ,oBAAoBG,QAAQE,CAAR,CAApB,CAAN;;AAEA,gBAAID,GAAJ,EAAS;AACLP,sBAAMU,IAAN,CAAWH,GAAX;AACH;AACJ;;AAED,eAAOP,KAAP;AACH;;AAED;;;;AAIA,aAASW,OAAT,CAAiBC,KAAjB,EAAwB;AACpBf,wBAAgBe,KAAhB;AACH;;AAED;;;;AAIA,aAASC,UAAT,GAAsB;AAClB,YAAI,CAAChB,aAAD,IAAkB,CAACA,cAAcG,KAAjC,IAA0C,CAACH,cAAcG,KAAd,CAAoBC,MAAnE,EAA2E,OAAO,IAAP;;AAE3E,YAAIF,OAAOF,cAAcG,KAAd,CAAoBH,cAAcG,KAAd,CAAoBC,MAApB,GAA6B,CAAjD,EAAoDF,IAA/D;AACA,YAAIC,QAAQI,SAASL,IAAT,CAAZ;;AAEA,eAAOC,MAAMC,MAAN,GAAe,CAAf,GAAmBD,MAAMA,MAAMC,MAAN,GAAe,CAArB,CAAnB,GAA6C,IAApD;AACH;;AAED,aAASE,mBAAT,CAA6BG,OAA7B,EAAsC;AAClC,YAAI,CAACA,OAAL,EAAc,OAAO,IAAP;;AAEd,YAAIC,MAAM,IAAId,MAAJ,CAAWa,OAAX,CAAV;;AAEA,YAAIA,QAAQQ,cAAR,CAAuB,aAAvB,CAAJ,EAA2C;AACvCP,gBAAIQ,UAAJ,GAAiB,CAACT,QAAQU,WAA1B;AACH;;AAED,eAAOT,GAAP;AACH;;AAEDX,eAAW;AACPE,gBAAQA,MADD;AAEPM,kBAAUA,QAFH;AAGPO,iBAASA,OAHF;AAIPE,oBAAYA;AAJL,KAAX;;AAOA,WAAOjB,QAAP;AACH;AACDD,QAAQsB,qBAAR,GAAgC,SAAhC;AACA,eAAevB,aAAawB,eAAb,CAA6BvB,OAA7B,CAAf","file":"IsoFile.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile;\n\n    /**\n    * @param {string} type\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n    * @param {string} type\n    * @returns {Array|null} array of {@link IsoBox}\n    * @memberof IsoFile#\n    */\n    function getBoxes(type) {\n        let boxes = [];\n\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\n            return boxes;\n        }\n\n        let boxData = parsedIsoFile.fetchAll(type);\n        let box;\n\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n    * @param {string} value\n    * @memberof IsoFile#\n    */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\n\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        let boxes = getBoxes(type);\n\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) return null;\n\n        let box = new IsoBox(boxData);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox\n    };\n\n    return instance;\n}\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n"]}