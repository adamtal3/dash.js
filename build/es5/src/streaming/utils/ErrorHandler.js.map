{"version":3,"sources":["../../../../../src/streaming/utils/ErrorHandler.js"],"names":["EventBus","Events","FactoryMaker","ErrorHandler","instance","context","eventBus","getInstance","capabilityError","err","trigger","ERROR","error","event","downloadError","id","url","request","manifestError","message","manifest","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","mediaKeyMessageError","__dashjs_factory_name","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA;;;AAGA,SAASC,YAAT,GAAwB;;AAEpB,MAAIC,QAAJ;AACA,MAAIC,UAAU,KAAKA,OAAnB;AACA,MAAIC,WAAWN,SAASK,OAAT,EAAkBE,WAAlB,EAAf;;AAEA;;;;;AAKA,WAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC1BH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,YAAR,EAAsBC,OAAOJ,GAA7B,EAA/B;AACH;;AAED;;;;;;;AAOA,WAASK,aAAT,CAAuBC,EAAvB,EAA2BC,GAA3B,EAAgCC,OAAhC,EAAyC;AACrCX,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,UAAR,EAAoBC,OAAO,EAACE,IAAIA,EAAL,EAASC,KAAKA,GAAd,EAAmBC,SAASA,OAA5B,EAA3B,EAA/B;AACH;;AAED;;;;;;;;AAQA,WAASC,aAAT,CAAuBC,OAAvB,EAAgCJ,EAAhC,EAAoCK,QAApC,EAA8CX,GAA9C,EAAmD;AAC/CH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,eAAR,EAAyBC,OAAO,EAACM,SAASA,OAAV,EAAmBJ,IAAIA,EAAvB,EAA2BK,UAAUA,QAArC,EAA+CP,OAAOJ,GAAtD,EAAhC,EAA/B;AACH;;AAED;;;;;;;AAOA,WAASY,cAAT,CAAwBF,OAAxB,EAAiCJ,EAAjC,EAAqCO,SAArC,EAAgD;AAC5ChB,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,IAAR,EAAcC,OAAO,EAACM,SAASA,OAAV,EAAmBJ,IAAIA,EAAvB,EAA2BQ,IAAID,SAA/B,EAArB,EAA/B;AACH;;AAED;;;;;AAKA,WAASE,gBAAT,CAA0Bf,GAA1B,EAA+B;AAC3BH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,aAAR,EAAuBC,OAAOJ,GAA9B,EAA/B;AACH;;AAED;;;;;AAKA,WAASgB,oBAAT,CAA8BhB,GAA9B,EAAmC;AAC/BH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,aAAR,EAAuBC,OAAOJ,GAA9B,EAA/B;AACH;;AAED;;;;;AAKA,WAASiB,oBAAT,CAA8BjB,GAA9B,EAAmC;AAC/BH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAO,aAAR,EAAuBC,OAAOJ,GAA9B,EAA/B;AACH;;AAED;;;;AAIA,WAASG,KAAT,CAAeH,GAAf,EAAoB;AAChBH,aAASI,OAAT,CAAiBT,OAAOU,KAAxB,EAA+B,EAACC,OAAOH,GAAR,EAA/B;AACH;;AAEDL,aAAW;AACPI,qBAAiBA,eADV;AAEPM,mBAAeA,aAFR;AAGPI,mBAAeA,aAHR;AAIPG,oBAAgBA,cAJT;AAKPG,sBAAkBA,gBALX;AAMPC,0BAAsBA,oBANf;AAOPC,0BAAsBA,oBAPf;AAQPd,WAAOA;AARA,GAAX;;AAWA,SAAOR,QAAP;AACH;;AAEDD,aAAawB,qBAAb,GAAqC,cAArC;AACA,eAAezB,aAAa0B,mBAAb,CAAiCzB,YAAjC,CAAf","file":"ErrorHandler.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module ErrorHandler\n */\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    /**\n     * @param {number} err  \"mediasource\"|\"mediakeys\"\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    /**\n     * @param {string} id \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\"\n     * @param {string} url \"\"\n     * @param {object} request {XMLHttpRequest instance}\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    /**\n     * @param {string} message \"\"\n     * @param {string} id \"parse\"|\"nostreams\"\n     * @param {obj} manifest {parsed manifest}\n     * @param {obj} err\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    /**\n     * @param {string} message ''\n     * @param {string} id 'parse'\n     * @param {string} ccContent ''\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    /**\n     * @param {string} err\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    /**\n     * @param {string} err\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    /**\n     * @param {string} err\n     * @memberof module:ErrorHandler\n     * @deprecated\n     */\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    /**\n     * @param {object} err DashJSError with code, message and data attributes\n     * @memberof module:ErrorHandler\n     */\n    function error(err) {\n        eventBus.trigger(Events.ERROR, {error: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError,\n        error: error\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\nexport default FactoryMaker.getSingletonFactory(ErrorHandler);"]}