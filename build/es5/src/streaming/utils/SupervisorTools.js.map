{"version":3,"sources":["../../../../../src/streaming/utils/SupervisorTools.js"],"names":["Constants","checkParameterType","parameter","type","BAD_ARGUMENT_ERROR","checkInteger","isInt","isNaN","checkRange","min","max","checkIsVideoOrAudioType","AUDIO","VIDEO"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAOA,SAAP,MAAsB,wBAAtB;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,IAAvC,EAA6C;AAChD,QAAI,OAAOD,SAAP,KAAqBC,IAAzB,EAA+B;AAC3B,cAAMH,UAAUI,kBAAhB;AACH;AACJ;;AAED,OAAO,SAASC,YAAT,CAAsBH,SAAtB,EAAiC;AACpC,UAAMI,QAAQJ,cAAc,IAAd,IAAsB,CAACK,MAAML,SAAN,CAAvB,IAA4CA,YAAY,CAAZ,KAAkB,CAA5E;;AAEA,QAAI,CAACI,KAAL,EAAY;AACR,cAAMN,UAAUI,kBAAV,GAA+B,+BAArC;AACH;AACJ;;AAED,OAAO,SAASI,UAAT,CAAoBN,SAApB,EAA+BO,GAA/B,EAAoCC,GAApC,EAAyC;AAC5C,QAAIR,YAAYO,GAAZ,IAAmBP,YAAYQ,GAAnC,EAAwC;AACpC,cAAMV,UAAUI,kBAAV,GAA+B,0BAArC;AACH;AACJ;;AAED,OAAO,SAASO,uBAAT,CAAiCR,IAAjC,EAAuC;AAC1C,QAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA6BA,SAASH,UAAUY,KAAnB,IAA4BT,SAASH,UAAUa,KAAhF,EAAwF;AACpF,cAAMb,UAAUI,kBAAhB;AACH;AACJ","file":"SupervisorTools.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\n\nexport function checkParameterType(parameter, type) {\n    if (typeof parameter !== type) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}\n\nexport function checkInteger(parameter) {\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\n\n    if (!isInt) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\n    }\n}\n\nexport function checkRange(parameter, min, max) {\n    if (parameter < min || parameter > max) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\n    }\n}\n\nexport function checkIsVideoOrAudioType(type) {\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}"]}