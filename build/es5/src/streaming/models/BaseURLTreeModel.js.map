{"version":3,"sources":["../../../../../src/streaming/models/BaseURLTreeModel.js"],"names":["ObjectUtils","FactoryMaker","DEFAULT_INDEX","NaN","Node","constructor","_baseUrls","_selectedIdx","data","baseUrls","selectedIdx","children","BaseURLTreeModel","instance","root","dashManifestModel","context","objectUtils","getInstance","setup","reset","setConfig","config","checkSetConfigCall","hasOwnProperty","Error","updateChildData","node","index","element","getBaseURLsFromElement","areEqual","getBaseURLCollectionsFromManifest","manifest","Period_asArray","forEach","p","pi","AdaptationSet_asArray","a","ai","Representation_asArray","sort","getRepresentationSortFunction","r","ri","walk","callback","target","child","invalidateSelectedIndexes","serviceLocation","isNaN","update","getForPath","path","nodes","push","filter","n","length","__dashjs_factory_name","getClassFactory"],"mappings":"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","file":"BaseURLTreeModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n    let instance,\n        root,\n        dashManifestModel;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function checkSetConfigCall() {\n        if (!dashManifestModel || !dashManifestModel.hasOwnProperty('getBaseURLsFromElement') || !dashManifestModel.hasOwnProperty('getRepresentationSortFunction')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        checkSetConfigCall();\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest && manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                dashManifestModel.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        let target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        let nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n"]}