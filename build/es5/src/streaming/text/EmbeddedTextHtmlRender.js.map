{"version":3,"sources":["../../../../../src/streaming/text/EmbeddedTextHtmlRender.js"],"names":["FactoryMaker","EmbeddedTextHtmlRender","captionId","instance","checkIndent","chars","line","c","length","uc","uchar","l","ll","replace","getRegionProperties","region","x","y1","Math","max","y2","createRGB","color","getStyle","videoElement","style","fontSize","videoHeight","foreground","italics","underline","background","ltrim","s","rtrim","createHTMLCaptionsFromScreen","startTime","endTime","captionScreen","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","start","end","spans","currentStyle","seenRegions","styleStates","regions","r","row","rows","prevPenState","isEmpty","rowIndent","p","push","name","hasOwnProperty","contat","currPenState","penState","equals","trim","currPenStateString","JSON","parse","stringify","captionsArray","cueID","finalDiv","document","createElement","id","cueRegionProperties","cssText","bodyDiv","className","cueUniWrapper","ptag","lastSpanRow","span","brElement","appendChild","sameRow","spanStyle","spanElement","textContent","type","cueHTMLElement","cellResolution","isFromCEA608","lineHeight","linePadding","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"EmbeddedTextHtmlRender.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/,'').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = {start: startTime, end: endTime, spans: []};\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({ type: 'html',\n                                start: startTime,\n                                end: endTime,\n                                cueHTMLElement: finalDiv,\n                                cueID: cueID,\n                                cellResolution: [32, 15],\n                                isFromCEA608: true,\n                                fontSize: fontSize,\n                                lineHeight: {},\n                                linePadding: {}\n                               });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n"]}