{"version":3,"sources":["../../../../../src/streaming/controllers/MediaSourceController.js"],"names":["FactoryMaker","Debug","MediaSourceController","instance","logger","context","setup","getInstance","getLogger","createMediaSource","hasWebKit","window","hasMediaSource","MediaSource","WebKitMediaSource","attachMediaSource","source","videoModel","objectURL","URL","createObjectURL","setSource","detachMediaSource","setDuration","value","duration","setSeekable","start","end","setLiveSeekableRange","clearLiveSeekableRange","readyState","signalEndOfStream","buffers","sourceBuffers","ln","length","i","updating","buffered","info","endOfStream","__dashjs_factory_name","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,qBAAT,GAAiC;;AAE7B,QAAIC,QAAJ,EACIC,MADJ;;AAGA,UAAMC,UAAU,KAAKA,OAArB;;AAEA,aAASC,KAAT,GAAiB;AACbF,iBAASH,MAAMI,OAAN,EAAeE,WAAf,GAA6BC,SAA7B,CAAuCL,QAAvC,CAAT;AACH;;AAED,aAASM,iBAAT,GAA6B;;AAEzB,YAAIC,YAAa,uBAAuBC,MAAxC;AACA,YAAIC,iBAAkB,iBAAiBD,MAAvC;;AAEA,YAAIC,cAAJ,EAAoB;AAChB,mBAAO,IAAIC,WAAJ,EAAP;AACH,SAFD,MAEO,IAAIH,SAAJ,EAAe;AAClB,mBAAO,IAAII,iBAAJ,EAAP;AACH;;AAED,eAAO,IAAP;AACH;;AAED,aAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,UAAnC,EAA+C;;AAE3C,YAAIC,YAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BJ,MAA3B,CAAhB;;AAEAC,mBAAWI,SAAX,CAAqBH,SAArB;;AAEA,eAAOA,SAAP;AACH;;AAED,aAASI,iBAAT,CAA2BL,UAA3B,EAAuC;AACnCA,mBAAWI,SAAX,CAAqB,IAArB;AACH;;AAED,aAASE,WAAT,CAAqBP,MAArB,EAA6BQ,KAA7B,EAAoC;;AAEhC,YAAIR,OAAOS,QAAP,IAAmBD,KAAvB,EACIR,OAAOS,QAAP,GAAkBD,KAAlB;;AAEJ,eAAOR,OAAOS,QAAd;AACH;;AAED,aAASC,WAAT,CAAqBV,MAArB,EAA6BW,KAA7B,EAAoCC,GAApC,EAAyC;AACrC,YAAIZ,UAAU,OAAOA,OAAOa,oBAAd,KAAuC,UAAjD,IAA+D,OAAOb,OAAOc,sBAAd,KAAyC,UAAxG,IACId,OAAOe,UAAP,KAAsB,MAD1B,IACoCJ,SAAS,CAD7C,IACkDA,QAAQC,GAD9D,EACmE;AAC/DZ,mBAAOc,sBAAP;AACAd,mBAAOa,oBAAP,CAA4BF,KAA5B,EAAmCC,GAAnC;AACH;AACJ;;AAED,aAASI,iBAAT,CAA2BhB,MAA3B,EAAmC;;AAE/B,YAAIiB,UAAUjB,OAAOkB,aAArB;AACA,cAAMC,KAAKF,QAAQG,MAAnB;;AAEA,YAAIpB,OAAOe,UAAP,KAAsB,MAA1B,EAAkC;AAC9B;AACH;;AAED,aAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIF,EAApB,EAAwBE,GAAxB,EAA6B;AACzB,gBAAIJ,QAAQI,CAAR,EAAWC,QAAf,EAAyB;AACrB;AACH;AACD,gBAAIL,QAAQI,CAAR,EAAWE,QAAX,CAAoBH,MAApB,KAA+B,CAAnC,EAAsC;AAClC;AACH;AACJ;AACDhC,eAAOoC,IAAP,CAAY,iCAAZ;AACAxB,eAAOyB,WAAP;AACH;;AAEDtC,eAAW;AACPM,2BAAmBA,iBADZ;AAEPM,2BAAmBA,iBAFZ;AAGPO,2BAAmBA,iBAHZ;AAIPC,qBAAaA,WAJN;AAKPG,qBAAaA,WALN;AAMPM,2BAAmBA;AANZ,KAAX;;AASA1B;;AAEA,WAAOH,QAAP;AACH;;AAEDD,sBAAsBwC,qBAAtB,GAA8C,uBAA9C;AACA,eAAe1C,aAAa2C,mBAAb,CAAiCzC,qBAAjC,CAAf","file":"MediaSourceController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction MediaSourceController() {\n\n    let instance,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            return new MediaSource();\n        } else if (hasWebKit) {\n            return new WebKitMediaSource();\n        }\n\n        return null;\n    }\n\n    function attachMediaSource(source, videoModel) {\n\n        let objectURL = window.URL.createObjectURL(source);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(source, value) {\n\n        if (source.duration != value)\n            source.duration = value;\n\n        return source.duration;\n    }\n\n    function setSeekable(source, start, end) {\n        if (source && typeof source.setLiveSeekableRange === 'function' && typeof source.clearLiveSeekableRange === 'function' &&\n                source.readyState === 'open' && start >= 0 && start < end) {\n            source.clearLiveSeekableRange();\n            source.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n\n        let buffers = source.sourceBuffers;\n        const ln = buffers.length;\n\n        if (source.readyState !== 'open') {\n            return;\n        }\n\n        for (let i = 0; i < ln; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n        logger.info('call to mediaSource endOfStream');\n        source.endOfStream();\n    }\n\n    instance = {\n        createMediaSource: createMediaSource,\n        attachMediaSource: attachMediaSource,\n        detachMediaSource: detachMediaSource,\n        setDuration: setDuration,\n        setSeekable: setSeekable,\n        signalEndOfStream: signalEndOfStream\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n"]}