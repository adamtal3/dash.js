{"version":3,"sources":["../../../../../src/streaming/controllers/BaseURLController.js"],"names":["BaseURLTreeModel","BaseURLSelector","URLUtils","BaseURL","FactoryMaker","EventBus","Events","BaseURLController","instance","dashManifestModel","context","eventBus","getInstance","urlUtils","baseURLTreeModel","baseURLSelector","onBlackListChanged","e","invalidateSelectedIndexes","entry","setup","create","on","SERVICE_LOCATION_BLACKLIST_CHANGED","setConfig","config","update","manifest","chooseSelectorFromManifest","resolve","path","baseUrls","getForPath","baseUrl","reduce","p","c","b","select","isRelative","url","serviceLocation","availabilityTimeOffset","availabilityTimeComplete","reset","initialize","data","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"BaseURLController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction BaseURLController() {\n\n    let instance;\n    let dashManifestModel;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelectorFromManifest(manifest);\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n        baseURLSelector.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset: reset,\n        initialize: initialize,\n        resolve: resolve,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getSingletonFactory(BaseURLController);\n"]}