{"version":3,"sources":["../../../../../../src/streaming/metrics/controllers/MetricsController.js"],"names":["RangeController","ReportingController","MetricsHandlersController","MetricsController","config","metricsHandlersController","reportingController","rangeController","instance","context","initialize","metricsEntry","create","mediaElement","Range","debug","metricsConstants","Reporting","eventBus","events","metrics","e","reset","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;;AAEA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;;AAE/BA,aAASA,UAAU,EAAnB;AACA,QAAIC,yBAAJ,EACIC,mBADJ,EAEIC,eAFJ,EAGIC,QAHJ;;AAKA,QAAIC,UAAU,KAAKA,OAAnB;;AAEA,aAASC,UAAT,CAAoBC,YAApB,EAAkC;AAC9B,YAAI;AACAJ,8BAAkBP,gBAAgBS,OAAhB,EAAyBG,MAAzB,CAAgC;AAC9CC,8BAAcT,OAAOS;AADyB,aAAhC,CAAlB;;AAIAN,4BAAgBG,UAAhB,CAA2BC,aAAaG,KAAxC;;AAEAR,kCAAsBL,oBAAoBQ,OAApB,EAA6BG,MAA7B,CAAoC;AACtDG,uBAAOX,OAAOW,KADwC;AAEtDC,kCAAkBZ,OAAOY;AAF6B,aAApC,CAAtB;;AAKAV,gCAAoBI,UAApB,CAA+BC,aAAaM,SAA5C,EAAuDV,eAAvD;;AAEAF,wCAA4BH,0BAA0BO,OAA1B,EAAmCG,MAAnC,CAA0C;AAClEG,uBAAOX,OAAOW,KADoD;AAElEG,0BAAUd,OAAOc,QAFiD;AAGlEF,kCAAkBZ,OAAOY,gBAHyC;AAIlEG,wBAAQf,OAAOe;AAJmD,aAA1C,CAA5B;;AAOAd,sCAA0BK,UAA1B,CAAqCC,aAAaS,OAAlD,EAA2Dd,mBAA3D;AACH,SAtBD,CAsBE,OAAOe,CAAP,EAAU;AACRC;AACA,kBAAMD,CAAN;AACH;AACJ;;AAED,aAASC,KAAT,GAAiB;AACb,YAAIjB,yBAAJ,EAA+B;AAC3BA,sCAA0BiB,KAA1B;AACH;;AAED,YAAIhB,mBAAJ,EAAyB;AACrBA,gCAAoBgB,KAApB;AACH;;AAED,YAAIf,eAAJ,EAAqB;AACjBA,4BAAgBe,KAAhB;AACH;AACJ;;AAEDd,eAAW;AACPE,oBAAYA,UADL;AAEPY,eAAYA;AAFL,KAAX;;AAKA,WAAOd,QAAP;AACH;;AAEDL,kBAAkBoB,qBAAlB,GAA0C,mBAA1C;AACA,eAAeC,OAAOC,YAAP,CAAoBC,eAApB,CAAoCvB,iBAApC,CAAf,C,CAAuE","file":"MetricsController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport RangeController from './RangeController';\nimport ReportingController from './ReportingController';\nimport MetricsHandlersController from './MetricsHandlersController';\n\nfunction MetricsController(config) {\n\n    config = config || {};\n    let metricsHandlersController,\n        reportingController,\n        rangeController,\n        instance;\n\n    let context = this.context;\n\n    function initialize(metricsEntry) {\n        try {\n            rangeController = RangeController(context).create({\n                mediaElement: config.mediaElement\n            });\n\n            rangeController.initialize(metricsEntry.Range);\n\n            reportingController = ReportingController(context).create({\n                debug: config.debug,\n                metricsConstants: config.metricsConstants\n            });\n\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\n\n            metricsHandlersController = MetricsHandlersController(context).create({\n                debug: config.debug,\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants,\n                events: config.events\n            });\n\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\n        } catch (e) {\n            reset();\n            throw e;\n        }\n    }\n\n    function reset() {\n        if (metricsHandlersController) {\n            metricsHandlersController.reset();\n        }\n\n        if (reportingController) {\n            reportingController.reset();\n        }\n\n        if (rangeController) {\n            rangeController.reset();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsController.__dashjs_factory_name = 'MetricsController';\nexport default dashjs.FactoryMaker.getClassFactory(MetricsController); /* jshint ignore:line */\n"]}