{"version":3,"sources":["../../../../../../src/streaming/metrics/metrics/MetricsHandlerFactory.js"],"names":["BufferLevel","DVBErrors","HttpList","GenericMetricHandler","MetricsHandlerFactory","config","instance","debug","keyRegex","context","knownFactoryProducts","PlayList","RepSwitchList","TcpList","create","listType","reportingController","matches","match","handler","eventBus","metricsConstants","initialize","e","error","message","register","key","unregister","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA,MAAOA,YAAP,KAAwB,+BAAxB,CACA,MAAOC,UAAP,KAAsB,6BAAtB,CACA,MAAOC,SAAP,KAAqB,4BAArB,CACA,MAAOC,qBAAP,KAAiC,iCAAjC,CAEA,QAASC,sBAAT,CAA+BC,MAA/B,CAAuC,CAEnCA,OAASA,QAAU,EAAnB,CACA,GAAIC,SAAJ,CACA,KAAMC,OAAQF,OAAOE,KAArB,CAEA;AACA,GAAIC,UAAW,+CAAf,CAEA,KAAMC,SAAU,KAAKA,OAArB,CACA,GAAIC,sBAAuB,CACvBV,YAAgBA,WADO,CAEvBC,UAAgBA,SAFO,CAGvBC,SAAgBA,QAHO,CAIvBS,SAAgBR,oBAJO,CAKvBS,cAAgBT,oBALO,CAMvBU,QAAgBV,oBANO,CAA3B,CASA,QAASW,OAAT,CAAgBC,QAAhB,CAA0BC,mBAA1B,CAA+C,CAC3C,GAAIC,SAAUF,SAASG,KAAT,CAAeV,QAAf,CAAd,CACA,GAAIW,QAAJ,CAEA,GAAI,CAACF,OAAL,CAAc,CACV,OACH,CAED,GAAI,CACAE,QAAUT,qBAAqBO,QAAQ,CAAR,CAArB,EAAiCR,OAAjC,EAA0CK,MAA1C,CAAiD,CACvDM,SAAUf,OAAOe,QADsC,CAEvDC,iBAAkBhB,OAAOgB,gBAF8B,CAAjD,CAAV,CAKAF,QAAQG,UAAR,CACIL,QAAQ,CAAR,CADJ,CAEID,mBAFJ,CAGIC,QAAQ,CAAR,CAHJ,CAIIA,QAAQ,CAAR,CAJJ,EAMH,CAAC,MAAOM,CAAP,CAAU,CACRJ,QAAU,IAAV,CACAZ,MAAMiB,KAAN,CAAa,4DAA2DP,QAAQ,CAAR,CAAW,cAAaA,QAAQ,CAAR,CAAW,KAAIA,QAAQ,CAAR,CAAW,KAAIM,EAAEE,OAAQ,GAAxI,EACH,CAED,MAAON,QAAP,CACH,CAED,QAASO,SAAT,CAAkBC,GAAlB,CAAuBR,OAAvB,CAAgC,CAC5BT,qBAAqBiB,GAArB,EAA4BR,OAA5B,CACH,CAED,QAASS,WAAT,CAAoBD,GAApB,CAAyB,CACrB,MAAOjB,sBAAqBiB,GAArB,CAAP,CACH,CAEDrB,SAAW,CACPQ,OAAYA,MADL,CAEPY,SAAYA,QAFL,CAGPE,WAAYA,UAHL,CAAX,CAMA,MAAOtB,SAAP,CACH,CAEDF,sBAAsByB,qBAAtB,CAA8C,uBAA9C,CACA,cAAeC,QAAOC,YAAP,CAAoBC,mBAApB,CAAwC5B,qBAAxC,CAAf,CAA+E","file":"MetricsHandlerFactory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BufferLevel from './handlers/BufferLevelHandler';\nimport DVBErrors from './handlers/DVBErrorsHandler';\nimport HttpList from './handlers/HttpListHandler';\nimport GenericMetricHandler from './handlers/GenericMetricHandler';\n\nfunction MetricsHandlerFactory(config) {\n\n    config = config || {};\n    let instance;\n    const debug = config.debug;\n\n    // group 1: key, [group 3: n [, group 5: type]]\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\n\n    const context = this.context;\n    let knownFactoryProducts = {\n        BufferLevel:    BufferLevel,\n        DVBErrors:      DVBErrors,\n        HttpList:       HttpList,\n        PlayList:       GenericMetricHandler,\n        RepSwitchList:  GenericMetricHandler,\n        TcpList:        GenericMetricHandler\n    };\n\n    function create(listType, reportingController) {\n        var matches = listType.match(keyRegex);\n        var handler;\n\n        if (!matches) {\n            return;\n        }\n\n        try {\n            handler = knownFactoryProducts[matches[1]](context).create({\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants\n            });\n\n            handler.initialize(\n                matches[1],\n                reportingController,\n                matches[3],\n                matches[5]\n            );\n        } catch (e) {\n            handler = null;\n            debug.error(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\n        }\n\n        return handler;\n    }\n\n    function register(key, handler) {\n        knownFactoryProducts[key] = handler;\n    }\n\n    function unregister(key) {\n        delete knownFactoryProducts[key];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricsHandlerFactory); /* jshint ignore:line */\n"]}