{"version":3,"sources":["../../../../../../../src/streaming/metrics/metrics/handlers/GenericMetricHandler.js"],"names":["GenericMetricHandler","instance","metricName","reportingController","initialize","name","rc","reset","undefined","handleNewMetric","metric","vo","report","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAASA,oBAAT,GAAgC;;AAE5B,QAAIC,QAAJ,EACIC,UADJ,EAEIC,mBAFJ;;AAIA,aAASC,UAAT,CAAoBC,IAApB,EAA0BC,EAA1B,EAA8B;AAC1BJ,qBAAaG,IAAb;AACAF,8BAAsBG,EAAtB;AACH;;AAED,aAASC,KAAT,GAAiB;AACbJ,8BAAsB,IAAtB;AACAD,qBAAaM,SAAb;AACH;;AAED,aAASC,eAAT,CAAyBC,MAAzB,EAAiCC,EAAjC,EAAqC;AACjC;AACA,YAAID,WAAWR,UAAf,EAA2B;AACvB,gBAAIC,mBAAJ,EAAyB;AACrBA,oCAAoBS,MAApB,CAA2BV,UAA3B,EAAuCS,EAAvC;AACH;AACJ;AACJ;;AAEDV,eAAW;AACPG,oBAAoBA,UADb;AAEPG,eAAoBA,KAFb;AAGPE,yBAAoBA;AAHb,KAAX;;AAMA,WAAOR,QAAP;AACH;;AAEDD,qBAAqBa,qBAArB,GAA6C,sBAA7C;AACA,eAAeC,OAAOC,YAAP,CAAoBC,eAApB,CAAoChB,oBAApC,CAAf,C,CAA0E","file":"GenericMetricHandler.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nfunction GenericMetricHandler() {\n\n    let instance,\n        metricName,\n        reportingController;\n\n    function initialize(name, rc) {\n        metricName = name;\n        reportingController = rc;\n    }\n\n    function reset() {\n        reportingController = null;\n        metricName = undefined;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === metricName) {\n            if (reportingController) {\n                reportingController.report(metricName, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\nexport default dashjs.FactoryMaker.getClassFactory(GenericMetricHandler); /* jshint ignore:line */\n"]}