{"version":3,"sources":["../../../../../../src/streaming/protection/servers/ClearKey.js"],"names":["KeyPair","ClearKeyKeySet","ClearKey","instance","getServerURLFromMessage","url","message","jsonMsg","JSON","parse","String","fromCharCode","apply","Uint8Array","i","kids","length","substring","getHTTPMethod","getResponseType","getLicenseMessage","serverResponse","hasOwnProperty","keyPairs","keys","keypair","keyid","kid","replace","key","k","push","getErrorResponse","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;AASA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,SAASC,QAAT,GAAoB;;AAEhB,QAAIC,QAAJ;;AAEA,aAASC,uBAAT,CAAiCC,GAAjC,EAAsCC,OAAtC,CAA6C,iBAA7C,EAAgE;AAC5D;AACA,cAAMC,UAAUC,KAAKC,KAAL,CAAWC,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeP,OAAf,CAAhC,CAAX,CAAhB;AACAD,eAAO,IAAP;AACA,aAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAIP,QAAQQ,IAAR,CAAaC,MAAjC,EAAyCF,GAAzC,EAA8C;AAC1CT,mBAAOE,QAAQQ,IAAR,CAAaD,CAAb,IAAkB,GAAzB;AACH;AACDT,cAAMA,IAAIY,SAAJ,CAAc,CAAd,EAAiBZ,IAAIW,MAAJ,GAAa,CAA9B,CAAN;AACA,eAAOX,GAAP;AACH;;AAED,aAASa,aAAT,GAAuB,eAAiB;AACpC,eAAO,KAAP;AACH;;AAED,aAASC,eAAT,GAAyB,gBAAkB;AACvC,eAAO,MAAP;AACH;;AAED,aAASC,iBAAT,CAA2BC,cAA3B,CAAyC,+BAAzC,EAA0E;AACtE,YAAI,CAACA,eAAeC,cAAf,CAA8B,MAA9B,CAAL,EAA4C;AACxC,mBAAO,IAAP;AACH;AACD,YAAIC,WAAW,EAAf;AACA,aAAK,IAAIT,IAAI,CAAb,EAAgBA,IAAIO,eAAeG,IAAf,CAAoBR,MAAxC,EAAgDF,GAAhD,EAAqD;AACjD,gBAAIW,UAAUJ,eAAeG,IAAf,CAAoBV,CAApB,CAAd;AACA,gBAAIY,QAAQD,QAAQE,GAAR,CAAYC,OAAZ,CAAoB,IAApB,EAA0B,EAA1B,CAAZ;AACA,gBAAIC,MAAMJ,QAAQK,CAAR,CAAUF,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAAV;;AAEAL,qBAASQ,IAAT,CAAc,IAAI/B,OAAJ,CAAY0B,KAAZ,EAAmBG,GAAnB,CAAd;AACH;AACD,eAAO,IAAI5B,cAAJ,CAAmBsB,QAAnB,CAAP;AACH;;AAED,aAASS,gBAAT,CAA0BX,cAA1B,CAAwC,+BAAxC,EAAyE;AACrE,eAAOX,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeQ,cAAf,CAAhC,CAAP;AACH;;AAEDlB,eAAW;AACPC,iCAAyBA,uBADlB;AAEPc,uBAAeA,aAFR;AAGPC,yBAAiBA,eAHV;AAIPC,2BAAmBA,iBAJZ;AAKPY,0BAAkBA;AALX,KAAX;;AAQA,WAAO7B,QAAP;AACH;;AAEDD,SAAS+B,qBAAT,GAAiC,UAAjC;AACA,eAAeC,OAAOC,YAAP,CAAoBC,mBAApB,CAAwClC,QAAxC,CAAf,C,CAAkE","file":"ClearKey.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (let i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */"]}