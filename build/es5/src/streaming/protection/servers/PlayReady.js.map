{"version":3,"sources":["../../../../../../src/streaming/protection/servers/PlayReady.js"],"names":["PlayReady","instance","soap","uintToString","arrayBuffer","encodedString","String","fromCharCode","apply","Uint8Array","decodedString","decodeURIComponent","escape","parseServerResponse","serverResponse","window","DOMParser","stringResponse","parser","xmlDoc","parseFromString","envelope","getElementsByTagNameNS","body","fault","parseErrorResponse","faultstring","statusCode","message","idStart","idEnd","detail","getElementsByTagName","exception","node","firstChild","nodeValue","lastIndexOf","indexOf","substring","errorString","getServerURLFromMessage","url","getHTTPMethod","getResponseType","getLicenseMessage","call","getErrorResponse","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"PlayReady.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global escape: true */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\n\nfunction PlayReady() {\n\n    let instance;\n\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\n\n    function uintToString(arrayBuffer) {\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n\n    function parseServerResponse(serverResponse) {\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n\n            if (fault) {\n                return null;\n            }\n        }\n        return serverResponse;\n    }\n\n    function parseErrorResponse(serverResponse) {\n        let faultstring = '';\n        let statusCode = '';\n        let message = '';\n        let idStart = -1;\n        let idEnd = -1;\n\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\n            let node = null;\n\n            if (fault === null) {\n                return stringResponse;\n            }\n\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\n            faultstring = node ? node.nodeValue : null;\n\n            if (exception !== null) {\n                node = exception.getElementsByTagName('StatusCode')[0];\n                statusCode = node ? node.firstChild.nodeValue : null;\n                node = exception.getElementsByTagName('Message')[0];\n                message = node ? node.firstChild.nodeValue : null;\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\n                idEnd = message ? message.indexOf(']') : -1;\n                message = message ? message.substring(idStart, idEnd) : '';\n            }\n        }\n\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\n        if (message) {\n            errorString += `, message: ${message}`;\n        }\n\n        return errorString;\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return parseServerResponse.call(this, serverResponse);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return parseErrorResponse.call(this, serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */"]}