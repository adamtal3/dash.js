{"version":3,"sources":["../../../../../../src/streaming/protection/servers/DRMToday.js"],"names":["ProtectionConstants","DRMToday","config","BASE64","keySystems","WIDEVINE_KEYSTEM_STRING","responseType","getLicenseMessage","response","decodeArray","license","getErrorResponse","PLAYREADY_KEYSTEM_STRING","String","fromCharCode","apply","Uint8Array","instance","checkConfig","hasOwnProperty","Error","getServerURLFromMessage","url","getHTTPMethod","getResponseType","keySystemStr","serverResponse","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;AAOA,OAAOA,mBAAP,MAAgC,qCAAhC;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;;AAEtBA,aAASA,UAAU,EAAnB;AACA,UAAMC,SAASD,OAAOC,MAAtB;;AAEA,UAAMC,aAAa,EAAnB;AACAA,eAAWJ,oBAAoBK,uBAA/B,IAA0D;AACtDC,sBAAc,MADwC;AAEtDC,2BAAmB,UAAUC,QAAV,EAAoB;AACnC,mBAAOL,OAAOM,WAAP,CAAmBD,SAASE,OAA5B,CAAP;AACH,SAJqD;AAKtDC,0BAAkB,UAAUH,QAAV,EAAoB;AAClC,mBAAOA,QAAP;AACH;AAPqD,KAA1D;AASAJ,eAAWJ,oBAAoBY,wBAA/B,IAA2D;AACvDN,sBAAc,aADyC;AAEvDC,2BAAmB,UAAUC,QAAV,EAAoB;AACnC,mBAAOA,QAAP;AACH,SAJsD;AAKvDG,0BAAkB,UAAUH,QAAV,EAAoB;AAClC,mBAAOK,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeR,QAAf,CAAhC,CAAP;AACH;AAPsD,KAA3D;;AAUA,QAAIS,QAAJ;;AAEA,aAASC,WAAT,GAAuB;AACnB,YAAI,CAACf,MAAD,IAAW,CAACA,OAAOgB,cAAP,CAAsB,aAAtB,CAAhB,EAAsD;AAClD,kBAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACH;AACJ;;AAED,aAASC,uBAAT,CAAiCC,GAAjC,CAAqC,0BAArC,EAAiE;AAC7D,eAAOA,GAAP;AACH;;AAED,aAASC,aAAT,GAAuB,eAAiB;AACpC,eAAO,MAAP;AACH;;AAED,aAASC,eAAT,CAAyBC,YAAzB,CAAqC,iBAArC,EAAwD;AACpD,eAAOrB,WAAWqB,YAAX,EAAyBnB,YAAhC;AACH;;AAED,aAASC,iBAAT,CAA2BmB,cAA3B,EAA2CD,YAA3C,CAAuD,iBAAvD,EAA0E;AACtEP;AACA,eAAOd,WAAWqB,YAAX,EAAyBlB,iBAAzB,CAA2CmB,cAA3C,CAAP;AACH;;AAED,aAASf,gBAAT,CAA0Be,cAA1B,EAA0CD,YAA1C,CAAsD,iBAAtD,EAAyE;AACrE,eAAOrB,WAAWqB,YAAX,EAAyBd,gBAAzB,CAA0Ce,cAA1C,CAAP;AACH;;AAEDT,eAAW;AACPI,iCAAyBA,uBADlB;AAEPE,uBAAeA,aAFR;AAGPC,yBAAiBA,eAHV;AAIPjB,2BAAmBA,iBAJZ;AAKPI,0BAAkBA;AALX,KAAX;;AAQA,WAAOM,QAAP;AACH;;AAEDhB,SAAS0B,qBAAT,GAAiC,UAAjC;AACA,eAAeC,OAAOC,YAAP,CAAoBC,mBAApB,CAAwC7B,QAAxC,CAAf,C,CAAkE","file":"DRMToday.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\n\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction DRMToday(config) {\n\n    config = config || {};\n    const BASE64 = config.BASE64;\n\n    const keySystems = {};\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\n        responseType: 'json',\n        getLicenseMessage: function (response) {\n            return BASE64.decodeArray(response.license);\n        },\n        getErrorResponse: function (response) {\n            return response;\n        }\n    };\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\n        responseType: 'arraybuffer',\n        getLicenseMessage: function (response) {\n            return response;\n        },\n        getErrorResponse: function (response) {\n            return String.fromCharCode.apply(null, new Uint8Array(response));\n        }\n    };\n\n    let instance;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        checkConfig();\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */"]}