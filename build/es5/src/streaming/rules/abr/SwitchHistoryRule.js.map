{"version":3,"sources":["../../../../../../src/streaming/rules/abr/SwitchHistoryRule.js"],"names":["FactoryMaker","Debug","SwitchRequest","SwitchHistoryRule","context","instance","logger","MAX_SWITCH","SAMPLE_SIZE","setup","getInstance","getLogger","getMaxIndex","rulesContext","switchRequestHistory","getSwitchHistory","switchRequests","getSwitchRequests","drops","noDrops","dropSize","switchRequest","create","i","length","undefined","quality","reason","index","debug","__dashjs_factory_name","getClassFactory"],"mappings":";AACA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,SAASC,iBAAT,GAA6B;;AAEzB,UAAMC,UAAU,KAAKA,OAArB;;AAEA,QAAIC,QAAJ,EACIC,MADJ;;AAGA;AACA,UAAMC,aAAa,KAAnB;;AAEA;AACA;AACA,UAAMC,cAAc,CAApB;;AAEA,aAASC,KAAT,GAAiB;AACbH,iBAASL,MAAMG,OAAN,EAAeM,WAAf,GAA6BC,SAA7B,CAAuCN,QAAvC,CAAT;AACH;;AAED,aAASO,WAAT,CAAqBC,YAArB,EAAmC;AAC/B,cAAMC,uBAAuBD,eAAeA,aAAaE,gBAAb,EAAf,GAAiD,IAA9E;AACA,cAAMC,iBAAiBF,uBAAuBA,qBAAqBG,iBAArB,EAAvB,GAAkE,EAAzF;AACA,YAAIC,QAAQ,CAAZ;AACA,YAAIC,UAAU,CAAd;AACA,YAAIC,WAAW,CAAf;AACA,cAAMC,gBAAgBnB,cAAcE,OAAd,EAAuBkB,MAAvB,EAAtB;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,eAAeQ,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5C,gBAAIP,eAAeO,CAAf,MAAsBE,SAA1B,EAAqC;AACjCP,yBAASF,eAAeO,CAAf,EAAkBL,KAA3B;AACAC,2BAAWH,eAAeO,CAAf,EAAkBJ,OAA7B;AACAC,4BAAYJ,eAAeO,CAAf,EAAkBH,QAA9B;;AAEA,oBAAIF,QAAQC,OAAR,IAAmBX,WAAnB,IAAmCU,QAAQC,OAAR,GAAkBZ,UAAzD,EAAsE;AAClEc,kCAAcK,OAAd,GAAyBH,IAAI,CAAJ,IAASP,eAAeO,CAAf,EAAkBL,KAAlB,GAA0B,CAApC,GAAyCK,IAAI,CAA7C,GAAiDA,CAAzE;AACAF,kCAAcM,MAAd,GAAuB,EAACC,OAAOP,cAAcK,OAAtB,EAA+BR,OAAOA,KAAtC,EAA6CC,SAASA,OAAtD,EAA+DC,UAAUA,QAAzE,EAAvB;AACAd,2BAAOuB,KAAP,CAAa,gCAAgCR,cAAcK,OAA9C,GAAwD,YAAxD,IAAwER,QAAQC,OAAhF,IAA2F,UAA3F,GAAwGD,KAArH;AACA;AACH;AACJ;AACJ;;AAED,eAAOG,aAAP;AACH;;AAEDhB,eAAW;AACPO,qBAAaA;AADN,KAAX;;AAIAH;;AAEA,WAAOJ,QAAP;AACH;;AAGDF,kBAAkB2B,qBAAlB,GAA0C,mBAA1C;AACA,eAAe9B,aAAa+B,eAAb,CAA6B5B,iBAA7B,CAAf","file":"SwitchHistoryRule.js","sourcesContent":["\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction SwitchHistoryRule() {\n\n    const context = this.context;\n\n    let instance,\n        logger;\n\n    //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\n    const MAX_SWITCH = 0.075;\n\n    //Before this number of switch requests(no switch or actual), don't apply the rule.\n    //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\n    const SAMPLE_SIZE = 6;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\n        let drops = 0;\n        let noDrops = 0;\n        let dropSize = 0;\n        const switchRequest = SwitchRequest(context).create();\n\n        for (let i = 0; i < switchRequests.length; i++) {\n            if (switchRequests[i] !== undefined) {\n                drops += switchRequests[i].drops;\n                noDrops += switchRequests[i].noDrops;\n                dropSize += switchRequests[i].dropSize;\n\n                if (drops + noDrops >= SAMPLE_SIZE && (drops / noDrops > MAX_SWITCH)) {\n                    switchRequest.quality = (i > 0 && switchRequests[i].drops > 0) ? i - 1 : i;\n                    switchRequest.reason = {index: switchRequest.quality, drops: drops, noDrops: noDrops, dropSize: dropSize};\n                    logger.debug('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\n                    break;\n                }\n            }\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\n"]}