{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":["FactoryMaker","RulesContext","config","instance","abrController","switchHistory","droppedFramesHistory","currentRequest","bufferOccupancyABR","useBufferOccupancyABR","scheduleController","streamProcessor","getScheduleController","representationInfo","getRepresentationInfo","getMediaType","mediaInfo","getMediaInfo","type","getStreamInfo","streamInfo","getAbrController","getSwitchHistory","getDroppedFramesHistory","getCurrentRequest","__dashjs_factory_name","getClassFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAOA,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;;AAE1BA,aAASA,UAAU,EAAnB;AACA,QAAIC,QAAJ;AACA,UAAMC,gBAAgBF,OAAOE,aAA7B;AACA,UAAMC,gBAAgBH,OAAOG,aAA7B;AACA,UAAMC,uBAAuBJ,OAAOI,oBAApC;AACA,UAAMC,iBAAiBL,OAAOK,cAA9B;AACA,UAAMC,qBAAqBN,OAAOO,qBAAlC;AACA,UAAMC,qBAAqBR,OAAOS,eAAP,GAAyBT,OAAOS,eAAP,CAAuBC,qBAAvB,EAAzB,GAA0E,IAArG;AACA,UAAMC,qBAAqBX,OAAOS,eAAP,GAAyBT,OAAOS,eAAP,CAAuBG,qBAAvB,EAAzB,GAA0E,IAArG;;AAEA,aAASC,YAAT,GAAwB;AACpB,cAAMC,YAAYC,cAAlB;AACA,eAAOD,YAAYA,UAAUE,IAAtB,GAA6B,IAApC;AACH;;AAED,aAASC,aAAT,GAAyB;AACrB,cAAMH,YAAYC,cAAlB;AACA,eAAOD,YAAYA,UAAUI,UAAtB,GAAmC,IAA1C;AACH;;AAED,aAASH,YAAT,GAAwB;AACpB,eAAOJ,qBAAqBA,mBAAmBG,SAAxC,GAAoD,IAA3D;AACH;;AAED,aAASF,qBAAT,GAAiC;AAC7B,eAAOD,kBAAP;AACH;;AAED,aAASD,qBAAT,GAAiC;AAC7B,eAAOF,kBAAP;AACH;;AAED,aAASW,gBAAT,GAA4B;AACxB,eAAOjB,aAAP;AACH;;AAED,aAASkB,gBAAT,GAA4B;AACxB,eAAOjB,aAAP;AACH;;AAED,aAASkB,uBAAT,GAAmC;AAC/B,eAAOjB,oBAAP;AACH;;AAED,aAASkB,iBAAT,GAA6B;AACzB,eAAOjB,cAAP;AACH;;AAED,aAASE,qBAAT,GAAiC;AAC7B,eAAOD,kBAAP;AACH;;AAEDL,eAAW;AACPY,sBAAcA,YADP;AAEPE,sBAAcA,YAFP;AAGPM,iCAAyBA,uBAHlB;AAIPC,2BAAmBA,iBAJZ;AAKPF,0BAAkBA,gBALX;AAMPH,uBAAeA,aANR;AAOPP,+BAAuBA,qBAPhB;AAQPS,0BAAkBA,gBARX;AASPP,+BAAuBA,qBAThB;AAUPL,+BAAuBA;AAVhB,KAAX;;AAaA,WAAON,QAAP;AACH;;AAEDF,aAAawB,qBAAb,GAAqC,cAArC;AACA,eAAezB,aAAa0B,eAAb,CAA6BzB,YAA7B,CAAf","file":"RulesContext.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n    const representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\n\n    function getMediaType() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.type : null;\n    }\n\n    function getStreamInfo() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.streamInfo : null;\n    }\n\n    function getMediaInfo() {\n        return representationInfo ? representationInfo.mediaInfo : null;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n\n    instance = {\n        getMediaType: getMediaType,\n        getMediaInfo: getMediaInfo,\n        getDroppedFramesHistory: getDroppedFramesHistory,\n        getCurrentRequest: getCurrentRequest,\n        getSwitchHistory: getSwitchHistory,\n        getStreamInfo: getStreamInfo,\n        getScheduleController: getScheduleController,\n        getAbrController: getAbrController,\n        getRepresentationInfo: getRepresentationInfo,\n        useBufferOccupancyABR: useBufferOccupancyABR\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n"]}