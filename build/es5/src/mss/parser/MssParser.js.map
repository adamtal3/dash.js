{"version":3,"sources":["../../../../../src/mss/parser/MssParser.js"],"names":["MssParser","config","BASE64","debug","constants","manifestModel","DEFAULT_TIME_SCALE","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","mimeTypeMap","instance","logger","mediaPlayerModel","setup","getLogger","mapPeriod","smoothStreamingMedia","timescale","period","streams","adaptation","AdaptationSet_asArray","getElementsByTagName","i","length","mapAdaptationSet","push","AdaptationSet","streamIndex","adaptationSet","representations","segmentTemplate","qualityLevels","representation","segments","id","getAttribute","contentType","lang","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","value","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mapSegmentTemplate","BaseURL","Id","mapRepresentation","SegmentTemplate","Representation","Representation_asArray","SegmentTimeline","S_asArray","qualityLevel","type","fourCCValue","bandwidth","parseInt","width","height","indexOf","toUpperCase","warn","codecs","getH264Codec","getAACCodec","audioSamplingRate","audioChannels","STPP","codecPrivateData","toString","nalHeader","avcoti","exec","substr","undefined","samplingRate","objectType","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","Uint8Array","Channels","Uint16Array","setAttribute","mediaUrl","streamIndexTimeScale","replace","parseFloat","media","mapSegmentTimeline","segmentTimeline","chunks","segment","prevSegment","tManifest","j","r","duration","t","d","S","getKIDFromProtectionHeader","protectionHeader","prHeader","wrmHeader","xmlReader","KID","decodeArray","firstChild","data","getWRMHeaderFromPRHeader","buffer","String","fromCharCode","apply","DOMParser","parseFromString","querySelector","textContent","convertUuidEndianness","recordCount","recordType","recordLength","recordValue","set","subarray","uuid","swapBytes","bytes","pos1","pos2","temp","createPRContentProtection","pro","__text","__prefix","pro_asArray","createWidevineContentProtection","wvCencHeader","pssh","encodeASCII","processManifest","xmlDoc","manifestLoadedTime","manifest","contentProtections","protection","adaptations","contentProtection","timestampOffset","startTime","protocol","profiles","dvrWindowLength","Infinity","timeShiftBufferDepth","mediaPresentationDuration","minBufferTime","getStableBufferTime","ttmlTimeIsRelative","availabilityStartTime","Date","getTime","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","Period_asArray","start","ContentProtection","ContentProtection_asArray","initialization","prevManifest","getValue","Math","min","max","presentationTimeOffset","floor","parseDOM","window","parser","Error","getMatchers","getIron","internalParse","performance","now","xmlParseTime","mss2dashTime","info","toPrecision","parse","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;GAIA,QAASA,UAAT,CAAmBC,MAAnB,CAA2B,CACvBA,OAASA,QAAU,EAAnB,CACA,KAAMC,QAASD,OAAOC,MAAtB,CACA,KAAMC,OAAQF,OAAOE,KAArB,CACA,KAAMC,WAAYH,OAAOG,SAAzB,CACA,KAAMC,eAAgBJ,OAAOI,aAA7B,CAEA,KAAMC,oBAAqB,UAA3B,CACA,KAAMC,kBAAmB,CAAC,KAAD,CAAQ,MAAR,CAAgB,MAAhB,CAAwB,MAAxB,CAAgC,MAAhC,CAAwC,MAAxC,CAAzB,CACA;AACA,KAAMC,MAAO,CACT,OAAQ,WADC,CAET,OAAQ,WAFC,CAEY;AACrB,OAAQ,MAHC,CAAb,CAKA,KAAMC,eAAgB,CAClB,OAAQ,GADU,CAAtB,CAGA,KAAMC,wBAAyB,CAC3B,MAAO,GADoB,CAE3B,MAAO,GAFoB,CAG3B,MAAO,GAHoB,CAI3B,MAAO,GAJoB,CAK3B,MAAO,GALoB,CAM3B,MAAO,GANoB,CAO3B,MAAO,GAPoB,CAQ3B,MAAO,GARoB,CAS3B,MAAO,GAToB,CAU3B,MAAO,GAVoB,CAW3B,MAAO,GAXoB,CAY3B,KAAM,GAZqB,CAa3B,KAAM,GAbqB,CAA/B,CAeA,KAAMC,aAAc,CAChB,QAAS,WADO,CAEhB,QAAS,WAFO,CAGhB,OAAQ,iBAHQ,CAApB,CAMA,GAAIC,SAAJ,CACIC,MADJ,CAEIC,gBAFJ,CAKA,QAASC,MAAT,EAAiB,CACbF,OAASV,MAAMa,SAAN,CAAgBJ,QAAhB,CAAT,CACAE,iBAAmBb,OAAOa,gBAA1B,CACH,CAED,QAASG,UAAT,CAAmBC,oBAAnB,CAAyCC,SAAzC,CAAoD,CAChD,KAAMC,QAAS,EAAf,CACA,GAAIC,QAAJ,CACIC,UADJ,CAGA;AACAF,OAAOG,qBAAP,CAA+B,EAA/B,CACAF,QAAUH,qBAAqBM,oBAArB,CAA0C,aAA1C,CAAV,CACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIJ,QAAQK,MAA5B,CAAoCD,GAApC,CAAyC,CACrCH,WAAaK,iBAAiBN,QAAQI,CAAR,CAAjB,CAA6BN,SAA7B,CAAb,CACA,GAAIG,aAAe,IAAnB,CAAyB,CACrBF,OAAOG,qBAAP,CAA6BK,IAA7B,CAAkCN,UAAlC,EACH,CACJ,CAED,GAAIF,OAAOG,qBAAP,CAA6BG,MAA7B,CAAsC,CAA1C,CAA6C,CACzCN,OAAOS,aAAP,CAAwBT,OAAOG,qBAAP,CAA6BG,MAA7B,CAAsC,CAAvC,CAA4CN,OAAOG,qBAAnD,CAA2EH,OAAOG,qBAAP,CAA6B,CAA7B,CAAlG,CACH,CAED,MAAOH,OAAP,CACH,CAED,QAASO,iBAAT,CAA0BG,WAA1B,CAAuCX,SAAvC,CAAkD,CAC9C,KAAMY,eAAgB,EAAtB,CACA,KAAMC,iBAAkB,EAAxB,CACA,GAAIC,gBAAJ,CACA,GAAIC,cAAJ,CACIC,cADJ,CAEIC,QAFJ,CAGIX,CAHJ,CAKAM,cAAcM,EAAd,CAAmBP,YAAYQ,YAAZ,CAAyB,MAAzB,EAAmCR,YAAYQ,YAAZ,CAAyB,MAAzB,CAAnC,CAAsER,YAAYQ,YAAZ,CAAyB,MAAzB,CAAzF,CACAP,cAAcQ,WAAd,CAA4BT,YAAYQ,YAAZ,CAAyB,MAAzB,CAA5B,CACAP,cAAcS,IAAd,CAAqBV,YAAYQ,YAAZ,CAAyB,UAAzB,GAAwC,KAA7D,CACAP,cAAcU,QAAd,CAAyB9B,YAAYoB,cAAcQ,WAA1B,CAAzB,CACAR,cAAcW,OAAd,CAAwBZ,YAAYQ,YAAZ,CAAyB,SAAzB,CAAxB,CACAP,cAAcY,QAAd,CAAyBb,YAAYQ,YAAZ,CAAyB,UAAzB,CAAzB,CACAP,cAAca,SAAd,CAA0Bd,YAAYQ,YAAZ,CAAyB,WAAzB,CAA1B,CAEA;AACA,GAAIP,cAAcW,OAAlB,CAA2B,CACvB,GAAIlC,KAAKuB,cAAcW,OAAnB,CAAJ,CAAiC,CAC7B,GAAIG,MAAO,CACPC,YAAa,yBADN,CAEPC,MAAOvC,KAAKuB,cAAcW,OAAnB,CAFA,CAAX,CAIAX,cAAciB,IAAd,CAAqBH,IAArB,CACAd,cAAckB,YAAd,CAA6B,CAACJ,IAAD,CAA7B,CACH,CACD,GAAIpC,cAAcsB,cAAcW,OAA5B,CAAJ,CAA0C,CACtC,GAAIQ,eAAgB,CAChBJ,YAAa,yCADG,CAEhBC,MAAOtC,cAAcsB,cAAcW,OAA5B,CAFS,CAApB,CAIAX,cAAcoB,aAAd,CAA8BD,aAA9B,CACAnB,cAAcqB,qBAAd,CAAsC,CAACF,aAAD,CAAtC,CACH,CACJ,CAED;AACAjB,gBAAkBoB,mBAAmBvB,WAAnB,CAAgCX,SAAhC,CAAlB,CAEAe,cAAgBJ,YAAYN,oBAAZ,CAAiC,cAAjC,CAAhB,CACA;AACA,IAAKC,EAAI,CAAT,CAAYA,EAAIS,cAAcR,MAA9B,CAAsCD,GAAtC,CAA2C,CACvC;AACAS,cAAcT,CAAd,EAAiB6B,OAAjB,CAA2BvB,cAAcuB,OAAzC,CACApB,cAAcT,CAAd,EAAiBgB,QAAjB,CAA4BV,cAAcU,QAA1C,CAEA;AACAP,cAAcT,CAAd,EAAiB8B,EAAjB,CAAsBxB,cAAcM,EAAd,CAAmB,GAAnB,CAAyBH,cAAcT,CAAd,EAAiBa,YAAjB,CAA8B,OAA9B,CAA/C,CAEA;AACAH,eAAiBqB,kBAAkBtB,cAAcT,CAAd,CAAlB,CAAoCK,WAApC,CAAjB,CAEA,GAAIK,iBAAmB,IAAvB,CAA6B,CACzB;AACAA,eAAesB,eAAf,CAAiCxB,eAAjC,CAEAD,gBAAgBJ,IAAhB,CAAqBO,cAArB,EACH,CACJ,CAED,GAAIH,gBAAgBN,MAAhB,GAA2B,CAA/B,CAAkC,CAC9B,MAAO,KAAP,CACH,CAEDK,cAAc2B,cAAd,CAAgC1B,gBAAgBN,MAAhB,CAAyB,CAA1B,CAA+BM,eAA/B,CAAiDA,gBAAgB,CAAhB,CAAhF,CACAD,cAAc4B,sBAAd,CAAuC3B,eAAvC,CAEA;AACAD,cAAc0B,eAAd,CAAgCxB,eAAhC,CAEAG,SAAWH,gBAAgB2B,eAAhB,CAAgCC,SAA3C,CAEA,MAAO9B,cAAP,CACH,CAED,QAASyB,kBAAT,CAA2BM,YAA3B,CAAyChC,WAAzC,CAAsD,CAClD,KAAMK,gBAAiB,EAAvB,CACA,KAAM4B,MAAOjC,YAAYQ,YAAZ,CAAyB,MAAzB,CAAb,CACA,GAAI0B,aAAc,IAAlB,CAEA7B,eAAeE,EAAf,CAAoByB,aAAaP,EAAjC,CACApB,eAAe8B,SAAf,CAA2BC,SAASJ,aAAaxB,YAAb,CAA0B,SAA1B,CAAT,CAA+C,EAA/C,CAA3B,CACAH,eAAeM,QAAf,CAA0BqB,aAAarB,QAAvC,CACAN,eAAegC,KAAf,CAAuBD,SAASJ,aAAaxB,YAAb,CAA0B,UAA1B,CAAT,CAAgD,EAAhD,CAAvB,CACAH,eAAeiC,MAAf,CAAwBF,SAASJ,aAAaxB,YAAb,CAA0B,WAA1B,CAAT,CAAiD,EAAjD,CAAxB,CAEA0B,YAAcF,aAAaxB,YAAb,CAA0B,QAA1B,CAAd,CAEA;AACA,GAAI0B,cAAgB,IAAhB,EAAwBA,cAAgB,EAA5C,CAAgD,CAC5CA,YAAclC,YAAYQ,YAAZ,CAAyB,QAAzB,CAAd,CACH,CAED;AACA;AACA,GAAI0B,cAAgB,IAAhB,EAAwBA,cAAgB,EAA5C,CAAgD,CAC5C,GAAID,OAAS,OAAb,CAAsB,CAClBC,YAAc,KAAd,CACH,CAFD,IAEO,IAAID,OAAS,OAAb,CAAsB,CACzBlD,OAAOV,KAAP,CAAa,2GAAb,EACA,MAAO,KAAP,CACH,CACJ,CAED;AACA,GAAII,iBAAiB8D,OAAjB,CAAyBL,YAAYM,WAAZ,EAAzB,IAAwD,CAAC,CAA7D,CAAgE,CAC5D;AACAzD,OAAO0D,IAAP,CAAY,wBAA0BP,WAAtC,EACA,MAAO,KAAP,CACH,CAED;AACA,GAAIA,cAAgB,MAAhB,EAA0BA,cAAgB,MAA9C,CAAsD,CAClD7B,eAAeqC,MAAf,CAAwBC,aAAaX,YAAb,CAAxB,CACH,CAFD,IAEO,IAAIE,YAAYK,OAAZ,CAAoB,KAApB,GAA8B,CAAlC,CAAqC,CACxClC,eAAeqC,MAAf,CAAwBE,YAAYZ,YAAZ,CAA0BE,WAA1B,CAAxB,CACA7B,eAAewC,iBAAf,CAAmCT,SAASJ,aAAaxB,YAAb,CAA0B,cAA1B,CAAT,CAAoD,EAApD,CAAnC,CACAH,eAAeyC,aAAf,CAA+BV,SAASJ,aAAaxB,YAAb,CAA0B,UAA1B,CAAT,CAAgD,EAAhD,CAA/B,CACH,CAJM,IAIA,IAAI0B,YAAYK,OAAZ,CAAoB,MAApB,GAA+BL,YAAYK,OAAZ,CAAoB,MAApB,CAAnC,CAAgE,CACnElC,eAAeqC,MAAf,CAAwBpE,UAAUyE,IAAlC,CACH,CAED1C,eAAe2C,gBAAf,CAAkC,GAAKhB,aAAaxB,YAAb,CAA0B,kBAA1B,CAAvC,CACAH,eAAemB,OAAf,CAAyBQ,aAAaR,OAAtC,CAEA,MAAOnB,eAAP,CACH,CAED,QAASsC,aAAT,CAAsBX,YAAtB,CAAoC,CAChC,GAAIgB,kBAAmBhB,aAAaxB,YAAb,CAA0B,kBAA1B,EAA8CyC,QAA9C,EAAvB,CACA,GAAIC,UAAJ,CACIC,MADJ,CAIA;AACA;AACA;AACAD,UAAY,iBAAiBE,IAAjB,CAAsBJ,gBAAtB,CAAZ,CACA;AACAG,OAASD,WAAaA,UAAU,CAAV,CAAb,CAA6BF,iBAAiBK,MAAjB,CAAwBL,iBAAiBT,OAAjB,CAAyBW,UAAU,CAAV,CAAzB,EAAyC,EAAjE,CAAqE,CAArE,CAA7B,CAAwGI,SAAjH,CAEA,MAAO,QAAUH,MAAjB,CACH,CAED,QAASP,YAAT,CAAqBZ,YAArB,CAAmCE,WAAnC,CAAgD,CAC5C,KAAMqB,cAAenB,SAASJ,aAAaxB,YAAb,CAA0B,cAA1B,CAAT,CAAoD,EAApD,CAArB,CACA,GAAIwC,kBAAmBhB,aAAaxB,YAAb,CAA0B,kBAA1B,EAA8CyC,QAA9C,EAAvB,CACA,GAAIO,YAAa,CAAjB,CACA,GAAIC,oBAAJ,CACIC,KADJ,CAEIC,SAFJ,CAGIC,+BAHJ,CAKA;AACA;AACA,GAAI1B,cAAgB,MAApB,CAA4B,CACxBsB,WAAa,IAAb,CACH,CACD;AACA,GAAIR,mBAAqBM,SAArB,EAAkCN,mBAAqB,EAA3D,CAA+D,CAC3DQ,WAAa,IAAb,CAAmB;AACnBG,UAAY/E,uBAAuB2E,YAAvB,CAAZ,CACA,GAAIrB,cAAgB,MAApB,CAA4B,CACxB;AACA;AACAsB,WAAa,IAAb,CAAmB;AACnBR,iBAAmB,GAAIa,WAAJ,CAAe,CAAf,CAAnB,CACAD,gCAAkChF,uBAAuB2E,aAAe,CAAtC,CAAlC,CAA4E;AAC5E;AACA;AACAP,iBAAiB,CAAjB,EAAuBQ,YAAc,CAAf,CAAqBG,WAAa,CAAxD,CACAX,iBAAiB,CAAjB,EAAuBW,WAAa,CAAd,CAAoB3B,aAAa8B,QAAb,EAAyB,CAA7C,CAAmDF,iCAAmC,CAA5G,CACAZ,iBAAiB,CAAjB,EAAuBY,iCAAmC,CAApC,CAA0C,MAAQ,CAAxE,CAA4E;AAC5EZ,iBAAiB,CAAjB,EAAsB,GAAtB,CAA2B;AAE3BU,MAAQ,GAAIK,YAAJ,CAAgB,CAAhB,CAAR,CACAL,MAAM,CAAN,EAAW,CAACV,iBAAiB,CAAjB,GAAuB,CAAxB,EAA6BA,iBAAiB,CAAjB,CAAxC,CACAU,MAAM,CAAN,EAAW,CAACV,iBAAiB,CAAjB,GAAuB,CAAxB,EAA6BA,iBAAiB,CAAjB,CAAxC,CACA;AACAS,oBAAsBC,MAAM,CAAN,EAAST,QAAT,CAAkB,EAAlB,CAAtB,CACAQ,oBAAsBC,MAAM,CAAN,EAAST,QAAT,CAAkB,EAAlB,EAAwBS,MAAM,CAAN,EAAST,QAAT,CAAkB,EAAlB,CAA9C,CAEH,CApBD,IAoBO,CACH;AACA;AACAD,iBAAmB,GAAIa,WAAJ,CAAe,CAAf,CAAnB,CACA;AACAb,iBAAiB,CAAjB,EAAuBQ,YAAc,CAAf,CAAqBG,WAAa,CAAxD,CACAX,iBAAiB,CAAjB,EAAuBW,WAAa,CAAd,CAAoBvB,SAASJ,aAAaxB,YAAb,CAA0B,UAA1B,CAAT,CAAgD,EAAhD,GAAuD,CAAjG,CACA;AACAkD,MAAQ,GAAIK,YAAJ,CAAgB,CAAhB,CAAR,CACAL,MAAM,CAAN,EAAW,CAACV,iBAAiB,CAAjB,GAAuB,CAAxB,EAA6BA,iBAAiB,CAAjB,CAAxC,CACA;AACAS,oBAAsBC,MAAM,CAAN,EAAST,QAAT,CAAkB,EAAlB,CAAtB,CACH,CAEDD,iBAAmB,GAAKS,mBAAxB,CACAT,iBAAmBA,iBAAiBR,WAAjB,EAAnB,CACAR,aAAagC,YAAb,CAA0B,kBAA1B,CAA8ChB,gBAA9C,EACH,CAxCD,IAwCO,IAAIQ,aAAe,CAAnB,CAAsB,CACzBA,WAAa,CAACpB,SAASY,iBAAiBK,MAAjB,CAAwB,CAAxB,CAA2B,CAA3B,CAAT,CAAwC,EAAxC,EAA8C,IAA/C,GAAwD,CAArE,CACH,CAED,MAAO,WAAaG,UAApB,CACH,CAED,QAASjC,mBAAT,CAA4BvB,WAA5B,CAAyCX,SAAzC,CAAoD,CAChD,KAAMc,iBAAkB,EAAxB,CACA,GAAI8D,SAAJ,CACIC,oBADJ,CAGAD,SAAWjE,YAAYQ,YAAZ,CAAyB,KAAzB,EAAgC2D,OAAhC,CAAwC,WAAxC,CAAqD,aAArD,CAAX,CACAF,SAAWA,SAASE,OAAT,CAAiB,cAAjB,CAAiC,QAAjC,CAAX,CAEAD,qBAAuBlE,YAAYQ,YAAZ,CAAyB,WAAzB,CAAvB,CACA0D,qBAAuBA,qBAAuBE,WAAWF,oBAAX,CAAvB,CAA0D7E,SAAjF,CAEAc,gBAAgBkE,KAAhB,CAAwBJ,QAAxB,CACA9D,gBAAgBd,SAAhB,CAA4B6E,oBAA5B,CAEA/D,gBAAgB2B,eAAhB,CAAkCwC,mBAAmBtE,WAAnB,CAAgCG,gBAAgBd,SAAhD,CAAlC,CAEA,MAAOc,gBAAP,CACH,CAED,QAASmE,mBAAT,CAA4BtE,WAA5B,CAAyCX,SAAzC,CAAoD,CAChD,KAAMkF,iBAAkB,EAAxB,CACA,KAAMC,QAASxE,YAAYN,oBAAZ,CAAiC,GAAjC,CAAf,CACA,KAAMY,UAAW,EAAjB,CACA,GAAImE,QAAJ,CACIC,WADJ,CAEIC,SAFJ,CAGIhF,CAHJ,CAGMiF,CAHN,CAGQC,CAHR,CAIA,GAAIC,UAAW,CAAf,CAEA,IAAKnF,EAAI,CAAT,CAAYA,EAAI6E,OAAO5E,MAAvB,CAA+BD,GAA/B,CAAoC,CAChC8E,QAAU,EAAV,CAEA;AACAE,UAAYH,OAAO7E,CAAP,EAAUa,YAAV,CAAuB,GAAvB,CAAZ,CAEA;AACA;AACAiE,QAAQE,SAAR,CAAoBP,WAAWO,SAAX,CAApB,CACAF,QAAQM,CAAR,CAAYX,WAAWO,SAAX,CAAZ,CAEA;AACAF,QAAQO,CAAR,CAAYZ,WAAWI,OAAO7E,CAAP,EAAUa,YAAV,CAAuB,GAAvB,CAAX,CAAZ,CAEA;AACA,GAAKb,IAAM,CAAP,EAAa,CAAC8E,QAAQM,CAA1B,CAA6B,CACzBN,QAAQM,CAAR,CAAY,CAAZ,CACH,CAED,GAAIpF,EAAI,CAAR,CAAW,CACP+E,YAAcpE,SAASA,SAASV,MAAT,CAAkB,CAA3B,CAAd,CACA;AACA,GAAI,CAAC8E,YAAYM,CAAjB,CAAoB,CAChB,GAAIN,YAAYC,SAAhB,CAA2B,CACvBD,YAAYM,CAAZ,CAAgBZ,WAAWO,SAAX,EAAwBP,WAAWM,YAAYC,SAAvB,CAAxC,CACH,CAFD,IAEO,CACHD,YAAYM,CAAZ,CAAgBP,QAAQM,CAAR,CAAYL,YAAYK,CAAxC,CACH,CACDD,UAAYJ,YAAYM,CAAxB,CACH,CACD;AACA,GAAI,CAACP,QAAQM,CAAb,CAAgB,CACZ,GAAIL,YAAYC,SAAhB,CAA2B,CACvBF,QAAQE,SAAR,CAAoBP,WAAWM,YAAYC,SAAvB,EAAoCD,YAAYM,CAApE,CACAP,QAAQM,CAAR,CAAYX,WAAWK,QAAQE,SAAnB,CAAZ,CACH,CAHD,IAGO,CACHF,QAAQM,CAAR,CAAYL,YAAYK,CAAZ,CAAgBL,YAAYM,CAAxC,CACH,CACJ,CACJ,CAED,GAAIP,QAAQO,CAAZ,CAAe,CACXF,UAAYL,QAAQO,CAApB,CACH,CAED;AACA1E,SAASR,IAAT,CAAc2E,OAAd,EAEA;AACAI,EAAIT,WAAWI,OAAO7E,CAAP,EAAUa,YAAV,CAAuB,GAAvB,CAAX,CAAJ,CACA,GAAIqE,CAAJ,CAAO,CAEH,IAAKD,EAAI,CAAT,CAAYA,EAAKC,EAAI,CAArB,CAAyBD,GAAzB,CAA8B,CAC1BF,YAAcpE,SAASA,SAASV,MAAT,CAAkB,CAA3B,CAAd,CACA6E,QAAU,EAAV,CACAA,QAAQM,CAAR,CAAYL,YAAYK,CAAZ,CAAgBL,YAAYM,CAAxC,CACAP,QAAQO,CAAR,CAAYN,YAAYM,CAAxB,CACA,GAAIN,YAAYC,SAAhB,CAA2B,CACvBF,QAAQE,SAAR,CAAqBP,WAAWM,YAAYC,SAAvB,EAAoCD,YAAYM,CAArE,CACH,CACDF,UAAYL,QAAQO,CAApB,CACA1E,SAASR,IAAT,CAAc2E,OAAd,EACH,CACJ,CACJ,CAEDF,gBAAgBU,CAAhB,CAAoB3E,QAApB,CACAiE,gBAAgBxC,SAAhB,CAA4BzB,QAA5B,CACAiE,gBAAgBO,QAAhB,CAA2BA,SAAWzF,SAAtC,CAEA,MAAOkF,gBAAP,CACH,CAED,QAASW,2BAAT,CAAoCC,gBAApC,CAAsD,CAClD,GAAIC,SAAJ,CACIC,SADJ,CAEIC,SAFJ,CAGIC,GAHJ,CAKA;AACAH,SAAWhH,OAAOoH,WAAP,CAAmBL,iBAAiBM,UAAjB,CAA4BC,IAA/C,CAAX,CAEA;AACAL,UAAYM,yBAAyBP,QAAzB,CAAZ,CAEA;AACAC,UAAY,GAAItB,YAAJ,CAAgBsB,UAAUO,MAA1B,CAAZ,CAEA;AACAP,UAAYQ,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,CAAgCV,SAAhC,CAAZ,CAEA;AACAC,UAAa,GAAIU,UAAJ,EAAD,CAAkBC,eAAlB,CAAkCZ,SAAlC,CAA6C,iBAA7C,CAAZ,CACAE,IAAMD,UAAUY,aAAV,CAAwB,KAAxB,EAA+BC,WAArC,CAEA;AACAZ,IAAMnH,OAAOoH,WAAP,CAAmBD,GAAnB,CAAN,CAEA;AACAa,sBAAsBb,GAAtB,EAEA,MAAOA,IAAP,CACH,CAED,QAASI,yBAAT,CAAkCP,QAAlC,CAA4C,CACxC,GAAIxF,OAAJ,CACIyG,WADJ,CAEIC,UAFJ,CAGIC,YAHJ,CAIIC,WAJJ,CAKA,GAAI7G,GAAI,CAAR,CAEA;AAEA;AACAC,OAAS,CAACwF,SAASzF,EAAI,CAAb,GAAmB,EAApB,GAA2ByF,SAASzF,EAAI,CAAb,GAAmB,EAA9C,GAAqDyF,SAASzF,EAAI,CAAb,GAAmB,CAAxE,EAA6EyF,SAASzF,CAAT,CAAtF,CACAA,GAAK,CAAL,CAEA;AACA0G,YAAc,CAACjB,SAASzF,EAAI,CAAb,GAAmB,CAApB,EAAyByF,SAASzF,CAAT,CAAvC,CACAA,GAAK,CAAL,CAEA;AACA,MAAOA,EAAIyF,SAASxF,MAApB,CAA4B,CACxB;AACA0G,WAAa,CAAClB,SAASzF,EAAI,CAAb,GAAmB,CAApB,EAAyByF,SAASzF,CAAT,CAAtC,CACAA,GAAK,CAAL,CAEA;AACA,GAAI2G,aAAe,IAAnB,CAAyB,CAErB;AACAC,aAAe,CAACnB,SAASzF,EAAI,CAAb,GAAmB,CAApB,EAAyByF,SAASzF,CAAT,CAAxC,CACAA,GAAK,CAAL,CAEA;AACA6G,YAAc,GAAI3C,WAAJ,CAAe0C,YAAf,CAAd,CACAC,YAAYC,GAAZ,CAAgBrB,SAASsB,QAAT,CAAkB/G,CAAlB,CAAqBA,EAAI4G,YAAzB,CAAhB,EACA,MAAOC,YAAP,CACH,CACJ,CAED,MAAO,KAAP,CACH,CAED,QAASJ,sBAAT,CAA+BO,IAA/B,CAAqC,CACjCC,UAAUD,IAAV,CAAgB,CAAhB,CAAmB,CAAnB,EACAC,UAAUD,IAAV,CAAgB,CAAhB,CAAmB,CAAnB,EACAC,UAAUD,IAAV,CAAgB,CAAhB,CAAmB,CAAnB,EACAC,UAAUD,IAAV,CAAgB,CAAhB,CAAmB,CAAnB,EACH,CAED,QAASC,UAAT,CAAmBC,KAAnB,CAA0BC,IAA1B,CAAgCC,IAAhC,CAAsC,CAClC,KAAMC,MAAOH,MAAMC,IAAN,CAAb,CACAD,MAAMC,IAAN,EAAcD,MAAME,IAAN,CAAd,CACAF,MAAME,IAAN,EAAcC,IAAd,CACH,CAGD,QAASC,0BAAT,CAAmC9B,gBAAnC,CAAqD,CACjD,GAAI+B,KAAM,CACNC,OAAQhC,iBAAiBM,UAAjB,CAA4BC,IAD9B,CAEN0B,SAAU,MAFJ,CAAV,CAIA,MAAO,CACHpG,YAAa,+CADV,CAEHC,MAAO,yBAFJ,CAGHiG,IAAKA,GAHF,CAIHG,YAAaH,GAJV,CAAP,CAMH,CAED,QAASI,gCAAT,CAAyCnC,gBAAzC,CAA2DI,GAA3D,CAAgE,CAC5D;AACA,KAAMgC,cAAe,GAAI1D,WAAJ,CAAe,EAAI0B,IAAI3F,MAAvB,CAArB,CACA2H,aAAa,CAAb,EAAkB,IAAlB,CACAA,aAAa,CAAb,EAAkB,IAAlB,CACAA,aAAad,GAAb,CAAiBlB,GAAjB,CAAsB,CAAtB,EAEA;AACA,KAAM3F,QAAS,EAAG,yCAAH,CAA+C,EAAG,cAAlD,CAAmE,CAAE,iBAArE,CAAyF2H,aAAa3H,MAArH,CACA,GAAI4H,MAAO,GAAI3D,WAAJ,CAAejE,MAAf,CAAX,CACA,GAAID,GAAI,CAAR,CAEA;AACA6H,KAAK7H,GAAL,EAAY,CAACC,OAAS,UAAV,GAAyB,EAArC,CACA4H,KAAK7H,GAAL,EAAY,CAACC,OAAS,UAAV,GAAyB,EAArC,CACA4H,KAAK7H,GAAL,EAAY,CAACC,OAAS,UAAV,GAAyB,CAArC,CACA4H,KAAK7H,GAAL,EAAaC,OAAS,UAAtB,CAEA;AACA4H,KAAKf,GAAL,CAAS,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAAT,CAA2D9G,CAA3D,EACAA,GAAK,CAAL,CAEA;AACA6H,KAAKf,GAAL,CAAS,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAA0B,IAA1B,CAAgC,IAAhC,CAAsC,IAAtC,CAA4C,IAA5C,CAAkD,IAAlD,CAAwD,IAAxD,CAA8D,IAA9D,CAAoE,IAApE,CAA0E,IAA1E,CAAgF,IAAhF,CAAsF,IAAtF,CAA4F,IAA5F,CAAT,CAA4G9G,CAA5G,EACAA,GAAK,EAAL,CAEA;AACA6H,KAAK7H,GAAL,EAAY,CAAC4H,aAAa3H,MAAb,CAAsB,UAAvB,GAAsC,EAAlD,CACA4H,KAAK7H,GAAL,EAAY,CAAC4H,aAAa3H,MAAb,CAAsB,UAAvB,GAAsC,EAAlD,CACA4H,KAAK7H,GAAL,EAAY,CAAC4H,aAAa3H,MAAb,CAAsB,UAAvB,GAAsC,CAAlD,CACA4H,KAAK7H,GAAL,EAAa4H,aAAa3H,MAAb,CAAsB,UAAnC,CAEA;AACA4H,KAAKf,GAAL,CAASc,YAAT,CAAuB5H,CAAvB,EAEA;AACA6H,KAAO3B,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,CAAgCyB,IAAhC,CAAP,CACAA,KAAOpJ,OAAOqJ,WAAP,CAAmBD,IAAnB,CAAP,CAEA,MAAO,CACHxG,YAAa,+CADV,CAEHC,MAAO,oBAFJ,CAGHuG,KAAM,CACFL,OAAQK,IADN,CAHH,CAAP,CAOH,CAED,QAASE,gBAAT,CAAyBC,MAAzB,CAAiCC,kBAAjC,CAAqD,CACjD,KAAMC,UAAW,EAAjB,CACA,KAAMC,oBAAqB,EAA3B,CACA,KAAM1I,sBAAuBuI,OAAOjI,oBAAP,CAA4B,sBAA5B,EAAoD,CAApD,CAA7B,CACA,KAAMqI,YAAaJ,OAAOjI,oBAAP,CAA4B,YAA5B,EAA0C,CAA1C,CAAnB,CACA,GAAIyF,kBAAmB,IAAvB,CACA,GAAI7F,OAAJ,CACI0I,WADJ,CAEIC,iBAFJ,CAGI1C,GAHJ,CAII2C,eAJJ,CAKIC,SALJ,CAMI7H,QANJ,CAOIjB,SAPJ,CAQIM,CARJ,CAQOiF,CARP,CAUA;AACAiD,SAASO,QAAT,CAAoB,KAApB,CACAP,SAASQ,QAAT,CAAoB,uCAApB,CACAR,SAAS5F,IAAT,CAAgB7C,qBAAqBoB,YAArB,CAAkC,QAAlC,IAAgD,MAAhD,CAAyD,SAAzD,CAAqE,QAArF,CACAnB,UAAaD,qBAAqBoB,YAArB,CAAkC,WAAlC,CAAb,CACAqH,SAASxI,SAAT,CAAqBA,UAAY+E,WAAW/E,SAAX,CAAZ,CAAoCb,kBAAzD,CACA,GAAI8J,iBAAkBlE,WAAWhF,qBAAqBoB,YAArB,CAAkC,iBAAlC,CAAX,CAAtB,CACA,GAAI8H,kBAAoB,CAApB,EAAyBlJ,qBAAqBoB,YAArB,CAAkC,SAAlC,IAAiD,MAA9E,CAAsF,CAClF8H,gBAAkBC,QAAlB,CACH,CACD,GAAID,gBAAkB,CAAtB,CAAyB,CACrBT,SAASW,oBAAT,CAAgCF,gBAAkBT,SAASxI,SAA3D,CACH,CAED,GAAIyF,UAAWV,WAAWhF,qBAAqBoB,YAArB,CAAkC,UAAlC,CAAX,CAAf,CACAqH,SAASY,yBAAT,CAAsC3D,WAAa,CAAd,CAAmByD,QAAnB,CAA8BzD,SAAW+C,SAASxI,SAAvF,CACAwI,SAASa,aAAT,CAAyB1J,iBAAiB2J,mBAAjB,EAAzB,CACAd,SAASe,kBAAT,CAA8B,IAA9B,CAEA;AACA,GAAIf,SAAS5F,IAAT,GAAkB,SAAlB,EAA+B6C,SAAW,CAA9C,CAAiD,CAC7C+C,SAAS5F,IAAT,CAAgB,QAAhB,CACA;AACA4F,SAASW,oBAAT,CAAgC1D,SAAW+C,SAASxI,SAApD,CACA;AACH,CAED;AACA,GAAIwI,SAAS5F,IAAT,GAAkB,SAAlB,EAAgC4F,SAASW,oBAAT,CAAgCD,QAApE,CAA8E,CAC1EV,SAASgB,qBAAT,CAAiC,GAAIC,KAAJ,CAASlB,mBAAmBmB,OAAnB,GAAgClB,SAASW,oBAAT,CAAgC,IAAzE,CAAjC,CACAX,SAASmB,4BAAT,CAAwC,IAAxC,CACAnB,SAASoB,mCAAT,CAA+C,IAA/C,CAAqD;AACrDpB,SAASqB,wBAAT,CAAoC,IAApC,CAA0C;AAC7C,CAED;AACArB,SAASsB,MAAT,CAAkBhK,UAAUC,oBAAV,CAAgCyI,SAASxI,SAAzC,CAAlB,CACAwI,SAASuB,cAAT,CAA0B,CAACvB,SAASsB,MAAV,CAA1B,CAEA;AACA7J,OAASuI,SAASsB,MAAlB,CACA7J,OAAO+J,KAAP,CAAe,CAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAItB,aAAezE,SAAnB,CAA8B,CAC1B6B,iBAAmBwC,OAAOjI,oBAAP,CAA4B,kBAA5B,EAAgD,CAAhD,CAAnB,CAEA;AACA;AACAyF,iBAAiBM,UAAjB,CAA4BC,IAA5B,CAAmCP,iBAAiBM,UAAjB,CAA4BC,IAA5B,CAAiCvB,OAAjC,CAAyC,QAAzC,CAAmD,EAAnD,CAAnC,CAEA;AACAoB,IAAML,2BAA2BC,gBAA3B,CAAN,CAEA;AACA8C,kBAAoBhB,0BAA0B9B,gBAA1B,CAApB,CACA8C,kBAAkB,kBAAlB,EAAwC1C,GAAxC,CACAuC,mBAAmBhI,IAAnB,CAAwBmI,iBAAxB,EAEA;AACAA,kBAAoBX,gCAAgCnC,gBAAhC,CAAkDI,GAAlD,CAApB,CACA0C,kBAAkB,kBAAlB,EAAwC1C,GAAxC,CACAuC,mBAAmBhI,IAAnB,CAAwBmI,iBAAxB,EAEAJ,SAASyB,iBAAT,CAA6BxB,kBAA7B,CACAD,SAAS0B,yBAAT,CAAqCzB,kBAArC,CACH,CAEDE,YAAc1I,OAAOG,qBAArB,CAEA,IAAKE,EAAI,CAAT,CAAYA,EAAIqI,YAAYpI,MAA5B,CAAoCD,GAAK,CAAzC,CAA4C,CACxCqI,YAAYrI,CAAZ,EAAegC,eAAf,CAA+B6H,cAA/B,CAAgD,aAAhD,CACA;AACA,GAAI3B,SAASyB,iBAAT,GAA+BhG,SAAnC,CAA8C,CAC1C0E,YAAYrI,CAAZ,EAAe2J,iBAAf,CAAmCzB,SAASyB,iBAA5C,CACAtB,YAAYrI,CAAZ,EAAe4J,yBAAf,CAA2C1B,SAAS0B,yBAApD,CACH,CAED,GAAI1B,SAAS5F,IAAT,GAAkB,SAAtB,CAAiC,CAC7B;AACA,GAAI4F,SAASW,oBAAT,GAAkCD,QAAtC,CAAgD,CAC5CV,SAASgB,qBAAT,CAAiC,GAAIC,KAAJ,CAASlB,mBAAmBmB,OAAnB,GAAgCf,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CgD,QAA/C,CAA0D,IAAnG,CAAjC,CACH,CACD;AACA,GAAI+C,SAASW,oBAAT,CAAgC,CAAhC,EACAX,SAASW,oBAAT,GAAkCD,QADlC,EAEAP,YAAYrI,CAAZ,EAAec,WAAf,GAA+B,OAF/B,EAGAoH,SAASW,oBAAT,CAAgCR,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CgD,QAHnF,CAG6F,CACzF+C,SAASW,oBAAT,CAAgCR,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CgD,QAA/E,CACH,CACJ,CACJ,CAED,GAAI+C,SAASW,oBAAT,CAAgCX,SAASa,aAA7C,CAA4D,CACxDb,SAASa,aAAT,CAAyBb,SAASW,oBAAlC,CACH,CAED;AACA,MAAOX,UAASyB,iBAAhB,CACA,MAAOzB,UAAS0B,yBAAhB,CAEA;AACA;AACA;AACA,GAAI1B,SAAS5F,IAAT,GAAkB,QAAtB,CAAgC,CAC5B;AACA;AACA,GAAIwH,cAAelL,cAAcmL,QAAd,EAAnB,CACA,GAAID,cAAgBA,aAAavB,eAAjC,CAAkD,CAC9CA,gBAAkBuB,aAAavB,eAA/B,CACH,CAFD,IAEO,CACH,IAAKvI,EAAI,CAAT,CAAYA,EAAIqI,YAAYpI,MAA5B,CAAoCD,GAApC,CAAyC,CACrC,GAAIqI,YAAYrI,CAAZ,EAAec,WAAf,GAA+B,OAA/B,EAA0CuH,YAAYrI,CAAZ,EAAec,WAAf,GAA+B,OAA7E,CAAsF,CAClFH,SAAW0H,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CC,SAA1D,CACAoG,UAAY7H,SAAS,CAAT,EAAYyE,CAAZ,CAAgBiD,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BtC,SAA3D,CACA,GAAI6I,kBAAoB5E,SAAxB,CAAmC,CAC/B4E,gBAAkBC,SAAlB,CACH,CACDD,gBAAkByB,KAAKC,GAAL,CAAS1B,eAAT,CAA0BC,SAA1B,CAAlB,CACA;AACA;AACAN,SAASY,yBAAT,CAAqCkB,KAAKC,GAAL,CAAS/B,SAASY,yBAAlB,CAA6CT,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CgD,QAA5F,CAArC,CACH,CACJ,CACJ,CACD;AACA,GAAIoD,gBAAkB,CAAtB,CAAyB,CACrBL,SAASK,eAAT,CAA2BA,eAA3B,CACA,IAAKvI,EAAI,CAAT,CAAYA,EAAIqI,YAAYpI,MAA5B,CAAoCD,GAApC,CAAyC,CACrCW,SAAW0H,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BG,eAA/B,CAA+CC,SAA1D,CACA,IAAK6C,EAAI,CAAT,CAAYA,EAAItE,SAASV,MAAzB,CAAiCgF,GAAjC,CAAsC,CAClC,GAAI,CAACtE,SAASsE,CAAT,EAAYD,SAAjB,CAA4B,CACxBrE,SAASsE,CAAT,EAAYD,SAAZ,CAAwBrE,SAASsE,CAAT,EAAYG,CAApC,CACH,CACDzE,SAASsE,CAAT,EAAYG,CAAZ,EAAkBmD,gBAAkBF,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BtC,SAAnE,CACH,CACD,GAAI2I,YAAYrI,CAAZ,EAAec,WAAf,GAA+B,OAA/B,EAA0CuH,YAAYrI,CAAZ,EAAec,WAAf,GAA+B,OAA7E,CAAsF,CAClFnB,OAAO+J,KAAP,CAAeM,KAAKE,GAAL,CAASvJ,SAAS,CAAT,EAAYyE,CAArB,CAAwBzF,OAAO+J,KAA/B,CAAf,CACArB,YAAYrI,CAAZ,EAAegC,eAAf,CAA+BmI,sBAA/B,CAAwDxK,OAAO+J,KAA/D,CACH,CACJ,CACD/J,OAAO+J,KAAP,EAAgBxB,SAASxI,SAAzB,CACH,CACJ,CAED;AACA;AACAwI,SAASY,yBAAT,CAAqCkB,KAAKI,KAAL,CAAWlC,SAASY,yBAAT,CAAqC,IAAhD,EAAwD,IAA7F,CACAnJ,OAAOwF,QAAP,CAAkB+C,SAASY,yBAA3B,CAEA,MAAOZ,SAAP,CACH,CAED,QAASmC,SAAT,CAAkBtE,IAAlB,CAAwB,CACpB,GAAIiC,QAAS,IAAb,CAEA,GAAIsC,OAAOjE,SAAX,CAAsB,CAClB,KAAMkE,QAAS,GAAID,QAAOjE,SAAX,EAAf,CAEA2B,OAASuC,OAAOjE,eAAP,CAAuBP,IAAvB,CAA6B,UAA7B,CAAT,CACA,GAAIiC,OAAOjI,oBAAP,CAA4B,aAA5B,EAA2CE,MAA3C,CAAoD,CAAxD,CAA2D,CACvD,KAAM,IAAIuK,MAAJ,CAAU,6BAAV,CAAN,CACH,CACJ,CAED,MAAOxC,OAAP,CACH,CAED,QAASyC,YAAT,EAAuB,CACnB,MAAO,KAAP,CACH,CAED,QAASC,QAAT,EAAmB,CACf,MAAO,KAAP,CACH,CAED,QAASC,cAAT,CAAuB5E,IAAvB,CAA6B,CACzB,GAAIiC,QAAS,IAAb,CACA,GAAIE,UAAW,IAAf,CAEA,KAAMM,WAAY8B,OAAOM,WAAP,CAAmBC,GAAnB,EAAlB,CAEA;AACA7C,OAASqC,SAAStE,IAAT,CAAT,CAEA,KAAM+E,cAAeR,OAAOM,WAAP,CAAmBC,GAAnB,EAArB,CAEA,GAAI7C,SAAW,IAAf,CAAqB,CACjB,MAAO,KAAP,CACH,CAED;AACAE,SAAWH,gBAAgBC,MAAhB,CAAwB,GAAImB,KAAJ,EAAxB,CAAX,CAEA,KAAM4B,cAAeT,OAAOM,WAAP,CAAmBC,GAAnB,EAArB,CAEAzL,OAAO4L,IAAP,CAAY,kCAAoC,CAACF,aAAetC,SAAhB,EAA2ByC,WAA3B,CAAuC,CAAvC,CAApC,CAAgF,gBAAhF,CAAmG,CAACF,aAAeD,YAAhB,EAA8BG,WAA9B,CAA0C,CAA1C,CAAnG,CAAkJ,aAAlJ,CAAkK,CAAC,CAACF,aAAevC,SAAhB,EAA6B,IAA9B,EAAoCyC,WAApC,CAAgD,CAAhD,CAAlK,CAAuN,IAAnO,EAEA,MAAO/C,SAAP,CACH,CAED/I,SAAW,CACP+L,MAAOP,aADA,CAEPF,YAAaA,WAFN,CAGPC,QAASA,OAHF,CAAX,CAMApL,QAEA,MAAOH,SAAP,CACH,CAEDZ,UAAU4M,qBAAV,CAAkC,WAAlC,CACA,cAAeC,QAAOC,YAAP,CAAoBC,eAApB,CAAoC/M,SAApC,CAAf,CAA+D","file":"MssParser.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @param {Object} config object\n */\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'SUBT': 'alternate',\n        'CAPT': 'alternate', // 'CAPT' is commonly equivalent to 'SUBT'\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger,\n        mediaPlayerModel;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        mediaPlayerModel = config.mediaPlayerModel;\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            segments,\n            i;\n\n        adaptationSet.id = streamIndex.getAttribute('Name') ? streamIndex.getAttribute('Name') : streamIndex.getAttribute('Type');\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === 'audio') {\n                fourCCValue = 'AAC';\n            } else if (type === 'video') {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale;\n\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i,j,r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            segment.tManifest = parseFloat(tManifest);\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = parseFloat(tManifest) - parseFloat(prevSegment.tManifest);\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = parseFloat(prevSegment.tManifest) + prevSegment.d;\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest  = parseFloat(prevSegment.tManifest) + prevSegment.d;\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        // Convert from multi-byte to unicode\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n        // Convert to string\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n        // Parse <WRMHeader> to get KID field value\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n        KID = xmlReader.querySelector('KID').textContent;\n\n        // Get KID (base64 decoded) as byte array\n        KID = BASE64.decodeArray(KID);\n\n        // Convert UUID from little-endian to big-endian\n        convertUuidEndianness(KID);\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(protectionHeader, KID) {\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        return {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha',\n            pssh: {\n                __text: pssh\n            }\n        };\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        timescale =  smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        if (dvrWindowLength === 0 && smoothStreamingMedia.getAttribute('CanSeek') === 'TRUE') {\n            dvrWindowLength = Infinity;\n        }\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        manifest.minBufferTime = mediaPlayerModel.getStableBufferTime();\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\n        if (manifest.type === 'dynamic'  && manifest.timeShiftBufferDepth < Infinity) {\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\n            manifest.refreshManifestOnSwitchTrack = true;\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(protectionHeader, KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (manifest.type === 'dynamic') {\n                // Set availabilityStartTime for infinite DVR Window from segment timeline duration\n                if (manifest.timeShiftBufferDepth === Infinity) {\n                    manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (adaptations[i].SegmentTemplate.SegmentTimeline.duration * 1000));\n                }\n                // Match timeShiftBufferDepth to video segment timeline duration\n                if (manifest.timeShiftBufferDepth > 0 &&\n                    manifest.timeShiftBufferDepth !== Infinity &&\n                    adaptations[i].contentType === 'video' &&\n                    manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                    manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                }\n            }\n        }\n\n        if (manifest.timeShiftBufferDepth < manifest.minBufferTime) {\n            manifest.minBufferTime = manifest.timeShiftBufferDepth;\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t / adaptations[i].SegmentTemplate.timescale;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n            if (timestampOffset > 0) {\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t;\n                        }\n                        segments[j].t -= (timestampOffset * adaptations[i].SegmentTemplate.timescale);\n                    }\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and the avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n"]}