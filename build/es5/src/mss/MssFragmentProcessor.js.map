{"version":3,"sources":["../../../../src/mss/MssFragmentProcessor.js"],"names":["MSSFragmentMoofProcessor","MSSFragmentMoovProcessor","MssEvents","arrayEqual","arr1","arr2","length","every","element","index","saioProcessor","_procFullBox","flags","_procField","_procFieldArray","entry_count","version","saizProcessor","default_sample_info_size","sample_count","sencProcessor","_procEntries","entry","_procEntryField","_procSubEntries","NumberOfEntries","clearAndCryptedData","uuidProcessor","tfxdUserType","tfrfUserType","sepiffUserType","usertype","_parsing","type","fragment_count","call","MssFragmentProcessor","config","context","metricsModel","playbackController","eventBus","protectionController","ISOBoxer","debug","mssFragmentMoovProcessor","mssFragmentMoofProcessor","instance","setup","addBoxProcessor","create","constants","errHandler","generateMoov","rep","processFragment","e","sp","request","response","Error","convertFragment","trigger","FRAGMENT_INFO_LOADING_COMPLETED","fragmentInfo","streamProcessor","sender","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"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","file":"MssFragmentProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const metricsModel = config.metricsModel;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController,\n            constants: config.constants, ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                metricsModel: metricsModel,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                eventBus: eventBus,\n                debug: debug,\n                errHandler: config.errHandler\n            });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        let request = e.request;\n\n        if (request.type === 'MediaSegment') {\n            // it's a MediaSegment, let's convert fragment\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */"]}