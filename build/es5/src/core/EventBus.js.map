{"version":3,"sources":["../../../../src/core/EventBus.js"],"names":["FactoryMaker","EVENT_PRIORITY_LOW","EVENT_PRIORITY_HIGH","EventBus","handlers","on","type","listener","scope","priority","Error","getHandlerIdx","handler","callback","inserted","some","item","idx","splice","push","off","trigger","payload","hasOwnProperty","filter","forEach","call","index","reset","instance","__dashjs_factory_name","factory","getSingletonFactory","updateSingletonFactory"],"mappings":"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","file":"EventBus.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (item && priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type][idx] = null;\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type] = handlers[type].filter((item) => item);\n        handlers[type].forEach( handler => handler && handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\nexport default factory;\n"]}