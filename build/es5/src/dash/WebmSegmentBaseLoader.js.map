{"version":3,"sources":["../../../../src/dash/WebmSegmentBaseLoader.js"],"names":["Events","EventBus","EBMLParser","Constants","FactoryMaker","Debug","RequestModifier","Segment","HTTPRequest","FragmentRequest","HTTPLoader","DashJSError","Errors","WebmSegmentBaseLoader","context","eventBus","getInstance","instance","logger","WebM","errHandler","requestModifier","metricsModel","mediaPlayerModel","httpLoader","baseURLController","setup","getLogger","EBML","tag","required","SeekHead","Info","TimecodeScale","parse","Duration","Tracks","Cues","CuePoint","CueTime","CueTrackPositions","CueTrack","CueClusterPosition","Void","initialize","create","setConfig","config","Error","MISSING_CONFIG_ERROR","parseCues","ab","cues","cue","cueTrack","ebmlParser","data","consumeTagAndSize","moreData","parseTag","CueTracks","consumeTag","cueTrackPositionSize","getMatroskaCodedNum","startPos","getPos","Track","ClusterPosition","push","setPos","length","parseSegments","segmentStart","segmentEnd","segmentDuration","duration","parsed","segments","segment","i","len","start","end","startTime","timescale","mediaRange","debug","parseEbmlHeader","media","theRange","callback","parts","split","request","info","url","range","parseFloat","skipOverElement","undefined","infoTag","infoElementSize","getFragmentRequest","onload","response","onloadend","error","load","success","checkSetConfigCall","hasOwnProperty","loadInitialization","representation","loadingInfo","baseUrl","resolve","path","initRange","init","trigger","INITIALIZATION_LOADED","loadSegments","type","bytesToLoad","bytesLoaded","onLoaded","SEGMENTS_LOADED","mediaType","SEGMENT_BASE_LOADER_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","INIT_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","reset","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"WebmSegmentBaseLoader.js","sourcesContent":["import Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport EBMLParser from '../streaming/utils/EBMLParser';\nimport Constants from '../streaming/constants/Constants';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport {\n    HTTPRequest\n} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport HTTPLoader from '../streaming/net/HTTPLoader';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport Errors from '../core/errors/Errors';\n\nfunction WebmSegmentBaseLoader() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        WebM,\n        errHandler,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        httpLoader,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        requestModifier = RequestModifier(context).getInstance();\n        httpLoader = HTTPLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.metricsModel || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n        baseURLController = config.baseURLController;\n        metricsModel = config.metricsModel;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let cue;\n        let cueTrack;\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n            ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration;\n        let parsed;\n        let segments;\n        let segment;\n        let i;\n        let len;\n        let start;\n        let end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration;\n        let segments;\n        let parts = theRange.split('-');\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parseFloat(parts[0]),\n                end: parseFloat(parts[1])\n            },\n            request: request\n        };\n        let segmentEnd;\n        let segmentStart;\n\n        logger.debug('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                    ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            logger.error('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let initRange = representation.range.split('-');\n        let info = loadingInfo || {\n            range: {\n                start: parseFloat(initRange[0]),\n                end: parseFloat(initRange[1])\n            },\n            request: request,\n            url: media,\n            init: true\n        };\n\n        logger.info('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            // note that we don't explicitly set rep.initialization as this\n            // will be computed when all BaseURLs are resolved later\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n            bytesLoaded: 0,\n            bytesToLoad: bytesToLoad,\n            range: {\n                start: 0,\n                end: bytesToLoad\n            },\n            request: request,\n            url: media,\n            init: false\n        };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        logger.debug('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: segments,\n                representation: representation,\n                mediaType: type\n            });\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: null,\n                representation: representation,\n                mediaType: type,\n                error: new DashJSError(Errors.SEGMENT_BASE_LOADER_ERROR_CODE, Errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n            });\n        }\n    }\n\n    function getFragmentRequest(info) {\n        let request = new FragmentRequest();\n\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n"]}