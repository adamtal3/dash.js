{"version":3,"sources":["../../../../../../src/dash/parser/matchers/StringMatcher.js"],"names":["BaseMatcher","DashConstants","StringMatcher","constructor","attr","nodeName","stringAttrsInElements","MPD","ID","PROFILES","PERIOD","BASE_URL","SERVICE_LOCATION","BYTE_RANGE","SEGMENT_BASE","INDEX_RANGE","INITIALIZATION","RANGE","REPRESENTATION_INDEX","SEGMENT_LIST","BITSTREAM_SWITCHING","SEGMENT_URL","MEDIA_RANGE","SEGMENT_TEMPLATE","MEDIA","INDEX","INITIALIZATION_MINUS","BITSTREAM_SWITCHING_MINUS","ASSET_IDENTIFIER","VALUE","EVENT_STREAM","ADAPTATION_SET","MIME_TYPE","SEGMENT_PROFILES","CODECS","CONTENT_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","INBAND_EVENT_STREAM","ACCESSIBILITY","ROLE","RATING","VIEWPOINT","CONTENT_COMPONENT","REPRESENTATION","DEPENDENCY_ID","MEDIA_STREAM_STRUCTURE_ID","SUBSET","METRICS","METRICS_MINUS","REPORTING","hasOwnProperty","attrNames","undefined","indexOf","name","str","String"],"mappings":"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","file":"StringMatcher.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n"]}