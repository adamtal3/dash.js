{"version":3,"sources":["../../../../../../src/dash/parser/matchers/StringMatcher.js"],"names":["BaseMatcher","DashConstants","StringMatcher","constructor","attr","nodeName","stringAttrsInElements","MPD","ID","PROFILES","PERIOD","BASE_URL","SERVICE_LOCATION","BYTE_RANGE","SEGMENT_BASE","INDEX_RANGE","INITIALIZATION","RANGE","REPRESENTATION_INDEX","SEGMENT_LIST","BITSTREAM_SWITCHING","SEGMENT_URL","MEDIA_RANGE","SEGMENT_TEMPLATE","MEDIA","INDEX","INITIALIZATION_MINUS","BITSTREAM_SWITCHING_MINUS","ASSET_IDENTIFIER","VALUE","EVENT_STREAM","ADAPTATION_SET","MIME_TYPE","SEGMENT_PROFILES","CODECS","CONTENT_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","INBAND_EVENT_STREAM","ACCESSIBILITY","ROLE","RATING","VIEWPOINT","CONTENT_COMPONENT","REPRESENTATION","DEPENDENCY_ID","MEDIA_STREAM_STRUCTURE_ID","SUBSET","METRICS","METRICS_MINUS","REPORTING","hasOwnProperty","attrNames","undefined","indexOf","name","str","String"],"mappings":"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","file":"StringMatcher.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n"]}