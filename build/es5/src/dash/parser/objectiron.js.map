{"version":3,"sources":["../../../../../src/dash/parser/objectiron.js"],"names":["FactoryMaker","ObjectIron","mappers","mergeValues","parentItem","childItem","name","hasOwnProperty","mapProperties","properties","parent","child","i","len","length","property","merge","parentValue","childValue","mapItem","item","node","children","array","v","len2","childNode","run","source","periodMapper","period","periods","Period_asArray","adaptationSets","AdaptationSet_asArray","adaptationSetMapper","adaptationset","__dashjs_factory_name","factory","getClassFactory"],"mappings":"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","file":"objectiron.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name + '_asArray'];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if ('period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period_asArray;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet_asArray;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n"]}