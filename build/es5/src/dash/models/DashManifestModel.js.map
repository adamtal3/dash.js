{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":["Constants","DashConstants","Representation","AdaptationSet","Period","Mpd","UTCTiming","Event","BaseURL","EventStream","ObjectUtils","URLUtils","FactoryMaker","Debug","DashJSError","Errors","THUMBNAILS_SCHEME_ID_URIS","DashManifestModel","config","instance","logger","context","urlUtils","getInstance","timelineConverter","errHandler","BASE64","PROFILE_DVB","isInteger","Number","value","isFinite","Math","floor","setup","getLogger","getIsTypeOf","adaptation","type","i","len","representation","col","mimeTypeRegEx","codecs","result","found","Error","hasOwnProperty","ContentComponent_asArray","TEXT","RegExp","Representation_asArray","length","essentialProperties","getEssentialPropertiesForRepresentation","indexOf","schemeIdUri","IMAGE","CODECS","search","STPP","WVTT","FRAGMENTED_TEXT","MUXED","contentType","MIME_TYPE","test","mimeType","getIsAudio","AUDIO","getIsVideo","VIDEO","getIsFragmentedText","getIsMuxed","getIsImage","getIsTextTrack","getLanguageForAdaptation","lang","LANG","replace","getViewpointForAdaptation","VIEWPOINT","Viewpoint","getRolesForAdaptation","ROLE_ASARRAY","Role_asArray","getAccessibilityForAdaptation","ACCESSIBILITY_ASARRAY","Accessibility_asArray","getAudioChannelConfigurationForAdaptation","AUDIOCHANNELCONFIGURATION_ASARRAY","AudioChannelConfiguration_asArray","getRepresentationSortFunction","a","b","bandwidth","processAdaptation","realAdaptation","undefined","sort","getRealAdaptations","manifest","periodIndex","Period_asArray","AdaptationSet_asArray","getAdaptationForId","id","realAdaptations","ID","getAdaptationForIndex","index","getIndexForAdaptation","objectUtils","areEqual","getAdaptationsForType","adaptations","push","getCodec","representationId","addResolutionInfo","codec","width","height","getMimeType","getKID","CENC_DEFAULT_KID","getLabelsForAdaptation","Label_asArray","labelArray","text","__text","getContentProtectionData","CONTENTPROTECTION_ASARRAY","ContentProtection_asArray","getIsDynamic","isDynamic","DYNAMIC","hasProfile","profile","has","profiles","getIsDVB","getDuration","mpdDuration","MEDIA_PRESENTATION_DURATION","mediaPresentationDuration","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","NaN","getManifestUpdatePeriod","latencyOfLastUpdate","delay","MINIMUM_UPDATE_PERIOD","minimumUpdatePeriod","isNaN","max","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","realRepresentations","map","realRepresentation","scanType","EssentialProperty_asArray","prop","getRepresentationFor","getRealAdaptationFor","voAdaptation","period","periodArray","mpd","isLastRepeatAttributeValid","segmentTimeline","s","S_asArray","r","getUseCalculatedLiveEdgeTimeForAdaptation","segmentInfo","SEGMENT_LIST","SegmentList","SEGMENT_TIMELINE","SegmentTimeline","SEGMENT_TEMPLATE","SegmentTemplate","getRepresentationsForAdaptation","voRepresentations","baseUrl","baseUrls","getBaseURLsFromElement","voRepresentation","CODEC_PRIVATE_DATA","codecPrivateData","BANDWITH","WIDTH","HEIGHT","SCAN_TYPE","MAX_PLAYOUT_RATE","maxPlayoutRate","SEGMENT_BASE","SegmentBase","segmentInfoType","useCalculatedLiveEdgeTime","INITIALIZATION_MINUS","initialization","split","join","BASE_URL","INITIALIZATION","Initialization","SOURCE_URL","sourceURL","RANGE","range","TIMESCALE","timescale","DURATION","segmentDuration","duration","MEDIA","media","START_NUMBER","startNumber","INDEX_RANGE","indexRange","PRESENTATION_TIME_OFFSET","presentationTimeOffset","AVAILABILITY_TIME_OFFSET","availabilityTimeOffset","AVAILABILITY_TIME_COMPLETE","availabilityTimeComplete","MSETimeOffset","calcMSETimeOffset","path","getAdaptationsForPeriod","voPeriod","realPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","START","start","parseFloat","toFixed","warn","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","getMpd","AVAILABILITY_START_TIME","availabilityStartTime","Date","getTime","loadedTime","AVAILABILITY_END_TIME","availabilityEndTime","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","TIMESHIFT_BUFFER_DEPTH","timeShiftBufferDepth","MAX_SEGMENT_DURATION","maxSegmentDuration","periodEnd","POSITIVE_INFINITY","error","MANIFEST_ERROR_ID_PARSE_CODE","getEventsForPeriod","eventStreams","EventStream_asArray","events","j","eventStream","SCHEME_ID_URI","VALUE","Event_asArray","event","presentationTime","PRESENTATION_TIME","Signal","Binary","messageData","decodeArray","getEventStreams","inbandStreams","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","forEach","utcTiming","entry","toString","node","entries","BaseURL_asArray","baseUri","earlyReturn","some","isRelative","resolve","url","SERVICE_LOCATION","serviceLocation","DVB_PRIORITY","dvb_priority","DVB_WEIGHT","dvb_weight","getLocation","LOCATION","Location","Location_asArray","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport { THUMBNAILS_SCHEME_ID_URIS } from '../../streaming/thumbnail/ThumbnailTracks';\n\nfunction DashManifestModel(config) {\n\n    config = config || {};\n\n    let instance,\n        logger;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n    const timelineConverter = config.timelineConverter;\n    const errHandler = config.errHandler;\n    const BASE64 = config.BASE64;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup () {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) {\n            let essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\n                return type === Constants.IMAGE;\n            }\n            if (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS)) {\n                // Just check the start of the codecs string\n                codecs = adaptation.Representation_asArray[0].codecs;\n                if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                    return type === Constants.FRAGMENTED_TEXT;\n                }\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getRealAdaptations(manifest, periodIndex) {\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        if (realAdaptations.length > 0 && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        const len = realAdaptations.length;\n\n        if (realAdaptation) {\n            for (let i = 0; i < len; i++) {\n                let objectUtils = ObjectUtils(context).getInstance();\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptations[i], type)) {\n                adaptations.push(processAdaptation(realAdaptations[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        let codec = null;\n\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            if (representation) {\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n                if (addResolutionInfo && representation.width !== undefined) {\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n                }\n            }\n        }\n\n        return codec;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getLabelsForAdaptation(adaptation) {\n        if (!adaptation.Label_asArray || !adaptation.Label_asArray.length) {\n            return [];\n        }\n\n        const labelArray = [];\n\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\n            labelArray.push({\n                lang: adaptation.Label_asArray[i].lang,\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\n            });\n        }\n\n        return labelArray;\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, PROFILE_DVB);\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\n\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation.Representation_asArray;\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null\n            };\n        });\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n    }\n\n    function isLastRepeatAttributeValid(segmentTimeline) {\n        let s = segmentTimeline.S_asArray[segmentTimeline.S_asArray.length - 1];\n        return !s.hasOwnProperty('r') || s.r >= 0;\n    }\n\n    function getUseCalculatedLiveEdgeTimeForAdaptation(voAdaptation) {\n        let realRepresentation = getRealAdaptationFor(voAdaptation).Representation_asArray[0];\n        let segmentInfo;\n        if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n            segmentInfo = realRepresentation.SegmentList;\n            return segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ?\n                isLastRepeatAttributeValid(segmentInfo.SegmentTimeline) :\n                true;\n        } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n            segmentInfo = realRepresentation.SegmentTemplate;\n            if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                return isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n            }\n        }\n\n        return false;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo,\n            baseUrl;\n\n        // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n        // that we are processing. Making it works properly will require much further changes and given\n        // parsing base Urls parameters is needed for our ultra low latency examples, we will\n        // keep this \"tricky\" code until the real (and good) solution comes\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n            if (baseUrls) {\n                baseUrl = baseUrls[0];\n            }\n        }\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        let initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n\n                    if (eventStreams[i].Event_asArray[j].Signal && eventStreams[i].Event_asArray[j].Signal.Binary) {\n                        event.messageData = BASE64.decodeArray(eventStreams[i].Event_asArray[j].Signal.Binary);\n                    } else {\n                        // From Cor.1: 'NOTE: this attribute is an alternative\n                        // to specifying a complete XML element(s) in the Event.\n                        // It is useful when an event leans itself to a compact\n                        // string representation'.\n                        event.messageData =\n                            eventStreams[i].Event_asArray[j].messageData ||\n                            eventStreams[i].Event_asArray[j].__text;\n                    }\n\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsTextTrack: getIsTextTrack,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getLabelsForAdaptation: getLabelsForAdaptation,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation,\n        getUseCalculatedLiveEdgeTimeForAdaptation: getUseCalculatedLiveEdgeTimeForAdaptation\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n"]}