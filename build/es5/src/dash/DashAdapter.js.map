{"version":3,"sources":["../../../../src/dash/DashAdapter.js"],"names":["Constants","DashConstants","RepresentationInfo","MediaInfo","StreamInfo","ManifestInfo","Event","FactoryMaker","cea608parser","checkInteger","DashAdapter","instance","dashManifestModel","voPeriods","voAdaptations","currentMediaInfo","setup","reset","setConfig","config","getRepresentationForRepresentationInfo","representationInfo","representationController","getRepresentationForQuality","quality","getAdaptationForMediaInfo","mediaInfo","streamInfo","id","undefined","index","getPeriodForStreamInfo","voPeriodsArray","ln","length","i","voPeriod","convertRepresentationToRepresentationInfo","voRepresentation","realAdaptation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","realRepresentation","getRepresentationFor","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","duration","NaN","MSETimeOffset","useCalculatedLiveEdgeTime","convertAdaptationToMediaInfo","viewpoint","type","convertPeriodToStreamInfo","representationCount","getRepresentationCount","labels","getLabelsForAdaptation","lang","getLanguageForAdaptation","getViewpointForAdaptation","value","accessibility","getAccessibilityForAdaptation","map","accessibilityValue","accessibilityData","schemeIdUri","search","embeddedCaptions","audioChannelConfiguration","getAudioChannelConfigurationForAdaptation","roles","getRolesForAdaptation","role","codec","getCodec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","forEach","item","KID","getKID","isText","getIsTextTrack","convertVideoInfoToEmbeddedTextInfo","channel","parseInt","substring","EMBEDDED_TEXT","isEmbedded","convertVideoInfoToThumbnailInfo","IMAGE","THRESHOLD","start","manifestInfo","convertMpdToManifestInfo","isLast","Math","abs","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","getDuration","isDynamic","getIsDynamic","getMediaInfoForType","getAdaptationForType","selectedVoPeriod","periodId","idx","getIndexForAdaptation","getAdaptationsForPeriod","getIsMain","filter","MAIN","periodIndex","adaptations","getAdaptationsForType","allMediaInfoForType","getAllMediaInfoForType","isMediaInfoEqual","externalManifest","voLocalPeriods","mediaArr","data","media","j","checkSetConfigCall","getMpd","getRegularPeriods","adaptationsForType","VIDEO","accessibilityLength","indexOf","parts","split","call","push","CC1","hasOwnProperty","Error","updatePeriods","newManifest","getStreamsInfo","maxStreamsInfo","streams","checkStreamProcessor","streamProcessor","checkRepresentationController","getInitRequest","representation","indexHandler","getRepresentationController","getIndexHandler","getFragmentRequest","time","options","fragRequest","getSegmentRequestForTime","getNextSegmentRequest","getIndexHandlerTime","getCurrentTime","setIndexHandlerTime","setCurrentTime","resetIndexHandler","resetIndex","updateData","getStreamInfo","getMediaInfo","voAdaptation","getType","getAdaptationForId","getAdaptationForIndex","getRepresentationInfo","getCurrentRepresentation","getEvent","eventBox","eventStreams","startTime","event","scheme_id_uri","timescale","presentationTimeDelta","presentation_time_delta","event_duration","messageData","message_data","presentationTime","eventStream","getEventsFor","info","events","getEventsForPeriod","getEventStreamForAdaptationSet","getEventStreamForRepresentation","setCurrentMediaInfo","streamId","convertDataToRepresentationInfo","getDataForMedia","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"DashAdapter.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../streaming/constants/Constants';\nimport DashConstants from './constants/DashConstants';\nimport RepresentationInfo from '../streaming/vo/RepresentationInfo';\nimport MediaInfo from '../streaming/vo/MediaInfo';\nimport StreamInfo from '../streaming/vo/StreamInfo';\nimport ManifestInfo from '../streaming/vo/ManifestInfo';\nimport Event from './vo/Event';\nimport FactoryMaker from '../core/FactoryMaker';\nimport cea608parser from '../../externals/cea608-parser';\nimport { checkInteger } from '../streaming/utils/SupervisorTools';\n\nfunction DashAdapter() {\n    let instance,\n        dashManifestModel,\n        voPeriods,\n        voAdaptations,\n        currentMediaInfo;\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function getRepresentationForRepresentationInfo(representationInfo, representationController) {\n        return representationController && representationInfo ? representationController.getRepresentationForQuality(representationInfo.quality) : null;\n    }\n\n    function getAdaptationForMediaInfo(mediaInfo) {\n\n        if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations[mediaInfo.streamInfo.id]) return null;\n        return voAdaptations[mediaInfo.streamInfo.id][mediaInfo.index];\n    }\n\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\n        const ln = voPeriodsArray.length;\n\n        for (let i = 0; i < ln; i++) {\n            let voPeriod = voPeriodsArray[i];\n\n            if (streamInfo.id === voPeriod.id) return voPeriod;\n        }\n\n        return null;\n    }\n\n    function convertRepresentationToRepresentationInfo(voRepresentation) {\n        let representationInfo = new RepresentationInfo();\n        const realAdaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\n        const realRepresentation = dashManifestModel.getRepresentationFor(voRepresentation.index, realAdaptation);\n\n        representationInfo.id = voRepresentation.id;\n        representationInfo.quality = voRepresentation.index;\n        representationInfo.bandwidth = dashManifestModel.getBandwidth(realRepresentation);\n        representationInfo.DVRWindow = voRepresentation.segmentAvailabilityRange;\n        representationInfo.fragmentDuration = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length > 0 ? voRepresentation.segments[0].duration : NaN);\n        representationInfo.MSETimeOffset = voRepresentation.MSETimeOffset;\n        representationInfo.useCalculatedLiveEdgeTime = voRepresentation.useCalculatedLiveEdgeTime;\n        representationInfo.mediaInfo = convertAdaptationToMediaInfo(voRepresentation.adaptation);\n\n        return representationInfo;\n    }\n\n    function convertAdaptationToMediaInfo(adaptation) {\n        let mediaInfo = new MediaInfo();\n        const realAdaptation = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\n        let viewpoint;\n\n        mediaInfo.id = adaptation.id;\n        mediaInfo.index = adaptation.index;\n        mediaInfo.type = adaptation.type;\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\n        mediaInfo.labels = dashManifestModel.getLabelsForAdaptation(realAdaptation);\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\n        viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation).map(function (accessibility) {\n            let accessibilityValue = accessibility.value;\n            let accessibilityData = accessibilityValue;\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\n                if (accessibilityValue) {\n                    accessibilityData = 'cea-608:' + accessibilityValue;\n                } else {\n                    accessibilityData = 'cea-608';\n                }\n                mediaInfo.embeddedCaptions = true;\n            }\n            return accessibilityData;\n        });\n\n        mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation).map(function (audioChannelConfiguration) {\n            return audioChannelConfiguration.value;\n        });\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(realAdaptation).map(function (role) {\n            return role.value;\n        });\n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(realAdaptation);\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\n\n        if (mediaInfo.contentProtection) {\n            mediaInfo.contentProtection.forEach(function (item) {\n                item.KID = dashManifestModel.getKID(item);\n            });\n        }\n\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\n\n        return mediaInfo;\n    }\n\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\n        mediaInfo.type = Constants.EMBEDDED_TEXT;\n        mediaInfo.codec = 'cea-608-in-SEI';\n        mediaInfo.isText = true;\n        mediaInfo.isEmbedded = true;\n        mediaInfo.lang = lang;\n        mediaInfo.roles = ['caption'];\n    }\n\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\n        mediaInfo.type = Constants.IMAGE;\n    }\n\n    function convertPeriodToStreamInfo(period) {\n        let streamInfo = new StreamInfo();\n        const THRESHOLD = 1;\n\n        streamInfo.id = period.id;\n        streamInfo.index = period.index;\n        streamInfo.start = period.start;\n        streamInfo.duration = period.duration;\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\n        streamInfo.isLast = period.mpd.manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\n\n        return streamInfo;\n    }\n\n    function convertMpdToManifestInfo(mpd) {\n        let manifestInfo = new ManifestInfo();\n\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\n\n        return manifestInfo;\n    }\n\n    function getMediaInfoForType(streamInfo, type) {\n\n        if (voPeriods.length === 0) {\n            return null;\n        }\n\n        const manifest = voPeriods[0].mpd.manifest;\n        let realAdaptation = getAdaptationForType(manifest, streamInfo.index, type, streamInfo);\n        if (!realAdaptation) return null;\n\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        let periodId = selectedVoPeriod.id;\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, manifest, streamInfo.index);\n\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        return convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\n    }\n\n    function getIsMain(adaptation) {\n        return dashManifestModel.getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\n        const adaptations = dashManifestModel.getAdaptationsForType(manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            const allMediaInfoForType = getAllMediaInfoForType(streamInfo, type);\n\n            if (currentMediaInfo[streamInfo.id] && currentMediaInfo[streamInfo.id][type]) {\n                for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                    if (currentMediaInfo[streamInfo.id][type].isMediaInfoEqual(allMediaInfoForType[i])) {\n                        return adaptations[i];\n                    }\n                }\n            }\n\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\n        let voLocalPeriods = voPeriods;\n        let manifest = externalManifest;\n        let mediaArr = [];\n        let data,\n            media,\n            idx,\n            i,\n            j,\n            ln;\n\n        if (manifest) {\n            checkSetConfigCall();\n            const mpd = dashManifestModel.getMpd(manifest);\n\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\n        } else {\n            if (voPeriods.length > 0) {\n                manifest = voPeriods[0].mpd.manifest;\n            } else {\n                return mediaArr;\n            }\n        }\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\n        const periodId = selectedVoPeriod.id;\n        const adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo.index, type !== Constants.EMBEDDED_TEXT ? type : Constants.VIDEO);\n\n        if (!adaptationsForType) return mediaArr;\n\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\n            data = adaptationsForType[i];\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n            media = convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\n\n            if (type === Constants.EMBEDDED_TEXT) {\n                let accessibilityLength = media.accessibility.length;\n                for (j = 0; j < accessibilityLength; j++) {\n                    if (!media) {\n                        continue;\n                    }\n                    let accessibility = media.accessibility[j];\n                    if (accessibility.indexOf('cea-608:') === 0) {\n                        let value = accessibility.substring(8);\n                        let parts = value.split(';');\n                        if (parts[0].substring(0, 2) === 'CC') {\n                            for (j = 0; j < parts.length; j++) {\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        } else {\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        }\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\n                        convertVideoInfoToEmbeddedTextInfo(media, Constants.CC1, 'eng');\n                        mediaArr.push(media);\n                        media = null;\n                    }\n                }\n            } else if (type === Constants.IMAGE) {\n                convertVideoInfoToThumbnailInfo(media);\n                mediaArr.push(media);\n                media = null;\n            } else if (media) {\n                mediaArr.push(media);\n            }\n        }\n\n        return mediaArr;\n    }\n\n    function checkSetConfigCall() {\n        if (!dashManifestModel || !dashManifestModel.hasOwnProperty('getMpd') || !dashManifestModel.hasOwnProperty('getRegularPeriods')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updatePeriods(newManifest) {\n        if (!newManifest) return null;\n\n        checkSetConfigCall();\n\n        const mpd = dashManifestModel.getMpd(newManifest);\n\n        voPeriods = dashManifestModel.getRegularPeriods(mpd);\n        voAdaptations = {};\n    }\n\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\n        const streams = [];\n        let voLocalPeriods = voPeriods;\n\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\n        if (externalManifest) {\n            checkSetConfigCall();\n            const mpd = dashManifestModel.getMpd(externalManifest);\n\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\n        }\n\n        if (!maxStreamsInfo) {\n            maxStreamsInfo = voLocalPeriods.length;\n        }\n        for (let i = 0; i < maxStreamsInfo; i++) {\n            streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\n        }\n\n        return streams;\n    }\n\n    function checkStreamProcessor(streamProcessor) {\n        if (!streamProcessor || !streamProcessor.hasOwnProperty('getRepresentationController') || !streamProcessor.hasOwnProperty('getIndexHandler') ||\n            !streamProcessor.hasOwnProperty('getMediaInfo') || !streamProcessor.hasOwnProperty('getType') || !streamProcessor.hasOwnProperty('getStreamInfo')) {\n            throw new Error('streamProcessor parameter is missing or malformed!');\n        }\n    }\n\n    function checkRepresentationController(representationController) {\n        if (!representationController || !representationController.hasOwnProperty('getRepresentationForQuality') || !representationController.hasOwnProperty('getCurrentRepresentation')) {\n            throw new Error('representationController parameter is missing or malformed!');\n        }\n    }\n\n    function getInitRequest(streamProcessor, quality) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        checkStreamProcessor(streamProcessor);\n        checkInteger(quality);\n\n        representationController = streamProcessor.getRepresentationController();\n        indexHandler = streamProcessor.getIndexHandler();\n\n        representation = representationController ? representationController.getRepresentationForQuality(quality) : null;\n\n        return indexHandler ? indexHandler.getInitRequest(representation) : null;\n    }\n\n    function getFragmentRequest(streamProcessor, representationInfo, time, options) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        let fragRequest = null;\n\n        checkStreamProcessor(streamProcessor);\n\n        representationController = streamProcessor.getRepresentationController();\n        representation = getRepresentationForRepresentationInfo(representationInfo, representationController);\n        indexHandler = streamProcessor.getIndexHandler();\n\n        if (indexHandler) {\n            //if time and options are undefined, it means the next segment is requested\n            //otherwise, the segment at this specific time is requested.\n            if (time !== undefined && options !== undefined) {\n                fragRequest = indexHandler.getSegmentRequestForTime(representation, time, options);\n            } else {\n                fragRequest = indexHandler.getNextSegmentRequest(representation);\n            }\n        }\n\n        return fragRequest;\n    }\n\n    function getIndexHandlerTime(streamProcessor) {\n        checkStreamProcessor(streamProcessor);\n\n        const indexHandler = streamProcessor.getIndexHandler();\n\n        return indexHandler ? indexHandler.getCurrentTime() : NaN;\n    }\n\n    function setIndexHandlerTime(streamProcessor, value) {\n        checkStreamProcessor(streamProcessor);\n\n        const indexHandler = streamProcessor.getIndexHandler();\n        if (indexHandler) {\n            indexHandler.setCurrentTime(value);\n        }\n    }\n\n    function resetIndexHandler(streamProcessor) {\n        checkStreamProcessor(streamProcessor);\n\n        const indexHandler = streamProcessor.getIndexHandler();\n        if (indexHandler) {\n            indexHandler.resetIndex();\n        }\n    }\n\n    function updateData(streamProcessor) {\n        checkStreamProcessor(streamProcessor);\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamProcessor.getStreamInfo(), voPeriods);\n        const mediaInfo = streamProcessor.getMediaInfo();\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\n        const type = streamProcessor.getType();\n\n        let id,\n            realAdaptation;\n\n        id = mediaInfo ? mediaInfo.id : null;\n        if (voPeriods.length > 0) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo.index, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n            streamProcessor.getRepresentationController().updateData(realAdaptation, voAdaptation, type);\n        }\n    }\n\n    /**\n     * Get a specific voRepresentation. If quality parameter is defined, this function will return the voRepresentation for this quality.\n     * Otherwise, this function will return the current voRepresentation used by the representationController.\n     * @param {RepresentationController} representationController - RepresentationController reference\n     * @param {number} quality - quality index of the voRepresentaion expected.\n     */\n    function getRepresentationInfo(representationController, quality) {\n        checkRepresentationController(representationController);\n        let voRepresentation;\n\n        if (quality !== undefined) {\n            checkInteger(quality);\n            voRepresentation = representationController.getRepresentationForQuality(quality);\n        } else {\n            voRepresentation = representationController.getCurrentRepresentation();\n        }\n\n        return voRepresentation ? convertRepresentationToRepresentationInfo(voRepresentation) : null;\n    }\n\n    function getEvent(eventBox, eventStreams, startTime) {\n        if (!eventBox || !eventStreams) {\n            return null;\n        }\n        const event = new Event();\n        const schemeIdUri = eventBox.scheme_id_uri;\n        const value = eventBox.value;\n        const timescale = eventBox.timescale;\n        const presentationTimeDelta = eventBox.presentation_time_delta;\n        const duration = eventBox.event_duration;\n        const id = eventBox.id;\n        const messageData = eventBox.message_data;\n        const presentationTime = startTime * timescale + presentationTimeDelta;\n\n        if (!eventStreams[schemeIdUri + '/' + value]) return null;\n\n        event.eventStream = eventStreams[schemeIdUri + '/' + value];\n        event.eventStream.value = value;\n        event.eventStream.timescale = timescale;\n        event.duration = duration;\n        event.id = id;\n        event.presentationTime = presentationTime;\n        event.messageData = messageData;\n        event.presentationTimeDelta = presentationTimeDelta;\n\n        return event;\n    }\n\n    function getEventsFor(info, streamProcessor) {\n        let events = [];\n\n        if (voPeriods.length === 0) {\n            return events;\n        }\n\n        const manifest = voPeriods[0].mpd.manifest;\n\n        if (info instanceof StreamInfo) {\n            events = dashManifestModel.getEventsForPeriod(getPeriodForStreamInfo(info, voPeriods));\n        } else if (info instanceof MediaInfo) {\n            events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\n        } else if (info instanceof RepresentationInfo) {\n            events = dashManifestModel.getEventStreamForRepresentation(manifest, getRepresentationForRepresentationInfo(info, streamProcessor.getRepresentationController()));\n        }\n\n        return events;\n    }\n\n    function setCurrentMediaInfo(streamId, type, mediaInfo) {\n        currentMediaInfo[streamId] = currentMediaInfo[streamId] || {};\n        currentMediaInfo[streamId][type] = currentMediaInfo[streamId][type] || {};\n        currentMediaInfo[streamId][type] = mediaInfo;\n    }\n\n    function reset() {\n        voPeriods = [];\n        voAdaptations = {};\n        currentMediaInfo = {};\n    }\n\n    instance = {\n        convertDataToRepresentationInfo: convertRepresentationToRepresentationInfo,\n        getDataForMedia: getAdaptationForMediaInfo,\n        getStreamsInfo: getStreamsInfo,\n        getMediaInfoForType: getMediaInfoForType,\n        getAllMediaInfoForType: getAllMediaInfoForType,\n        getRepresentationInfo: getRepresentationInfo,\n        getAdaptationForType: getAdaptationForType,\n        updateData: updateData,\n        getInitRequest: getInitRequest,\n        getFragmentRequest: getFragmentRequest,\n        getIndexHandlerTime: getIndexHandlerTime,\n        setIndexHandlerTime: setIndexHandlerTime,\n        getEventsFor: getEventsFor,\n        getEvent: getEvent,\n        setConfig: setConfig,\n        updatePeriods: updatePeriods,\n        reset: reset,\n        resetIndexHandler: resetIndexHandler,\n        setCurrentMediaInfo: setCurrentMediaInfo\n    };\n\n    setup();\n    return instance;\n}\n\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\n"]}